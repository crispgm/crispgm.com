user  www-data;
worker_processes  4;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for" '
        ;

    access_log  logs/access.log  main;

    sendfile        on;
#tcp_nopush     on;

#keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    server {
        listen       80;
        server_name  crispgm.com;
        charset utf-8;
        log_not_found off;

        rewrite "^/(.*)$" https://crispgm.com/$1 break;
        more_clear_headers "Server";
        more_set_headers "Server: nginx/crisp";

        location /favicon.ico {
            return 404;
        }

#error_page  404              /404.html;

# redirect server error pages to the static page /50x.html
#
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

# proxy the PHP scripts to Apache listening on 127.0.0.1:80
#
#location ~ \.php$ {
#    proxy_pass   http://127.0.0.1;
#}

# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#
#location ~ \.php$ {
#    root           html;
#    fastcgi_pass   127.0.0.1:9000;
#    fastcgi_index  index.php;
#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#    include        fastcgi_params;
#}

# deny access to .htaccess files, if Apache's document root
# concurs with nginx's one
#
#location ~ /\.ht {
#    deny  all;
#}
    }

# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#    listen       8000;
#    listen       somename:8080;
#    server_name  somename  alias  another.alias;

#    location / {
#        root   html;
#        index  index.html index.htm;
#    }
#}

    server {
        listen       80;
        server_name  yeyeko.gift;

        charset utf-8;

        root /home/yeyeko.gift;

        log_not_found off;
        rewrite "^/(.*)$" https://yeyeko.gift/$1 break;
    }

    server {
        listen       80;
        server_name  crisp.lol
                     www.crisp.lol;
        charset utf-8;
        log_not_found off;
        rewrite "^/(.*)$" https://crisp.lol/$1 break;
    }


# HTTPS server
#
    server {
        listen       443 ssl http2;
        server_name  crispgm.com;

        ssl_certificate      /etc/letsencrypt/live/crispgm.com/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/crispgm.com/privkey.pem;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  1440m;

        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-ECDSA-AES128-SHA ECDHE-ECDSA-AES256-SHA ECDHE-ECDSA-AES128-SHA256 ECDHE-ECDSA-AES256-SHA384 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES256-GCM-SHA384 ECDHE-RSA-AES128-SHA ECDHE-RSA-AES128-SHA256 ECDHE-RSA-AES256-SHA384 DHE-RSA-AES128-GCM-SHA256 DHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES128-SHA DHE-RSA-AES256-SHA DHE-RSA-AES128-SHA256 DHE-RSA-AES256-SHA256 EDH-RSA-DES-CBC3-SHA";
        ssl_prefer_server_ciphers  on;

        log_not_found off;

        location /resume/ {
            root   /home/;
            index  resume.html;
        }

        location / {
            root   /home/crispgm.com/;
            index  index.html;
            more_clear_headers "Server";
            more_set_headers "Server: nginx/crisp";
            error_page 404 /404.html;
        }

        location /favicon.ico {
            return 404;
        }
    }

    server {
        listen       443 ssl http2;
        server_name  crisp.lol;

        ssl_certificate      /etc/letsencrypt/live/crisp.lol/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/crisp.lol/privkey.pem;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  1440m;

        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-ECDSA-AES128-SHA ECDHE-ECDSA-AES256-SHA ECDHE-ECDSA-AES128-SHA256 ECDHE-ECDSA-AES256-SHA384 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES256-GCM-SHA384 ECDHE-RSA-AES128-SHA ECDHE-RSA-AES128-SHA256 ECDHE-RSA-AES256-SHA384 DHE-RSA-AES128-GCM-SHA256 DHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES128-SHA DHE-RSA-AES256-SHA DHE-RSA-AES128-SHA256 DHE-RSA-AES256-SHA256 EDH-RSA-DES-CBC3-SHA";
        ssl_prefer_server_ciphers  on;

        log_not_found off;

        location / {
            root   /home/crispgm.com/;
            index  index.html;
            more_clear_headers "Server";
            more_set_headers "Server: nginx/crisp";
            error_page 404 /404.html;
        }

        location /favicon.ico {
            return 404;
        }
    }

    server {
        listen       443 ssl http2;
        server_name  yeyeko.gift;

        ssl_certificate      /etc/letsencrypt/live/yeyeko.gift/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/yeyeko.gift/privkey.pem;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  1440m;

        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-ECDSA-AES128-SHA ECDHE-ECDSA-AES256-SHA ECDHE-ECDSA-AES128-SHA256 ECDHE-ECDSA-AES256-SHA384 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES256-GCM-SHA384 ECDHE-RSA-AES128-SHA ECDHE-RSA-AES128-SHA256 ECDHE-RSA-AES256-SHA384 DHE-RSA-AES128-GCM-SHA256 DHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES128-SHA DHE-RSA-AES256-SHA DHE-RSA-AES128-SHA256 DHE-RSA-AES256-SHA256 EDH-RSA-DES-CBC3-SHA";
        ssl_prefer_server_ciphers  on;

        log_not_found off;

        location / {
            root   /home/yeyeko.gift;
            index  index.html index.htm;
            more_clear_headers "Server";
            more_set_headers "Server: nginx/crisp";
        }

        location /favicon.ico {
            return 404;
        }
    }
}
