<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>David Zhang</title>
    <description>Home page and blog of David Zhang (@crispgm), a minimalist programmer, photographer, and lifehacker.</description>
    <link>https://crispgm.com/</link>
    <atom:link href="https://crispgm.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 23 Jun 2019 13:35:31 +0800</pubDate>
    <lastBuildDate>Sun, 23 Jun 2019 13:35:31 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      
      <item>
        <title>Go Module in Action</title>
        <description>&lt;p&gt;For a long time, Golang provides an extremely simple dependency management model. It just depends on Git repos and actually its &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;If you have experience on concepts and tools like monorepo/Gerrit, you can easily get the point why it was initially designed like this&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; including the existence of &lt;code class=&quot;highlighter-rouge&quot;&gt;GOPATH&lt;/code&gt;. That is because &lt;strong&gt;Google&lt;/strong&gt; uses monorepo.&lt;/p&gt;

&lt;p&gt;There are some advantages claimed&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; and Golang’s dependency management could work on that well.&lt;/p&gt;

&lt;p&gt;However, monorepo does not dominate the world. The dominance of open source community is GitHub. In contrast, GitHub follows fork &amp;amp; pull request workflow.&lt;/p&gt;

&lt;p&gt;This (Go’s dependency management design) leads to lots of issues:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;No tag, no semver. When &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; makes breaking change, it breaks build.&lt;/li&gt;
  &lt;li&gt;Not compatible with GitHub’s fork model, unless you make some hack on Git remote&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To make it easier, there are some efforts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://glide.sh/&quot;&gt;Glide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://labix.org/gopkg.in&quot;&gt;Gopkg.in&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kardianos/govendor&quot;&gt;Govendor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/dep&quot;&gt;Go Dep&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By these tools, we may handle vendors better. But these tools are not officialy supported and it needs commit all vendor packages to repository! Can you imagine a frontend or Node.js project commits its &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;? This is ridiculous.&lt;/p&gt;

&lt;h2 id=&quot;go-module&quot;&gt;Go Module&lt;/h2&gt;

&lt;p&gt;I don’t know the decision process, but Golang team finally launched Go Module in 1.11, which embraces the non-monorepo part of the world.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;No &lt;code class=&quot;highlighter-rouge&quot;&gt;GOPATH&lt;/code&gt;, and now we can clone to anywhere.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;go get&lt;/code&gt; inside a repo is not global, it works only at local.&lt;/li&gt;
  &lt;li&gt;No &lt;code class=&quot;highlighter-rouge&quot;&gt;vendor&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Dependencies are defined in &lt;code class=&quot;highlighter-rouge&quot;&gt;go.mod&lt;/code&gt; with git tags, commit hashes, and semver.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-to&quot;&gt;HOW TO&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Install or upgrade to Go &amp;gt;=1.11 (currently 1.12)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enable Go Module, edit &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt;:&lt;/p&gt;

    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GO111MODULE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Initialize Go Module&lt;/p&gt;

    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; go mod init &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;commands&quot;&gt;Commands&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Add missing and remove unused modules&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;go mod tidy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Add new module&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;go get github.com/crispgm/go-g
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Update a module&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;go get &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; github.com/crispgm/go-g
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Update all modules&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;go get &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Get specific version of module&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;go get github.com/crispgm/go-g@master
go get github.com/crispgm/go-g@1.0.0
go get github.com/crispgm/go-g@617f32e
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Make vendored copy of dependencies&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;go mod vendor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I highly &lt;strong&gt;not&lt;/strong&gt; recommend this, since getting rid of vendor is one of the major advantages of Go Module.&lt;/p&gt;

&lt;h2 id=&quot;editors-support&quot;&gt;Editor’s Support&lt;/h2&gt;

&lt;h3 id=&quot;vscode&quot;&gt;VSCode&lt;/h3&gt;

&lt;p&gt;There is a &lt;a href=&quot;https://github.com/Microsoft/vscode-go/wiki/Go-modules-support-in-Visual-Studio-Code&quot;&gt;Go modules support&lt;/a&gt; guide in &lt;a href=&quot;https://github.com/microsoft/vscode-go&quot;&gt;vscode-go&lt;/a&gt; plugin. It is actually very easy that we just need to enable Language Server for go by adding one line to &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.json&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;go.useLanguageServer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;troubles-encountered&quot;&gt;Troubles Encountered&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;“Dependency’s Dependency”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of our in-house library depends on &lt;a href=&quot;https://github.com/satori/go.uuid&quot;&gt;satori/go.uuid&lt;/a&gt;, with traditional &lt;code class=&quot;highlighter-rouge&quot;&gt;go get&lt;/code&gt; it means depend on &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;. But Go Module got the latest tag by default. So the solution should be:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;go get &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; github.com/satori/go.uuid@master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Got “ambiguous import: found github.com/ugorji/go/codec in multiple modules”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is actually caused by &lt;a href=&quot;https://github.com/gin-gonic/gin&quot;&gt;gin-gonic/gin&lt;/a&gt; (the web framework we use) and there is a &lt;a href=&quot;https://github.com/gin-gonic/gin/issues/1673&quot;&gt;solution&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;Add the following to &lt;code class=&quot;highlighter-rouge&quot;&gt;go.mod&lt;/code&gt; to solve the trouble.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;replace github.com/ugorji/go v1.1.4 &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; github.com/ugorji/go/codec v0.0.0-20190204201341-e444a5086c43
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Go Module is not a silver bullet, and it is more a compatibility than a fix. But for me, it is great improvement.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://benjvi.com/2016/07/05/Dependency-Management-In-Golang&quot;&gt;http://benjvi.com/2016/07/05/Dependency-Management-In-Golang&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Monorepo&quot;&gt;https://en.wikipedia.org/wiki/Monorepo&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://dev.to/loderunner/working-with-forks-in-go-3ab6&quot;&gt;https://dev.to/loderunner/working-with-forks-in-go-3ab6&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 12 Jun 2019 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/go-module-in-action.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/go-module-in-action.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>How to be a 100x Programmer?</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;A 10x programmer is, in the mythology of programming, a programmer that can do ten times the work of another normal programmer, where for normal programmer we can imagine one good at doing its work, but without the magical abilities of the 10x programmer.&lt;/p&gt;

  &lt;p&gt;– &lt;a href=&quot;http://antirez.com/news/112&quot;&gt;The mythical 10x programmer&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Every programmer is a unique person, and he/she may improve his/her productivity in various ways.&lt;/p&gt;

&lt;p&gt;As an old Chinese proverb said:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;工欲善其事，必先利其器 (To do a good job, an artisan needs the best tools)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At least we should use some powerful tools to boost our productivity. Even if a tool may only increase 10x at most, it multiplies.&lt;/p&gt;

&lt;p&gt;Let me show a example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tool No1 (10x)&lt;/li&gt;
  &lt;li&gt;Tool No.2 (3x)&lt;/li&gt;
  &lt;li&gt;Tool No.3 (2x)&lt;/li&gt;
  &lt;li&gt;Tool No.4 (1.6x)&lt;/li&gt;
  &lt;li&gt;Tool No.5 (1.1x)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Total: 10x * 2x * 1.5x * 3x * 1.1x = 100x&lt;/p&gt;

&lt;h1 id=&quot;solutions&quot;&gt;Solutions&lt;/h1&gt;

&lt;h3 id=&quot;zsh--oh-my-zsh&quot;&gt;zsh &amp;amp; oh-my-zsh&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zsh.org/&quot;&gt;zsh&lt;/a&gt; provides more power than bash and &lt;a href=&quot;https://ohmyz.sh/&quot;&gt;oh-my-zsh&lt;/a&gt; make it be powerful out-of-box, with great tab completion, clever aliases, and themes &amp;amp; plugins system.&lt;/p&gt;

&lt;p&gt;Here is what happened after I typed &lt;code class=&quot;highlighter-rouge&quot;&gt;git &amp;lt;tab&amp;gt;&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/zsh-git-completion.png&quot; alt=&quot;zsh-git-completion&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Install zsh:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;zsh zsh-completions
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;chsh &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /bin/zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Install oh-my-zsh:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; -&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And Oh My Zsh indicates its BOOST officially.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Oh My Zsh will not make you a 10x developer…but you might feel like one.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now that it claims to make you “feel like” a 10x developer, I think it must be true.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BOOST&lt;/strong&gt;: 10x, &lt;strong&gt;PROGRESS: 10%&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;tmux&quot;&gt;tmux&lt;/h3&gt;

&lt;p&gt;tmux is a terminal multiplexer. It is not only multiplexes terminals, but also multiplexes our productivity.&lt;/p&gt;

&lt;p&gt;With tmux, we may open and keep multiple sessions in a terminal, open windows (actually tabs) inside a session, and even split windows to panes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/tmux-example.png&quot; alt=&quot;tmux-example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And &lt;a href=&quot;https://github.com/gpakosz/.tmux&quot;&gt;gpakosz/.tmux&lt;/a&gt; is just like &lt;code class=&quot;highlighter-rouge&quot;&gt;oh-my-tmux&lt;/code&gt;. If we do not want to setup tmux configuration by ourselves, checkout this one.&lt;/p&gt;

&lt;p&gt;Install tmux:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;tmux
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Install gpakosz/.tmux:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/gpakosz/.tmux.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ln&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; .tmux/.tmux.conf
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; .tmux/.tmux.conf.local &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;BOOST&lt;/strong&gt;: 2x, &lt;strong&gt;PROGRESS: 20%&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;fzf&quot;&gt;fzf&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/junegunn/fzf&quot;&gt;fzf&lt;/a&gt; is a command-line fuzzy finder.&lt;/p&gt;

&lt;p&gt;It’s a great replacement to the default &amp;lt;CTRL+R&amp;gt; but have more features, which is fuzzy and can be used with any lists.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/fzf-fuzzy-example.png&quot; alt=&quot;fzf-fuzzy-example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I think it a must-have one.&lt;/p&gt;

&lt;p&gt;Install fzf:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;fzf
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;brew &lt;span class=&quot;nt&quot;&gt;--prefix&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/opt/fzf/install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Enable fzf in &lt;code class=&quot;highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ~/.fzf.zsh &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.fzf.zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;BOOST&lt;/strong&gt;: 1.5x, &lt;strong&gt;PROGRESS: 30%&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;neovim&quot;&gt;Neovim&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://neovim.io/&quot;&gt;Neovim&lt;/a&gt; a Vim-fork focused on extensibility and usability. If you are already a hardcore vim user, you may keep your choice. It makes no difference between the usabilities but provides modern GUIs, asynchronous job control, and API based on RPC. As a result, it is now really easy to develop a new plugin with popular programming languages compared to old-school VimScript.&lt;/p&gt;

&lt;p&gt;Install Neovim:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;neovim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And we may “replace” vim with nvim in case you like:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;vim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nvim&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;HINT: Neovim do not use &lt;code class=&quot;highlighter-rouge&quot;&gt;.vimrc&lt;/code&gt;, it support XDG base directories by default.&lt;/p&gt;

&lt;p&gt;We now should setup in &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.config/nvim/init.vim&lt;/code&gt;. Just copy your &lt;code class=&quot;highlighter-rouge&quot;&gt;.vimrc&lt;/code&gt; here, it mostly works.&lt;/p&gt;

&lt;p&gt;And I recommend &lt;a href=&quot;https://github.com/Shougo/dein.vim&quot;&gt;Shougo/dein.vim&lt;/a&gt; as a plugin manager, which is “dark powered”. Vim/Neovim plugins is another big topic. For myself, I use deoplete, NERDTree, and vim-airline.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BOOST&lt;/strong&gt;: 3x, &lt;strong&gt;PROGRESS: 90%&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;themes--colorschemes&quot;&gt;Themes &amp;amp; Colorschemes&lt;/h3&gt;

&lt;p&gt;Colors are important to programmer, because we actually stare at the screen, terminal, and editor for the most time, especially the coding period.&lt;/p&gt;

&lt;p&gt;I recommend &lt;a href=&quot;https://www.nordtheme.com/&quot;&gt;Nord&lt;/a&gt; here. It is “an arctic, north-bluish color palette” and provides various ports officially. Thus, we can use Nord as theme or colorscheme in whatever libraries, tools, editors, and et cetera.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nord-ports.png&quot; alt=&quot;nord ports&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It could calm developer down, improve eyesight, and even prevent bugs. IMO, it increases productivity by about 10%, not that big but take effects on multiple places.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BOOST:&lt;/strong&gt; 1.1x, &lt;strong&gt;PROGRESS: 100%&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;The productivity of a developer can largely improves with an approachable toolset indeed. Get the tools ready is the first step. There are still 99% other parts to be concerned, especially our efforts.&lt;/p&gt;

&lt;p&gt;Thanks for reading this article.&lt;/p&gt;
</description>
        <pubDate>Sun, 21 Apr 2019 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/how-to-be-a-100x-programmer.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/how-to-be-a-100x-programmer.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Homebrew 深度应用</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;macOS 上各种软件的管理，只要有 Homebrew 就足够了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;简介&quot;&gt;简介&lt;/h1&gt;

&lt;p&gt;Homebrew 是一款享有盛名的包管理工具，是 macOS 上包管理的事实(de facto)标准 。Homebrew 的意思是家酿啤酒。&lt;/p&gt;

&lt;p&gt;它的官方 slogan 是 The missing package manager for macOS (or Linux)。Linuxbrew 已经在 Homebrew 1.9正式合入，成为 Homebrew 的“一等公民”&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;Homebrew 最早的创建者是 Max Howell，目前的主要维护者是 Mike McQuaid。同 Jekyll 等开源项目一样，Homebrew 的核心维护者也是 GitHub 的员工。GitHub 对于员工亲自参加开源项目方面，做得一直不错。&lt;/p&gt;

&lt;p&gt;顺带插播一条奇闻逸事：Homebrew 的创始人 Max Howell 活跃在开源社区，目前主要从事 Swift 相关的库开发。他在2015年初曾去 Google 面试，因为“白板”写算法题「翻转二叉树」失败，愤而发 tweet 讽刺：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Google: 90% of our engineers use the software you wrote (Homebrew), but you can’t invert a binary tree on a whiteboard so fuck off. &lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;why-homebrew&quot;&gt;Why Homebrew&lt;/h3&gt;

&lt;p&gt;对于使用 Unix/Linux 类系统的用户往往都遇到过这些需求：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;开源程序是源码分发，需要自己编译，但 &lt;code class=&quot;highlighter-rouge&quot;&gt;./configure&lt;/code&gt; 参数超多，还要解决各种库的依赖&lt;/li&gt;
  &lt;li&gt;想把软件安装到用户目录，而不是系统目录（这样不需要 root 权限）&lt;/li&gt;
  &lt;li&gt;自己编译安装了软件，想删除时却不知道在哪里删除和删除哪些文件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;各 Linux 发行版为了提升安装软件的体验，大多都提供了官方的包管理器，如 Ubuntu 的 aptitude (apt-get)。而苹果官方没有为 macOS 提供包管理器，市面上最好的解决方案就是 Homebrew。&lt;/p&gt;

&lt;p&gt;目前 Homebrew 的中文内容大多以简单入门级教程为主，对于它的各类能力提之甚少，我希望在这里更全面的分享 Homebrew。&lt;/p&gt;

&lt;h1 id=&quot;快速入门&quot;&gt;快速入门&lt;/h1&gt;

&lt;p&gt;网上基础的教程很多，我这里只简略的介绍下。对于基础功能类的深度用法，推荐这篇 &lt;a href=&quot;https://swiftcafe.io/post/home-brew&quot;&gt;macOS 包管理工具 Homebrew 不完全指南&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;安装&quot;&gt;安装&lt;/h3&gt;

&lt;p&gt;开始安装前需要安装 macOS 命令行工具：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;xcode-select —install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;或者，在&lt;a href=&quot;https://developer.apple.com/download/more/&quot;&gt;https://developer.apple.com/download/more/&lt;/a&gt;下载安装。&lt;/p&gt;

&lt;p&gt;然后执行：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;/usr/bin/ruby &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;基础功能&quot;&gt;基础功能&lt;/h3&gt;

&lt;h5 id=&quot;安装-1&quot;&gt;安装&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;wget
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;完成安装后可以列出已安装内容：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew list
wget
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;升级&quot;&gt;升级&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 显示可以升级的包&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew outdated
cmake &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.13.4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &amp;lt; 3.14.0
yarn &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.13.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &amp;lt; 1.15.2
youtube-dl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2019.03.09&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &amp;lt; 2019.03.18

&lt;span class=&quot;c&quot;&gt;# 进行升级&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew upgrade cmake
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;删除&quot;&gt;删除&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew uninstall wget
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;安装桌面程序&quot;&gt;安装桌面程序&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew cask &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;google-chrome
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;对于 Homebrew-cask 管理桌面程序，这里先不细说，后面会专门讲。&lt;/p&gt;

&lt;p&gt;Homebrew 会把软件安装到 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/Cellar&lt;/code&gt;，并且通过软链链接到 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/bin&lt;/code&gt;。我们可以通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;brew unlink&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;brew link&lt;/code&gt; 删除或创建链接。&lt;/p&gt;

&lt;h3 id=&quot;名词解释&quot;&gt;名词解释&lt;/h3&gt;

&lt;p&gt;Homebrew 把软件安装过程中的各种名词都进行了拟物化命名&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;，这些命名挺有意思，但对于大多数英语水平一般的人来说，有不少词汇有些生僻。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;英文&lt;/th&gt;
      &lt;th&gt;直译&lt;/th&gt;
      &lt;th&gt;实际含义&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;formula(e)&lt;/td&gt;
      &lt;td&gt;公式&lt;/td&gt;
      &lt;td&gt;安装包的描述文件，formulae 为复数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cellar&lt;/td&gt;
      &lt;td&gt;地窖&lt;/td&gt;
      &lt;td&gt;安装好后所在的目录&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;keg&lt;/td&gt;
      &lt;td&gt;小桶&lt;/td&gt;
      &lt;td&gt;具体某个包所在的目录，keg 是 cellar 的子目录&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bottle&lt;/td&gt;
      &lt;td&gt;瓶子&lt;/td&gt;
      &lt;td&gt;预先编译好的包，不需要现场下载编译源码，速度会快很多；&lt;br /&gt;官方库中的包大多都是通过 bottle 方式安装&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tap&lt;/td&gt;
      &lt;td&gt;(插入)水龙头&lt;/td&gt;
      &lt;td&gt;下载启用某个源&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cask&lt;/td&gt;
      &lt;td&gt;木桶&lt;/td&gt;
      &lt;td&gt;安装 macOS native 应用的扩展&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bundle&lt;/td&gt;
      &lt;td&gt;捆&lt;/td&gt;
      &lt;td&gt;描述 Homebrew 依赖的扩展&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;进阶用法&quot;&gt;进阶用法&lt;/h1&gt;

&lt;p&gt;对于 Homebrew，我们很多时候往往都是上来就&lt;code class=&quot;highlighter-rouge&quot;&gt;brew search&lt;/code&gt;或是&lt;code class=&quot;highlighter-rouge&quot;&gt;brew install&lt;/code&gt;。缺什么安什么，没有充分的应用它的强大能力。&lt;/p&gt;

&lt;p&gt;首先，Homebrew 虽为解决控制台程序而生，但它完全有能力（Cask）安装任何桌面软件。它还支持丰富的分类目软件库或第三方库。&lt;/p&gt;

&lt;p&gt;除此之外，它还有一个打包安装或备份工具，可以把已安装的软件输出成 Brewfile。迁移到新电脑时，只要根据 Brewfile 运行 Homebrew bundle，就可以一键安装全部控制台、桌面和来自 Mac App Store 的程序（Mac App Store 上的软件通过 &lt;a href=&quot;https://github.com/mas-cli/mas&quot;&gt;mas&lt;/a&gt; 支持）。&lt;/p&gt;

&lt;h3 id=&quot;tap&quot;&gt;Tap&lt;/h3&gt;

&lt;p&gt;Tap 在 Homebrew 中我理解是个动词，指的是启用某个源。实际看了下发现，homebrew-services 和 homebrew-bundle 也已 tap 形式存在，因此可以认为 tap 实际指的应该是扩展（extension）。&lt;/p&gt;

&lt;p&gt;Homebrew 默认情况下会自带：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;homebrew/core&lt;/li&gt;
  &lt;li&gt;homebrew/cask&lt;/li&gt;
  &lt;li&gt;homebrew/services&lt;/li&gt;
  &lt;li&gt;homebrew/bundle&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;后两者并没有任何公式配方，而只是扩展程序。&lt;/p&gt;

&lt;p&gt;除此之外的源，需要通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;brew tap&lt;/code&gt;来启用。如：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew tap heroku/brew
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;heroku
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;services&quot;&gt;Services&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Homebrew/homebrew-services&quot;&gt;Homebrew-services&lt;/a&gt; 是 Homebrew 的后台服务程序扩展，它基于 macOS 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;launchctl&lt;/code&gt;。后台服务类程序的安装依旧使用 Homebrew，在管理时可以使用 Homebrew-services 进行启动、重启和停止等操作。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mysql
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew services start mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;cask&quot;&gt;Cask&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;Homebrew-cask&lt;/a&gt; 是 Homebrew 的 macOS Native 应用扩展，通过 cask 可以安装各类应用程序。&lt;/p&gt;

&lt;p&gt;搜索 Cask 的方法和搜索普通包一样，但安装时需要加上 cask 指令：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew search google-chrome
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew cask &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;google-chrome
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;cask-versions&quot;&gt;cask-versions&lt;/h5&gt;

&lt;p&gt;Homebrew Cask 和 Homebrew 一样，默认库只维护最新版本，但有的时候我们还是需要用旧版的（比如：我只有 Dash 3 的 License，所以需要用 Dash 3 而不是最新的 Dash 4），那就可能需要使用 cask-versions。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew tap homebrew/cask-versions
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew cask &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;dash3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;cask-fonts&quot;&gt;cask-fonts&lt;/h5&gt;

&lt;p&gt;Homebrew 官方的字体源，比如 Mozilla 的开源字体 Fira Code：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew tap homebrew/cask-fonts
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew cask &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;font-fira-code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;bundle&quot;&gt;Bundle&lt;/h3&gt;

&lt;p&gt;Homebrew 不仅仅是一个包管理器，还具有软件依赖管理能力。通过 &lt;a href=&quot;https://github.com/Homebrew/homebrew-bundle&quot;&gt;Homebrew Bundle&lt;/a&gt; 可以帮你解决所有软件依赖，包括官方和第三方的 formula 以及 cask，甚至还包括 Mac App Store（简称 mas）中的应用。&lt;/p&gt;

&lt;p&gt;Homebrew 默认就安装了 Homebrew Bundle。&lt;/p&gt;

&lt;p&gt;我们只需要一个&lt;code class=&quot;highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt;，就可以配置好所有需要的应用。熟悉 Ruby 的人应该不太需要解释，毕竟 Ruby 自己就有 Bundler 这套东西，Brewfile 和 Gemfile 属于对应关系。&lt;/p&gt;

&lt;p&gt;如果你的安装列表已经足够“干净”，那么可以执行&lt;code class=&quot;highlighter-rouge&quot;&gt;brew bundle dump&lt;/code&gt;来生成现有依赖，输出到&lt;code class=&quot;highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew bundle dump
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;Brewfile

brew &lt;span class=&quot;s2&quot;&gt;&quot;git&quot;&lt;/span&gt;
brew &lt;span class=&quot;s2&quot;&gt;&quot;wget&quot;&lt;/span&gt;
brew &lt;span class=&quot;s2&quot;&gt;&quot;mas&quot;&lt;/span&gt;
brew &lt;span class=&quot;s2&quot;&gt;&quot;p7zip&quot;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果想自己写也比较容易，&lt;code class=&quot;highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt;是一种简单的 Ruby DSL，写起来比大部分配置文件都简单。只需要掌握一些常用到的命令，主要有&lt;code class=&quot;highlighter-rouge&quot;&gt;brew&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;tap&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;cask&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;mas&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;这四条命令分别对应：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;brew install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;brew tap&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;brew cask install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mas install&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;注：mas 也就是&lt;a href=&quot;https://crispgm.com/page/awesome-terminal-tools.html#mas&quot;&gt;之前文章中&lt;/a&gt;介绍过的 Mac App Store 命令行工具&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;命令行类应用：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;git&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;wget&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;vim&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;非命令行类：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;google-chrome&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;alfred&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;visual-studio-code&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;非官方 Formula 应用：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;tap&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;homebrew/cask-versions&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dash3&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tap&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;homebrew/cask-fonts&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;font-source-code-pro&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Mac App Store 上的应用：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mas&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;WeChat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;836500024&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;因此，维护好 &lt;a href=&quot;https://github.com/crispgm/dotfiles/blob/master/Brewfile&quot;&gt;Brewfile&lt;/a&gt; 就可以完美解决应用自动化安装，只需要运行：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew bundle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;扩展用法&quot;&gt;扩展用法&lt;/h1&gt;

&lt;h3 id=&quot;提交-formula&quot;&gt;提交 Formula&lt;/h3&gt;

&lt;p&gt;创建并提交一个 Formula 比较容易，官方教程非常详细&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;。这里，我就不做单独介绍了。&lt;/p&gt;

&lt;h3 id=&quot;自建-tap&quot;&gt;自建 Tap&lt;/h3&gt;

&lt;p&gt;Homebrew 除了各种官方维护的源外，还支持自建软件库。默认使用 GitHub，需要以“homebrew-xxx”格式命名 Repo。Formula 或 Cask 文件需要存放在 Formula 或 Casks 二级目录中。&lt;/p&gt;

&lt;p&gt;比如，Heroku 的自建库在 GitHub 上是&lt;code class=&quot;highlighter-rouge&quot;&gt;heroku/homebrew-brew&lt;/code&gt;。通过&lt;code class=&quot;highlighter-rouge&quot;&gt;brew tap heroku/brew&lt;/code&gt;就可以获取库里维护的包了。&lt;/p&gt;

&lt;h2 id=&quot;私有-tap&quot;&gt;私有 Tap&lt;/h2&gt;

&lt;p&gt;上面说到，Tap 默认维护在 GitHub，那么当我们想安装一些需要&lt;strong&gt;保密&lt;/strong&gt;的软件时该怎么办呢？&lt;/p&gt;

&lt;p&gt;答案是 Tap 支持指定 Git，因此也可以使用内网域名内的 Git：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew tap yourcompany/brew git@git.yourcompany.com: yourcompany/homebrew-brew.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;inhouse-app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;tips&quot;&gt;Tips&lt;/h1&gt;

&lt;h5 id=&quot;禁用自动升级&quot;&gt;禁用自动升级&lt;/h5&gt;

&lt;p&gt;Homebrew 自动升级触发概率很高，由于网络等问题，检查更新会很久有时会比较烦。可以通过环境变量禁用自动升级：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;HOMEBREW_NO_AUTO_UPDATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 brew info mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;直接安装-formula&quot;&gt;直接安装 Formula&lt;/h5&gt;

&lt;p&gt;Homebrew 的安装指令并非只支持名字，也可以用文件安装包括网络文件和本地文件。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 本地&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;blabla.rb
&lt;span class=&quot;c&quot;&gt;# 远程&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;https://blablablabla.com/blabla.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;安装旧版软件&quot;&gt;安装旧版软件&lt;/h5&gt;

&lt;p&gt;Homebrew 默认情况下只支持最新版软件安装，有些重要的版本会单独存在。但想安装一些小版本就得自己 DIY 了。&lt;/p&gt;

&lt;p&gt;我所知有两种方法：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;在 GitHub 找到 Formula 所在Repo 中（默认为 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/&quot;&gt;homebrew-core&lt;/a&gt;）的文件，把文件远程地址复制下来，用 &lt;code class=&quot;highlighter-rouge&quot;&gt;brew install&lt;/code&gt; 安装。&lt;/li&gt;
  &lt;li&gt;进入 homebrew-core 在 macOS 本地的路径，默认为 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout&lt;/code&gt;到所在 commit，再用 &lt;code class=&quot;highlighter-rouge&quot;&gt;brew pin&lt;/code&gt; 锁定这个文件的更新，然后进行安装。&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://twitter.com/mxcl/status/608682016205344768&quot;&gt;Max Howell on Twitter: “Google: 90% of our engineers use the software you wrote (Homebrew), but you can’t invert a binary tree on a whiteboard so fuck off.”&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/Linuxbrew/brew/issues/612&quot;&gt;https://github.com/Linuxbrew/brew/issues/612&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://docs.brew.sh/Formula-Cookbook#homebrew-terminology&quot;&gt;Formula Cookbook — Homebrew Documentation&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://tmr08c.github.io/devops/2016/10/24/homebrew-glossary.html&quot;&gt;Glossary of Homebrew Terms&lt;/a&gt; &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://docs.brew.sh/Formula-Cookbook#an-introduction&quot;&gt;Formula Cookbook — Homebrew Documentation&lt;/a&gt; &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 21 Mar 2019 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/dive-in-homebrew.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/dive-in-homebrew.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>盘点2018：我的年度推荐</title>
        <description>&lt;p&gt;看了&lt;a href=&quot;https://sspai.com/page/2018&quot;&gt;少数派 2018 年度盘点&lt;/a&gt;活动，我也来盘点一下自己的年度推荐。推荐的物品并没有购买链接，相信大家会通过自己的方式找到购买或下载方法。&lt;/p&gt;

&lt;h3 id=&quot;硬件&quot;&gt;硬件&lt;/h3&gt;

&lt;p&gt;硬件严格上来说不是2018年的，但实在想推荐一下，还有就是2018的确没买什么太厉害的新硬件。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sonos Play:1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;我一直喜欢专业的东西，只做好一件事情，Sonos 可以说就是这样的。作为一个音响，只能专注地播放音乐。甚至连电脑的声音输出都不支持，同样也不智能。正因为如此，用 Sonos 听歌不会被干扰更有专注性。&lt;/p&gt;

&lt;p&gt;同时，可以集成所有常见的音乐服务提供商，是一种特殊的解决国内不同 App 之间曲库版权差异的方法。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sony W600D 电视&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;买电视也是一定要不智能，无广告秒开机，可惜某些歌华的机顶盒太垃圾启动速度太慢。&lt;/p&gt;

&lt;p&gt;至于为什么能接受这么小的尺寸，客观原因是客厅小和花钱少，主观原因是希望小而美以及信仰充值。&lt;/p&gt;

&lt;h3 id=&quot;软件和服务&quot;&gt;软件和服务&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Telegram&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;并不是刚刚接触的 app，但重拾 Telegram 后，它给我带来了极致的快速响应感。UI 简洁明快，整体感觉比之前常用的微信和 Slack 都快得多。功能上有 &lt;a href=&quot;https://instantview.telegram.org/&quot;&gt;Instant View&lt;/a&gt; 这个神器，再加上有趣的机器人和表情生态，可以及时没什么朋友聊天也能玩的风生水起。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scanner Pro&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;之前对此类 App 有些误解，以为是扫描名片之类的，其实并非如此。在信任和保证安全的前提下，可以用 Scanner Pro 保存个人证件和信用卡等物品复印件，免得每次需要这些信息时要回到家拿原件查询或复印。除此之外，平时的那些说明书也都可以电子化方式保存，之后直接扔掉。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1Password&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;虽然久闻大名，但第一次使用这种密码管理服务，于是选择同类产品中最知名的。我的主要动机是现在密码泄漏事件实在太多了，各种网站都是那几个密码十分危险。1Password 能解决这种烦恼。我的建议是，不那么重要的网站用 1Password 比较好，对于核心的几个账户还是自己编一些能记住的独立的密码，否则 1Password 一旦故障或出现问题或被人“&lt;del&gt;一锅端&lt;/del&gt;”，损失也能够控制得住。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bear&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;废弃了之前用的 Ulysses（因为贵）和 Quip（对协作需求不强），并且经过调研没有选择 Notion，最终选择了 Bear 作为长期协作工具。选择的原因是 Bear 写作体验和跨平台能力都不错，价格也不贵，适合我这种写作并不频繁、对写作需求没那么强的用户。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RSSHub&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;十分实用的 RSS 工具，可以把网络内容做成 RSS Feed。用官方文档的说法就是：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;🍰 万物皆可 RSS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;对于我来说，RSSHub 提供了一个不安装 App 而获得其中部分对我有用的资讯的能力。比如，我可以通过 RSSHub 订阅新浪微博某些感兴趣的账户，而不用装微博这样超级恶心的 App。&lt;/p&gt;

&lt;h3 id=&quot;书籍&quot;&gt;书籍&lt;/h3&gt;

&lt;p&gt;《It doesn’t have to be crazy at work》&lt;/p&gt;

&lt;p&gt;书不长而且很多都是 Basecamp 的官方博客 Signal v.s. Noise 摘录，主题就跟标题说的一样，阐述为什么他们可以不疯狂工作。和现在很多鸡汤内容以及创业内容都是对立的。虽然我们&lt;del&gt;可能无法&lt;/del&gt;去到这样的公司，但需要知道他们是怎么不疯狂工作的。&lt;/p&gt;

&lt;p&gt;《极简宇宙史》&lt;/p&gt;

&lt;p&gt;这是一本为了看懂《 隐藏的现实：平行宇宙是什么》而买的书，不过对于不是那么物理爱好者的人来说，前者更合适一些，能让人基本理解20世纪后的宇宙研究上的进展，包括爱因斯坦和霍金等人都在解决怎样的物理学问题。&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Feb 2019 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/2018-lifestyle-summary.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/2018-lifestyle-summary.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Drip Coffee and Nespresso</title>
        <description>&lt;p&gt;&lt;em&gt;HINT: This is a recommendation post on home coffee making based on my real experience.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I am a big coffee lover and addict. Coffee keeps me energetic with just enough sleep. Without coffee, I have to take a nap or sleep much more.&lt;/p&gt;

&lt;p&gt;I buy coffee on work and go to coffee shop on weekends. It actually took considerable money. Thus, I brew coffee by myself.&lt;/p&gt;

&lt;h3 id=&quot;starter-kit&quot;&gt;Starter Kit&lt;/h3&gt;

&lt;p&gt;My very first kit is Penguin Drip Starter Kit, which includes basic setups for drip  coffee making. And I chose an indie coffee bean shop from Taobao — the Fisher Coffee.&lt;/p&gt;

&lt;p&gt;Penguin Drip Starter Kit includes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Kalita Dripper&lt;/li&gt;
  &lt;li&gt;Kalita Wave Filter Paper&lt;/li&gt;
  &lt;li&gt;Bonavita Gooseneck Kettle&lt;/li&gt;
  &lt;li&gt;WPM Coffee Bean Grinder&lt;/li&gt;
  &lt;li&gt;Basic electronic weighter&lt;/li&gt;
  &lt;li&gt;Basic glass server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And later, a Kalita Glass Server because I broke the kit one.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/penguin-starter-kit.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;P.S. Blue Bottle Coffee is not included.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The price (¥1284/$188) is reasonable. It’s great for a new comer to understand how drip coffee works and dive into drip coffee with joy.&lt;/p&gt;

&lt;h3 id=&quot;the-problems&quot;&gt;The Problems&lt;/h3&gt;

&lt;p&gt;Drip coffee is actually &lt;em&gt;convenient&lt;/em&gt;. But it’s not instant for a work morning. There was just not enough time to make one cup of coffee for myself, since I usually get up late.&lt;/p&gt;

&lt;p&gt;Therefore, I made drip coffee only at the weekends. That sounds fine, however, it means a bag of beans would be kept for more than one month and it was not a good way to keep the beans fresh. At the beginning, it really smells and tastes good, especially during grind. In contrary, it becomes much bitter and more astringent. Big difference!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/hario-canister.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I bought a &lt;a href=&quot;https://www.hario.jp/seihin/productdetail.php?product=MCN-200B&quot;&gt;Hario Coffee Canister&lt;/a&gt; to store the beans, hoped to isolate air and reduce oxidation rate. But my experience proved that it made little contribution to the freshness unless I could consume the beans quickly.&lt;/p&gt;

&lt;p&gt;The conclusion is that freshly brewed coffee works only if you brew frequently.&lt;/p&gt;

&lt;h3 id=&quot;drip-coffee-bag&quot;&gt;Drip Coffee Bag&lt;/h3&gt;

&lt;p&gt;Drip Coffee Bag provides a similar experience as typical drip coffee, and even faster and more convenient. More importantly, the oxidation rate is just low enough to keep on a good flavour level. Though it tastes worse than real fresh brewed coffee, its average taste is good enough for me as an occasional brewer.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/fisher-coffee.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Another advantage of coffee bag is that we may buy a pack with various kinds of beans, which means we can easily taste lots of beans.&lt;/p&gt;

&lt;p&gt;With Drip Coffee Bag, I omitted the grinder step but it remained to be a weekend pleasure.&lt;/p&gt;

&lt;h3 id=&quot;nespresso&quot;&gt;Nespresso&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/sydney-opera-house.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When I was staying at Sydney, the hotel provided Delonghi Nespresso coffee maker (however, I don’t know the exact model). I used it several times a day to get caffeinated. That’s great experience for me, both the city and the coffee.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nespresso-clips.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The machine I bought is Nespresso Clips, which is quite similar to Nespresso Pixie C60.&lt;/p&gt;

&lt;p&gt;It basically need one minute to fill the water tank (if in need) and one more minute to brew and add some sugar. This enables me to get a cup of coffee every morning. In addition, it’s even easier to taste different flavours.&lt;/p&gt;

&lt;p&gt;And there are major differences between Nespresso and drip coffee. Nespresso brews Espresso coffee or its derivatives. The tastes can be quite different, which is the reason why I will keep the drip coffee kit and have a drink when I want.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/coffee-life.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Enjoy the coffee life!&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Jan 2019 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/drip-coffee-and-nespresso.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/drip-coffee-and-nespresso.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Minimal Packing List for A Fast Trip</title>
        <description>&lt;p&gt;I am always interested in reading about packing and bags. e.g. &lt;a href=&quot;https://www.carryology.com/insights/insights-1/packing-list-of-a-digital-nomad/&quot;&gt;Packing List of a Digital Nomad&lt;/a&gt;&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. Digital nomad is cool and things are going to be minimal, since it is obvious a limit by people’s carriage ability.&lt;/p&gt;

&lt;p&gt;As I am not a digital nomad or a frequent traveller, I do not usually carry a bag filled with stuffs for living weeks. Instead, I have a simple Adidas bag for daily use with basic wallets, Kindle, and sometimes books. Thus, fast trip (less than 3 days or maybe a week) is the only chance to pack up within one major bag for all things together, IDs, clothes, and electronics.&lt;/p&gt;

&lt;p&gt;Rather than living that lifestyle, I just experience it once in months. The weekends trips, three-day holidays, and occasionally paid annual leave.&lt;/p&gt;

&lt;h3 id=&quot;the-bag&quot;&gt;The Bag&lt;/h3&gt;

&lt;p&gt;I am a backpack guy. Backpack makes me feel more comfortable and relaxed than others. This is one of the biggest pros to choose a backpack for a trip.&lt;/p&gt;

&lt;p&gt;GORUCK GR1&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; is what I carry for a trip. It builds for intense environment, which means it is robust and a little bit heavier than normal. The size is 21L. MOLLE strapping allows for additional pockets both inside and outside.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/goruck-gr1.jpg&quot; alt=&quot;the-bag&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;organization&quot;&gt;Organization&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Being on the go, an organizational system isn’t just nice to have, it’s a necessity.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As &lt;em&gt;the Van Man&lt;/em&gt; said&lt;sup id=&quot;fnref:2:1&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;, it’s necessary to get organized inside the bag. Putting things together unorganized like a black hole is horrible. It is easy to get things lost and just hard to find anything. And also, this applies recursively to its sub storages. My idea is to make sub storages based on the types of items.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/bag-organization.jpg&quot; alt=&quot;organization&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Topo Designs Accessory Bag Medium&lt;/strong&gt;&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;: A simple bag hangs up to the inside MOLLE system, which keeps my passport, tickets, and stationery.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Elecom Accessory Bag&lt;/strong&gt;: A cheap bag made from Cordura, which holds small-size eletronics. Everything can be stored in their own slots, great for wires.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MUJI Wash Supplies Bag&lt;/strong&gt;: Facial cleanser, shaver, toothpaste, toothpicks, and toothbrush. Made from waterproof fabric.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clothes Bag with Label&lt;/strong&gt;: Bigger one for tees and smaller one for underwears.&lt;/p&gt;

&lt;h3 id=&quot;electronics&quot;&gt;Electronics&lt;/h3&gt;

&lt;p&gt;I am a software developer and a geek. Electronics are huge part of my life.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sennhaiser Momentum&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/strong&gt;: It is not noise cancelling but can isolate much noise. I won’t say it has the best sound but it is in a high level. The ivory color looks great.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/mac-and-momentum.jpg&quot; alt=&quot;mac-and-momentum&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mac Book Air 13”&lt;sup id=&quot;fnref:7&quot;&gt;&lt;a href=&quot;#fn:7&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/strong&gt;: The most important productivity and entertaining tool. What I have is actually a “late 2013” without retina. Every mac book launched later may replace it, because each one of them is more powerful and portable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;iPhone X&lt;sup id=&quot;fnref:8&quot;&gt;&lt;a href=&quot;#fn:8&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;&lt;/strong&gt;: The immersive experience of iPhone X is incredible, bought is as soon as I tried one. I think it no need to talk more about an iPhone, it depends on what you like and what Apple sells or maybe an Android phone. Choose a waterproof one can be better. And it is not carried in GR1 actually.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kindle Oasis&lt;sup id=&quot;fnref:9&quot;&gt;&lt;a href=&quot;#fn:9&quot; class=&quot;footnote&quot;&gt;8&lt;/a&gt;&lt;/sup&gt;&lt;/strong&gt;: Fast system and dedicated paging buttons. Portable library for everyone. I enjoy reading calmly.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/kindle-and-book.jpg&quot; alt=&quot;kindle-and-book&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FUJIFILM X-Pro2&lt;/strong&gt;: Best rangefinder mirrorless camera. I usually take it with XF35 F2 WR in non-photography trip, which equals to 50MM full frame. For a photography trip, a camera bag is needed then.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anker PowerCore&lt;sup id=&quot;fnref:10&quot;&gt;&lt;a href=&quot;#fn:10&quot; class=&quot;footnote&quot;&gt;9&lt;/a&gt;&lt;/sup&gt;&lt;/strong&gt;: Handy and stable.&lt;/p&gt;

&lt;h3 id=&quot;writing&quot;&gt;Writing&lt;/h3&gt;

&lt;p&gt;While most time we use electronics for everything, a pen and paper is still indispensable for ideas and quick notes. For me, handscripting helps me think better a lot.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/topo-muji-pen-and-book.jpg&quot; alt=&quot;writing&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MUJI Ballpoint Pen&lt;/strong&gt;: Travel with a fountain pen is not a good choice for me, the ink sometimes can be huge trouble. Instead, I always bring a ballpoint pen from MUJI. It is minimalistic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MUJI Note A6&lt;/strong&gt;: Another MUJI stationery, a nice hand note book. It may not be used for design from architecture to details. But it is &lt;strong&gt;big&lt;/strong&gt; enough for ideas and quick notes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/tokyo-tower-cityview.jpg&quot; alt=&quot;fast-trip-sh&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.carryology.com/insights/insights-1/packing-list-of-a-digital-nomad/&quot;&gt;Packing List of a Digital Nomad&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;Even this article is written in the similar way. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt; &lt;a href=&quot;#fnref:2:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.goruck.com/gr1/&quot;&gt;GORUCK GR1&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://topodesigns.com/products/accessory-bags&quot;&gt;Topo Designs Accessory Bag Medium&lt;/a&gt; &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://en-de.sennheiser.com/momentum-m2&quot;&gt;Sennhaiser Momentum&lt;/a&gt; &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:7&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.apple.com/macbook-air/&quot;&gt;Mac Book Air 13”&lt;/a&gt; &lt;a href=&quot;#fnref:7&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:8&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.apple.com/iphone/&quot;&gt;iPhone X&lt;/a&gt; &lt;a href=&quot;#fnref:8&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:9&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Amazon-Kindle-Oasis-eReader-with-Leather-Charging-Cover/dp/B00REQKWGA&quot;&gt;Kindle Oasis&lt;/a&gt; &lt;a href=&quot;#fnref:9&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:10&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.anker.com/products/107/200/ultra-compact-portable-chargers&quot;&gt;Anker PowerCore&lt;/a&gt; &lt;a href=&quot;#fnref:10&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 18 Nov 2018 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/minimal-packing-list-for-a-fast-trip.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/minimal-packing-list-for-a-fast-trip.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>我是如何初始化 Mac 环境的</title>
        <description>&lt;p&gt;每个开发者或许都有自己的 dotfiles，我也不例外。这是对于一些复杂的命令行工具（vim、bash 等）配置的备份，并且衍生出了初始化一台新电脑环境的自动化脚本。&lt;/p&gt;

&lt;p&gt;在 GitHub 可以&lt;a href=&quot;https://github.com/search?q=dotfiles&quot;&gt;搜到很多&lt;/a&gt;点赞很多的 dotfiles 项目，相关配置十分全面，并且几乎自动化了所有东西。这些项目做的都很好很有参考意义，但因为每个人实际的个性化配置需求很强，所以只能说进行参考，没法全盘使用。&lt;/p&gt;

&lt;p&gt;一些无法自动化的东西也需要文档来指导如何手动配置，比如 &lt;a href=&quot;https://github.com/KrauseFx/new-mac&quot;&gt;KrauseFx/new-mac&lt;/a&gt; 就是完全通过文档指导。&lt;/p&gt;

&lt;p&gt;我希望在得到一台崭新 Mac 时，只需要执行自动化脚本完成80%的工作，并且按照文档配置剩余20%无法自动化的部分。&lt;/p&gt;

&lt;h3 id=&quot;准备工作&quot;&gt;准备工作&lt;/h3&gt;

&lt;p&gt;首先，先参照 &lt;a href=&quot;https://github.com/KrauseFx/new-mac&quot;&gt;KrauseFx/new-mac&lt;/a&gt; 撰写 &lt;a href=&quot;https://github.com/crispgm/dotfiles/blob/master/README.md&quot;&gt;README&lt;/a&gt; ，把步骤用文本的形式写好。即使自动化了，文档也是有必要的。&lt;/p&gt;

&lt;p&gt;然后，为了让后续工作可以进行，我们先安装 macOS Command Line Tools。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcode-select &lt;span class=&quot;nt&quot;&gt;--install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;也可以选择下载安装 &lt;a href=&quot;https://developer.apple.com/download/more/&quot;&gt;https://developer.apple.com/download/more/&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;homebrew&quot;&gt;Homebrew&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt; 是 macOS 中必备的包管理工具。通过 Homebrew 可以无需 root 一键安装各类软件，省去复杂的依赖管理和编译参数配置。&lt;/p&gt;

&lt;p&gt;同时，Homebrew Cask 还可以安装非命令行编译类程序，也就是平时日常用的软件都可以用 Homebrew Cask 进行安装。&lt;/p&gt;

&lt;p&gt;Homebrew 强大的能力让自动初始化的第一步成为可能。&lt;/p&gt;

&lt;p&gt;所以第一步，我们先安装 Homebrew：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;which brew&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Installing homebrew...&quot;&lt;/span&gt;
  /usr/bin/ruby &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;homebrew-bundler&quot;&gt;Homebrew Bundler&lt;/h3&gt;

&lt;p&gt;Homebrew 不仅仅是一个包管理器，还具有软件依赖管理能力。通过 &lt;a href=&quot;https://github.com/Homebrew/homebrew-bundle&quot;&gt;Homebrew Bundler&lt;/a&gt;&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; 可以帮你解决所有软件依赖，包括官方的 formula 以及 cask，甚至还包括 Mac App Store（简称 mas）中的应用。我们只需要一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt;，就可以配置好所有需要的应用。&lt;/p&gt;

&lt;p&gt;Homebrew 默认就安装了 Homebrew Bundler。&lt;/p&gt;

&lt;p&gt;如果你的安装列表已经足够干净，那么可以执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;brew bundle dump&lt;/code&gt; 来生成现有依赖，输出到 &lt;code class=&quot;highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew bundle dump
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;Brewfile

brew &lt;span class=&quot;s2&quot;&gt;&quot;git&quot;&lt;/span&gt;
brew &lt;span class=&quot;s2&quot;&gt;&quot;wget&quot;&lt;/span&gt;
brew &lt;span class=&quot;s2&quot;&gt;&quot;mas&quot;&lt;/span&gt;
brew &lt;span class=&quot;s2&quot;&gt;&quot;p7zip&quot;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果想自己写也比较容易，&lt;code class=&quot;highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt; 是一种简单的 Ruby DSL，写起来比大部分配置文件都简单。熟悉 Ruby 的人应该不太需要解释，毕竟 Ruby 自己就有 Bundler 这套东西，Brewfile 和 Gemfile 属于对应关系。&lt;/p&gt;

&lt;p&gt;普通用户写 &lt;code class=&quot;highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt; 也并不困难，只需要掌握一些常用到的命令，主要有 &lt;code class=&quot;highlighter-rouge&quot;&gt;brew&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;tap&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;cask&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;mas&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;这四条命令分别对应：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;brew install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;brew tap&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;brew cask install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;就是&lt;a href=&quot;https://crispgm.com/page/awesome-terminal-tools.html#mas&quot;&gt;之前文章中&lt;/a&gt;介绍过的 Mac App Store 命令行工具。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;命令行类应用：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;git&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;wget&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;zsh&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;vim&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;非命令行类：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;google-chrome&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Chrome 浏览器&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;alfred&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sublime-text&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;visual-studio-code&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;非官方 Formula 应用：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;tap&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;heroku/brew&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;heroku&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tap&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;homebrew/cask-fonts&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;font-source-code-pro&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Mac App Store 上的应用：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mas&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;WeChat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;836500024&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;因此，只要维护好 &lt;a href=&quot;https://github.com/crispgm/dotfiles/blob/master/Brewfile&quot;&gt;Brewfile&lt;/a&gt; 那么应用自动化安装就完全解决了。&lt;/p&gt;

&lt;p&gt;只需要运行：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew bundle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;zshoh-my-zsh&quot;&gt;zsh/oh-my-zsh&lt;/h3&gt;

&lt;p&gt;Zsh 也就是 Z Shell，比起更加原生的 Bash。Zsh 的命令补全、主题系统和插件系统等都更加强大&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;但想自己进行配置，学习和开发成本都比较高，因此就需要 Oh My Zsh。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot;&gt;Oh My Zsh&lt;/a&gt; 是个开源社区驱动的项目，简单的说就是集成一些常见的 Zsh 配置、插件和主题。我们需要做的只是配置一些简单直观的参数。甚至说，什么都不做，也有一个默认的开箱即用的配置。&lt;/p&gt;

&lt;p&gt;Oh My Zsh 的 README &lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;中说到：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Oh My Zsh will not make you a 10x developer…but you might feel like one.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这句话十分风趣。虽然用了 Oh My Zsh 效率不一定能提升10倍，但至少「自我感觉」是这样的 :)&lt;/p&gt;

&lt;p&gt;Zsh 在上一节已经通过 Homebrew Bundler 安装了，这里需要设置成默认 shell：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 把 zsh 加入 shell 列表&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'echo /usr/local/bin/zsh &amp;gt;&amp;gt; /etc/shells'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 设置 zsh 为默认 shell&lt;/span&gt;
chsh &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;which zsh&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后安装 Oh My Zsh：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;dotfiles&quot;&gt;dotfiles&lt;/h3&gt;

&lt;p&gt;dotfiles 非常因人而异，对于我来说主要用 vim 和 zsh，因此主要配置这两个。脚本化比较简单，只需要 &lt;code class=&quot;highlighter-rouge&quot;&gt;cp&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; .bash_profile .zshrc .vimrc ~/
&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; zarniwoop.vim/colors ~/.vim/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最后，启用 fzf：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;brew &lt;span class=&quot;nt&quot;&gt;--prefix&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/opt/fzf/install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;开发相关&quot;&gt;开发相关&lt;/h3&gt;

&lt;p&gt;也是因人而异，我平时主要用 Go 和 Ruby。&lt;/p&gt;

&lt;p&gt;Go 需要配置：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; ~/go
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;并在 &lt;code class=&quot;highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt; 加入：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GOROOT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;brew &lt;span class=&quot;nt&quot;&gt;--prefix&lt;/span&gt; go&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/libexec
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GOPATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/go
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$GOPATH&lt;/span&gt;/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ruby 则要配置 &lt;code class=&quot;highlighter-rouge&quot;&gt;.gemrc&lt;/code&gt; 和代理：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; .gemrc ~/
gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;bundler
bundle config mirror.https://rubygems.org https://gems.ruby-china.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;编辑器用 Sublime Text 和 VS Code，增加快捷方式：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo ln&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /Applications/Sublime&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Text.app/Contents/SharedSupport/bin/subl ~/Applications/subl
&lt;span class=&quot;nb&quot;&gt;sudo ln&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /Applications/Visual&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Studio&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Code.app/Contents/Resources/app/bin/code ~/Applications/code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;应用配置&quot;&gt;应用配置&lt;/h3&gt;

&lt;p&gt;针对配置来说，应用可以分为四种：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;云端配置：各种互联网公司的产品大多都是，不需要太关心配置同步的问题，只需要完成登录就好。比如：Chrome。&lt;/li&gt;
  &lt;li&gt;dotfiles 风格配置：既然是 dotfiles 风格，那也可以用 dotfiles 的方式，直接提交到 dotfiles 中就好了。比如：Karabiner 和 Shadowsocksx-NG。&lt;/li&gt;
  &lt;li&gt;可同步配置：可以通过云端网盘进行同步，比如 Alfred 和 Dash。这种国内环境可以使用坚果云同步。&lt;/li&gt;
  &lt;li&gt;无解的：那就只能无解了。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;具体需要视情况而定，还有一些稍微特殊的。比如说 VS Code，配置部分可以用 &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync&quot;&gt;Settings Sync&lt;/a&gt; 插件同步，插件的话可以通过命令行模式，也能做到自动安装。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# VS Code CLI 模式安装插件&lt;/span&gt;
code &lt;span class=&quot;nt&quot;&gt;--install-extension&lt;/span&gt; arcticicestudio.nord-visual-studio-code
code &lt;span class=&quot;nt&quot;&gt;--install-extension&lt;/span&gt; ms-vscode.Go
code &lt;span class=&quot;nt&quot;&gt;--install-extension&lt;/span&gt; Shan.code-settings-sync
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;更多此类的东西，需要自己探索和总结。&lt;/p&gt;

&lt;h3 id=&quot;macos-配置&quot;&gt;macOS 配置&lt;/h3&gt;

&lt;p&gt;macOS 的配置目前是手动，按理来说可以通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;defaults&lt;/code&gt; 进行配置。但目前还没有找到每一个的配置项，缺少的暂且手动解决，等 hack 完再来更新。&lt;/p&gt;

&lt;p&gt;已有的可以参考 &lt;a href=&quot;https://github.com/mathiasbynens/dotfiles&quot;&gt;mathiasbynens/dotfiles&lt;/a&gt; 中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;.macos&lt;/code&gt; 文件&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;，覆盖了大多数。&lt;/p&gt;

&lt;h3 id=&quot;最后&quot;&gt;最后&lt;/h3&gt;

&lt;p&gt;为了测试这一套东西的确 work，我把家里的 Mac Book Air 2013 给重置了，创造了一个崭新的 Mac。经过实战测试的确可用 :)&lt;/p&gt;

&lt;p&gt;把成品 &lt;a href=&quot;https://github.com/crispgm/dotfiles&quot;&gt;crispgm/dotfiles&lt;/a&gt; 分享出来，不求能直接用，也是给大家参考。&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/Homebrew/homebrew-bundle&quot;&gt;Homebrew/homebrew-bundle&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.howtogeek.com/362409/what-is-zsh-and-why-should-you-use-it-instead-of-bash/&quot;&gt;What is ZSH, and Why Should You Use It Instead of Bash?&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot;&gt;robbyrussell/oh-my-zsh&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/mathiasbynens/dotfiles/blob/master/.macos&quot;&gt;mathiasbynens/dotfiles .macos&lt;/a&gt; &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 06 Nov 2018 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/provisioning-a-new-mac.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/provisioning-a-new-mac.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>我的 HHKB 键盘演进式布局方案</title>
        <description>&lt;p&gt;自从工作时使用的 MacBook Pro 的「蝶式」键盘&lt;code class=&quot;highlighter-rouge&quot;&gt;T&lt;/code&gt;键出现间歇性「连击」故障后，我就经常会打出 &lt;del&gt;retturn&lt;/del&gt; 和 &lt;del&gt;ttype&lt;/del&gt; 这样的错误拼写。在程序设计中，这会造成了很大的麻烦，毕竟这是语法错误。&lt;/p&gt;

&lt;p&gt;于是，我选择入手了有线（我总是不相信无线设备）、无刻的 &lt;a href=&quot;http://www.pfu.fujitsu.com/hhkeyboard/type-s/&quot;&gt;HHKB Professional2 Type-S&lt;/a&gt; 作为替代。&lt;/p&gt;

&lt;p&gt;HHKB 是个很有态度的键盘，接受了它往往代表着接受了一种「革命性」的键位设计，或许也是一种「生活方式」。我从不惧怕折腾，但我想说的是比起“革命性”（revolutionary）的方式，我更倾向于在此选择“演进式”（evolutionary）的方式。&lt;/p&gt;

&lt;p&gt;下面我就分享下我使用 HHKB 的方式。&lt;/p&gt;

&lt;h2 id=&quot;印象和布局&quot;&gt;印象和布局&lt;/h2&gt;

&lt;p&gt;首先，拿到 HHKB 的第一印象是：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;小，可以直接覆盖在 MacBook Pro 的键盘上&lt;/li&gt;
  &lt;li&gt;简，由于是无刻的按键没有字，正面只有右下角有标志&lt;/li&gt;
  &lt;li&gt;静，Type S 的 S 是 Silent，比起机械键盘，声音几乎都可以忽略&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/HHKB-small-size.jpg&quot; alt=&quot;small-size&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接着说布局，这也是 HHKB 为人所知的最大印象——通过独特的布局获得很高的效率。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/HHKB-Pro-2-default-layout.png&quot; alt=&quot;keyboard-setting&quot; /&gt;&lt;/p&gt;

&lt;p&gt;仔细观察了键位布局后，就会发现了很多不同：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;只有60键&lt;/li&gt;
  &lt;li&gt;没有功能键 (F1, F2, …)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CapsLock&lt;/code&gt; 被 &lt;code class=&quot;highlighter-rouge&quot;&gt;Control&lt;/code&gt; 取代了&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Esc&lt;/code&gt; 取代了重音号/波浪号的位置&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; 在一般键盘 &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; 的位置&lt;/li&gt;
  &lt;li&gt;没有方向键&lt;/li&gt;
  &lt;li&gt;退格不在最右上角&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;针对这些&lt;em&gt;特性&lt;/em&gt;，我的感受是：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;👍 这很极简，我喜欢&lt;/li&gt;
  &lt;li&gt;👌 问题不大，因为 macOS 默认式关闭功能键的，平时也就用来调声音什么的&lt;/li&gt;
  &lt;li&gt;😨 &lt;code class=&quot;highlighter-rouge&quot;&gt;Control&lt;/code&gt; 在这个位置的确很舒服，但老的 &lt;code class=&quot;highlighter-rouge&quot;&gt;Control&lt;/code&gt; 位置已经习惯了&lt;/li&gt;
  &lt;li&gt;😨 这很坑。波浪号常用于切换到 &lt;code class=&quot;highlighter-rouge&quot;&gt;$HOME&lt;/code&gt;，重音号常用于 Markdown&lt;/li&gt;
  &lt;li&gt;🤷 还好，但其实编程中反斜杠用的也比较多&lt;/li&gt;
  &lt;li&gt;😢 这可以说十分不方便&lt;/li&gt;
  &lt;li&gt;😢 这和一般键盘不同&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;我的方案&quot;&gt;我的方案&lt;/h2&gt;

&lt;p&gt;这里我想简单说下背景，除去工作中的 MBP 外，我其实在家中还有一个配备了 Filco 键盘的 Windows 系统台式机，以及另外一台 Mac 笔记本。&lt;/p&gt;

&lt;p&gt;我不担心我无法适应什么的，不爱折腾的人估计不会买这样另类的键盘，但需要考虑到同时使用其它设备。如果全面拥抱 HHKB 风格，我大概需要维护&lt;strong&gt;3套&lt;/strong&gt;肌肉记忆。从 87 键 Windows 键盘到标准 Mac 键盘，再到 HHKB。而且 HHKB 作为工作中的键盘势必使用时间会远比另两种长，那么长久下来一定是对于 HHKB 更熟悉，在家中使用时反而效率会因为切换手感大大降低了。&lt;/p&gt;

&lt;p&gt;并且，HHKB 的默认布局会使一些已有的 Mac 快捷键很难按。比如 &lt;code class=&quot;highlighter-rouge&quot;&gt;Command + 重音键&lt;/code&gt; 切换同一个应用程序的不同窗口，原先是左手单手操作，现在要改成双手操作。&lt;/p&gt;

&lt;p&gt;把 &lt;code class=&quot;highlighter-rouge&quot;&gt;Control&lt;/code&gt; 挪到 &lt;code class=&quot;highlighter-rouge&quot;&gt;CapsLock&lt;/code&gt; 虽然可以带来快乐和效率，但也会付出比较大的代价。我认为我可以以一种更加演进式的方式使用 HHKB。&lt;/p&gt;

&lt;p&gt;所以“演进 Evolutionary” 是与“革命性 Revolutionary” 相对应的，我认为没有必要为了一款键盘抛弃长期依赖的肌肉记忆。&lt;/p&gt;

&lt;p&gt;我的方式是使用 Karabiner 合理改键并且加入一些魔法。&lt;/p&gt;

&lt;h2 id=&quot;karabiner&quot;&gt;Karabiner&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://pqrs.org/osx/karabiner/&quot;&gt;Karabiner&lt;/a&gt; 是 macOS 上最好最强大的改键工具，它为我解决 HHKB 的布局问题提供了思路。&lt;/p&gt;

&lt;h4 id=&quot;基本改动&quot;&gt;基本改动&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;把 &lt;code class=&quot;highlighter-rouge&quot;&gt;Control&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;Option&lt;/code&gt; 交换，保持用普通键盘时的手势。HHKB 虽然在左下角没有按键，但由于 Mac 的左下角是 &lt;code class=&quot;highlighter-rouge&quot;&gt;Fn&lt;/code&gt;，所以 &lt;code class=&quot;highlighter-rouge&quot;&gt;Option&lt;/code&gt; 其实和 Mac 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;Control&lt;/code&gt; 位置差不多。&lt;code class=&quot;highlighter-rouge&quot;&gt;Option&lt;/code&gt; 不那么常用，放在不喜欢的位置也没关系。&lt;/li&gt;
  &lt;li&gt;重音号/波浪号、退格和反斜杠三者进行交换。这样反斜杠和退格都回到熟悉的位置，重音号/波浪号的位置并没有得到改善，因此我会在后续说到怎么使用魔法优化。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/HHKB-option.jpg&quot; alt=&quot;HHKB Option&quot; /&gt;
注：HHKB 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;Option&lt;/code&gt; 其实和 MacBook Pro 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;Control&lt;/code&gt; 位置几乎一样。&lt;/p&gt;

&lt;h4 id=&quot;魔法&quot;&gt;魔法&lt;/h4&gt;

&lt;p&gt;魔法其实就是用 Karabiner 的组合改键，在保证原先按键功能的前提下，实现原来的效果。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Command + Esc&lt;/code&gt; 改成 &lt;code class=&quot;highlighter-rouge&quot;&gt;Command + 重音键&lt;/code&gt;，这样可以继续用原先的方式切换窗口。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Shift + Esc&lt;/code&gt; 改成 &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt;，这样可以继续用原先的方式输入波浪号。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Shift + Delete&lt;/code&gt; 改成向前删除，这和 macOS 标准快捷键一致。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后，记得&lt;strong&gt;备份&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;karabiner.json&lt;/code&gt; 到你自己的 dotfiles，否则一旦丢失后果不堪设想。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HHKB 无刻键盘让你的键盘只能自己使用，而一旦丢失 &lt;code class=&quot;highlighter-rouge&quot;&gt;karabiner.json&lt;/code&gt; 恐怕你自己也没法正常使用。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;方向键&quot;&gt;方向键&lt;/h2&gt;

&lt;p&gt;至于方向键的确没有更好的方式，HHKB 自带的 Fn 组合键整体还算可行。&lt;/p&gt;

&lt;h2 id=&quot;其它-tips&quot;&gt;其它 Tips&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;我的 DIP 选在 Lite Ext. Mode。比起 Mac Mode 只关闭了几个多媒体组合键。&lt;/li&gt;
  &lt;li&gt;禁用 &lt;code class=&quot;highlighter-rouge&quot;&gt;Fn + P&lt;/code&gt;。&lt;code class=&quot;highlighter-rouge&quot;&gt;Fn + P&lt;/code&gt; 就在组合的方向键旁边，一旦按错就会调屏幕亮度，很烦人。&lt;/li&gt;
  &lt;li&gt;设置 &lt;code class=&quot;highlighter-rouge&quot;&gt;disable_built_in_keyboard_if_exists&lt;/code&gt;，便于放在 Mac 键盘上时不会按到下面。&lt;/li&gt;
  &lt;li&gt;弯头 USB 线。原装线会伸到屏幕上。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/HHKB-usb-cable.jpg&quot; alt=&quot;USB Cable&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;结论&quot;&gt;结论&lt;/h2&gt;

&lt;p&gt;HHKB 是个很好的键盘，但我觉得为了它而彻底改变肌肉记忆并不值得，Karabiner 可以帮助我采用更演进式的方式使用 HHKB。这里我给出我的 &lt;a href=&quot;https://github.com/crispgm/dotfiles/blob/master/Karabiner/karabiner.json&quot;&gt;karabiner.json&lt;/a&gt; 供参考。&lt;/p&gt;

&lt;p&gt;这里我给出一些配置后的优点和缺点：&lt;/p&gt;

&lt;h4 id=&quot;优点&quot;&gt;优点&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;很小很极简，可以放在 MacBook Pro 上用&lt;/li&gt;
  &lt;li&gt;顺滑、舒适&lt;/li&gt;
  &lt;li&gt;只为你自己配置、使用，哈哈&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;缺点&quot;&gt;缺点&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;刚开始很容易输错密码&lt;/li&gt;
  &lt;li&gt;没有 Karabiner 生活不能自理&lt;/li&gt;
  &lt;li&gt;键盘唤醒时间很慢&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后，附上工作照：
&lt;img src=&quot;https://crispgm.com/image/HHKB-at-work.jpg&quot; alt=&quot;HHKB&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Happy Hacking!&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Oct 2018 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/hhkb-evolutionary-way.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/hhkb-evolutionary-way.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>随心装修实录</title>
        <description>&lt;p&gt;所谓「随心装修」，指的是看心情设计、不监督、不折腾，尽量和平常一样生活而不是忙碌于市场和工地，也要装出满意的房子。这里我分享其中一些过程。&lt;/p&gt;

&lt;h3 id=&quot;房&quot;&gt;房&lt;/h3&gt;

&lt;p&gt;新家位置在朝阳公园，选择的原因很简单，想住在艺术气息浓、年轻人多、有异域风情、好玩好吃的地方。而不是住在一些只有各种连锁店的地方，或者是“困”在巨大的郊外小区。不需要学区，可以老房子。&lt;/p&gt;

&lt;p&gt;朝阳区有很多大使馆，衍生出了不少国内外的饭店，文化产业也比较发达（要不明星咋都跑朝阳出事呢）。当然，这也需要看片区，比如就有安华桥这样似乎什么都没有的区域。&lt;/p&gt;

&lt;p&gt;考虑到价格和通勤，更多的算是一些运气，于是选择了朝阳公园。虽说位置可以说很好了（距离三里屯仅15分钟路程），但因为大概是学区不行，价格远比位置来的便宜。&lt;strong&gt;注意：本文不讨论房价，我有多少钱这类问题，也不要在文章后评价。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;由于政策调控的问题，楼市没那么火爆，入手效率也比较快，就开始着手进行装修。&lt;/p&gt;

&lt;h3 id=&quot;工具选择&quot;&gt;工具选择&lt;/h3&gt;

&lt;p&gt;首先，我选定了 &lt;a href=&quot;https://quip.com/&quot;&gt;Quip&lt;/a&gt; 作为项目协作工具，包括文档、计划、账目等。文档支持简化的富文本，和 Markdown 能够基本兼容。Quip Spreadsheet 功能则是一个简化的 Excel，可以记录表格类内容，用于装修预算管理十分合适。我在平时也会使用 Quip 记录一些东西。&lt;/p&gt;

&lt;p&gt;在竞争激烈的企业协作工具市场，Quip 的优势是多人一起批注文档体验很好，多平台体验一致稳定。在需求阶段，我会和女朋友协同在文档中标注修改。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/quip-overview.png&quot; alt=&quot;Quip&quot; /&gt;&lt;/p&gt;

&lt;p&gt;TODO 的话还是常年用的 Wunderlist，其实 Quip 本身就有 TODO 能力，但我还是一直使用 Wunderlist。因为在 Wunderlist 完成任务的那一下，让人很有喜悦感。&lt;/p&gt;

&lt;p&gt;具体要做的一件件的事情，会被拆分放到 Wunderlist。&lt;/p&gt;

&lt;h3 id=&quot;初步意向&quot;&gt;初步意向&lt;/h3&gt;

&lt;p&gt;装修阶段的第一步是头脑风暴，就是两个人分别说出自己想要风格和特别的想要的点。比如说，我喜欢日系极简风，特别想要MUJI的床和躺椅。女朋友喜欢欧式的极简风格，喜欢高贵感觉的小件。&lt;/p&gt;

&lt;p&gt;根据各自要求，和大概的结构图，讨论一个基本满意的“描述”。这个描述比较明确，主要说明喜欢的风格、讨厌的风格、每个房间的定位，并且配以成品的图片。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/quip-req.png&quot; alt=&quot;缩略图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;总结起来就是：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;想要&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;主卧日系极简风，其它北欧极简风&lt;/li&gt;
  &lt;li&gt;纯粹，严格按照符合风格的色彩设计&lt;/li&gt;
  &lt;li&gt;要有些设计感，优雅感，适当但不过分牺牲实用性&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;不喜欢&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;仿砖墙&lt;/li&gt;
  &lt;li&gt;古典元素&lt;/li&gt;
  &lt;li&gt;烤漆面&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;大概的感觉：&lt;/p&gt;

&lt;p&gt;来自好好住&lt;a href=&quot;https://m.haohaozhu.com/user/Z3poRTJvWi9RWlRYY0t3TVR2LzVsdz09OmZkY2UyODdkZjM2M2UzYjY0MjA4ZDYzZWM3NGQ5M2Yw.html&quot;&gt;@桑丹尼&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/apartment-ideal.png&quot; alt=&quot;感觉&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;详细要求&quot;&gt;详细要求&lt;/h3&gt;

&lt;p&gt;以初步意向作为大纲，在初步意向基础上，按照房间或区域，具体描述房间内的需求。简单点说，就是把每个房间的需求文档也写一遍，这里就不细说了。&lt;/p&gt;

&lt;h3 id=&quot;工程测量和设计图&quot;&gt;工程测量和设计图&lt;/h3&gt;

&lt;p&gt;设计师带着自己的助理对现场进行了非常详尽的测绘，并且录入了 AutoCAD。这部分工作十分的专业细致。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/apartment-cad.png&quot; alt=&quot;CAD&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里只是一个例子，具体施工相关的加起来有十多页，很详实。&lt;/p&gt;

&lt;p&gt;到了设计图环节，我们发现前面的文档大概没起到对设计师的作用，她出的设计图初稿和终稿可以说都很不满意。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/apartment-design.png&quot; alt=&quot;设计图初稿&quot; /&gt;&lt;/p&gt;

&lt;p&gt;很浮躁的设计，论风格大概是中华韩式简约家居风，完全没有极简风格的神髓，像极了路边小店的山寨欧式风格。&lt;/p&gt;

&lt;p&gt;起初，我们希望说多描述感觉，尊重设计师的思路，而不是对设计师指手画脚。到这里发现是错误的，她并没有理解我们的需求，甚至也没打算理解（没有主动沟通风格）。有一些设计师是“销售设计师”，我遇到的大概是“工程勘测设计师”。&lt;/p&gt;

&lt;p&gt;在让设计师继续纠正的同时，我们也同时做了准备，就是预先保障结构的可行性，对于软装自己设计。结构可行性上，我们判断还是能够保障的，要不我也不会称之为“工程勘测设计师”。&lt;/p&gt;

&lt;h3 id=&quot;施工&quot;&gt;施工&lt;/h3&gt;

&lt;p&gt;施工拖的很长很长。原因有三：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;没有时间监工，进度无法保障，材料供应也有断档&lt;/li&gt;
  &lt;li&gt;先后遇到国庆长假、十九大、北京“低端人口”事件，9到12月间施工很不连贯&lt;/li&gt;
  &lt;li&gt;木门和踢脚线遇到商家跑路，买了新的后直接排到了年后&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;家具&quot;&gt;家具&lt;/h3&gt;

&lt;p&gt;整体来说，就是主卧以 MUJI 为核心，配套色调一致的。MUJI 主要买的是斗柜和床，都是偏浅色的木质品。&lt;/p&gt;

&lt;p&gt;其它房间，理论上都走北欧极简风，这自然就可以想到宜家。在我看来，宜家以极为低廉的价格，提供设计、功能和环保方面都能满意的家具，十分伟大。&lt;/p&gt;

&lt;p&gt;储藏室没什么要求，整洁实用就好。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;确定了房间基调，所有的物品都得围绕着基调买，不能一时兴起和差不多就行。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;预算控制&quot;&gt;预算控制&lt;/h3&gt;

&lt;p&gt;预算和记账都采用 Quip Spreadsheet，记账内容需要精确到物品、房间、一二级分类、品牌和型号、价格、参考链接，最后是否支付和安装属于配套的 Checklist。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/apartment-account.png&quot; alt=&quot;account&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;最后&quot;&gt;最后&lt;/h3&gt;

&lt;p&gt;最后，我给我的房子做了一个&lt;a href=&quot;https://crispgm.github.io/apartment/&quot;&gt;网站 /home/yc&lt;/a&gt;，已有的照片都在里面的&lt;a href=&quot;https://crispgm.github.io/apartment/albums/&quot;&gt;相册&lt;/a&gt;以及&lt;a href=&quot;https://m.haohaozhu.com/user/WVBGQkl6cWx3Um15M0ozSytXR3h2dz09OmI0OGUwNzYxNGQyZmJlZDg2MjU4YWNlNDY0MTg1NDQz.html&quot;&gt;好好住&lt;/a&gt;上。&lt;/p&gt;

&lt;p&gt;整体的效果还是比较满意的，但不天天现场做监督的后果就是细节处容易&lt;del&gt;出现瑕疵&lt;/del&gt;惨不忍睹。&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Jul 2018 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/decorate-my-apartment.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/decorate-my-apartment.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>About Podcast</title>
        <description>&lt;h3 id=&quot;what-is-podcast&quot;&gt;What is Podcast?&lt;/h3&gt;

&lt;p&gt;Podcast&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; 是 iPod 和 broadcast 结合后产生的新词，是一种数字广播技术。通俗地讲，是一种非直播的音频广播节目。它通常使用音频文件进行分发，通过 RSS 技术进行订阅。&lt;/p&gt;

&lt;p&gt;如果说网络视频是互联网时代电视节目的话，那 Podcast 就是互联网时代的音频节目。&lt;/p&gt;

&lt;p&gt;Podcast 的中文译名是『播客』，个人认为这个翻译还是比较信达雅的。&lt;/p&gt;

&lt;p&gt;在中国&lt;del&gt;局域网&lt;/del&gt;互联网内，也有一些类似播客的东西，比如荔枝FM、喜马拉雅等，网易云音乐等也能提供类似的功能。但这些类播客平台和播客本身有着本质的不同，他们是『中心化』的。用博客打个比方，自建博客用 RSS 订阅就是博客，如果是中心化内容平台，就会被叫做“XX号”。&lt;/p&gt;

&lt;h3 id=&quot;podcast-很火&quot;&gt;Podcast 很“火”&lt;/h3&gt;

&lt;p&gt;如果把范围限定在国外的话，Podcast 很“火”。知名新闻类网站如 BBC、Financial Times 等都有自己的官方 Podcast，互联网公司就更不用说了。初期互联网从业者建立的 Podcast 节目应该为数不少，现在很多商业公司也有官方的节目，如 Mozilla&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; 和 Basecamp&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; 等。&lt;/p&gt;

&lt;p&gt;总之，在欧美国家，Podcast 成为了除社交媒体和视频媒体外，又一个营销覆盖的点。&lt;/p&gt;

&lt;h3 id=&quot;podcast-很冷&quot;&gt;Podcast 很“冷”&lt;/h3&gt;

&lt;p&gt;Podcast 在国内是小众，小众到：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;没有多少商业化&lt;/li&gt;
  &lt;li&gt;没有被网红充斥&lt;/li&gt;
  &lt;li&gt;内容审查可能都没覆盖&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因此，这是一个比较纯粹的地方，主要是为了传达一些信息和知识。&lt;/p&gt;

&lt;h3 id=&quot;why-podcast&quot;&gt;Why Podcast?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;“长”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在这个“微”博、“短”视频的年代，“长”的东西越来越少。短视频们甚至已经发展到被定义为几十秒的级别，几分钟都得算是长视频。获取的信息质量越来越低。&lt;/p&gt;

&lt;p&gt;所以我喜欢阅读书籍和传统博客，Podcast 往往几十分钟到小时级不等，也属于这个范畴。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;通勤时间&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;北京的通勤公认的长，去个地方40分钟起步，除去看文章、书籍外，Podcast 也是一个不错的选择。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;情怀&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;小时候还比较喜欢听收音机，虽然也没有多少深刻的回忆，但这也是一种情怀的感觉。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;没有干扰&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;专注于音频内容本身，而不是一些有的没的，所以也不需要有多余的评论。&lt;/p&gt;

&lt;h3 id=&quot;podcast-播放软件&quot;&gt;Podcast 播放软件&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Apple Podcasts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;苹果官方的 Podcast 客户端，早年体验不好。现在用起来十分不错，系统一致的体验，该有的功能基本都没问题，算是入门 Podcast 的利器。自带类似 Podcast 的 AppStore 类的东西，有助于初期发现内容。弱点的话，可能是播放类扩展功能缺失，这也是和第三方客户端目前的主要差异。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pocketcasts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在我看来，这是最好的 Podcast 播放器之一。它可以说是 Podcast 中的 Spotify，支持多种平台（macOS、iOS、Android等，甚至也有 WebPlayer）。可以不同平台播放同一内容，无缝切换。Pocketcasts 甚至还支持 Sonos 音响，可以用家中的 Sonos 音响播放。&lt;/p&gt;

&lt;p&gt;Pocketcasts 也有优秀的内容发现系统，服务端表现稳定。播放器支持调速、去除空白、增强音量。&lt;/p&gt;

&lt;p&gt;Pocketcasts 一直是付费软件，iOS 版价格¥25。它由一个来自澳大利亚的软件公司出品，目前已经被 NPR（美国国家公共电台）收购。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Castro&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;知名的独立开发者开发的 Podcast 播放器，颜值较高。界面比较“性感”，交互很有特色。播放器支持调速、增强音量。之前是一次性付费软件，Castro 3.0 目前刚刚转型订阅制。&lt;/p&gt;

&lt;p&gt;我曾经是 Castro 2 的用户，现在“抛弃” Castro 的主要原因是，Castro 的服务在我使用时遇到过几次问题。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;由于某期节目下载失败，导致整个 App 从此无法下载任何东西&lt;/li&gt;
  &lt;li&gt;部分节目实际已经存在，但搜索不到&lt;/li&gt;
  &lt;li&gt;某些节目页面，进入后网页报错（还是 Heroku 错误页😅）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;除去这些，市面上还有 Overcast、Instacast、Network，功能定位各异，就不一一推荐了。&lt;/p&gt;

&lt;h3 id=&quot;好听的节目&quot;&gt;好听的节目&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://changelog.com/&quot;&gt;The Changelog&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;老牌技术类播客节目，旗下有多款子栏目。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://softwareengineeringdaily.com/&quot;&gt;Software Engineering Daily&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;有些倾向软件工程的程序员播客节目，很有专业感，语速不快。尤其是每次开头，主持人 Jeff Meyerson 会朗读一段2分钟左右的节目介绍开头。语言十分简练，传达的意思十分明确。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.indiehackers.com/podcast&quot;&gt;Indie Hackers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.indiehackers.com/&quot;&gt;Indie Hackers&lt;/a&gt; 旗下的播客节目，主要关于黑客的创业故事。开头音乐我很喜欢。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://teahour.fm&quot;&gt;TeaHour&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;国内的 IT 技术类播客，全栈都有，有很多国内程序圈名人作为嘉宾。但现在更新很少很少。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ipn.li&quot;&gt;IPN&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;旗下有多款播客节目，并有多个已完结和独立出去的节目。比如后面的路书。&lt;/li&gt;
      &lt;li&gt;IPN 不但节目众多，还为国内播客节目设立了标杆：带有博客的官网网站和很有仪式感的开场白“推荐大家使用泛用型播客客户端”部分（见结尾处）。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://anyway.fm/&quot;&gt;Anyway.FM&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;知名设计类播客。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://thetype.com/category/podcast/&quot;&gt;字弹字唱&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://thetype.com/&quot;&gt;Type Is Beautiful&lt;/a&gt; 旗下的字体排印主题播客，对字体感兴趣的必听。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://byte.coffee/&quot;&gt;Byte.Coffee&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;大学教师@Milkshake羊制作的一档有趣的播客。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://checked.fm/&quot;&gt;Checked.FM&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;科技类播客节目，对 IT 硬件产品和 App 有很多不错的见解。于2018年6月5日停更。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ted.com/about/programs-initiatives/ted-talks/ted-talks-audio&quot;&gt;TED Talks Daily&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;几分钟到十几分钟左右的 TED Talks Daily 音频。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lushu88.com/&quot;&gt;路书&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;壁下观原班人马打造，是一档讨论艺术和历史的播客节目。作为一个人，应该了解一些关于艺术和历史的内容。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;最后&quot;&gt;最后&lt;/h3&gt;

&lt;p&gt;虽然在喜马拉雅、荔枝FM、网易云音乐等平台上同步放出，但还是强烈的推荐大家使用泛用型播客客户端收听 Podcast。&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Podcast &lt;a href=&quot;https://en.wikipedia.org/wiki/Podcast&quot;&gt;https://en.wikipedia.org/wiki/Podcast&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://blog.mozilla.org/internetcitizen/2017/06/19/introducing-irl-original-podcast-mozilla/&quot;&gt;Introducing IRL: An Original Podcast From Mozilla&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://rework.fm/&quot;&gt;Rework.fm&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 16 Jun 2018 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/about-podcast.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/about-podcast.html</guid>
        
        
      </item>
      
    
  </channel>
</rss>
