<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>David Zhang</title>
    <description>Home page and blog of David Zhang (@crispgm), a minimalist programmer, photographer, and lifehacker.</description>
    <link>https://crispgm.com/</link>
    <atom:link href="https://crispgm.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 10 Dec 2019 17:58:39 +0800</pubDate>
    <lastBuildDate>Tue, 10 Dec 2019 17:58:39 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      
      <item>
        <title>2019年度生活方式总结</title>
        <description>&lt;p&gt;2018年我进行了第一次&lt;a href=&quot;/page/2018-lifestyle-summary.html&quot;&gt;年度个人盘点&lt;/a&gt;，虽然涉及的内容不多，只有软硬件类，但现在回看还比较有意义，可以知道每年自己大体的状态和思路。因此，今年我要进行一个更加广泛的个人生活方式总结。&lt;/p&gt;

&lt;h2 id=&quot;硬件&quot;&gt;硬件&lt;/h2&gt;

&lt;h3 id=&quot;加湿器&quot;&gt;加湿器&lt;/h3&gt;

&lt;p&gt;冬天天气太干燥了，于是在家里卧室和工位桌面均配置了加湿器。加湿器其实原理上并没有多少壁垒，飞利浦在加湿器除菌方面网络口碑不错，国外产品的造型（仅限HU5930）和品质感也比较好。&lt;/p&gt;

&lt;p&gt;家里是HU5930。这款产品体积和容量都比较大，适合家里房间使用。有专门的水箱，灌水十分方便。而且造型比较美观，跟极简风格比较搭。家中其实没有那么干燥，主要用来再夜间给卧室加湿，减少早上鼻子的不适感。&lt;/p&gt;

&lt;p&gt;工位是HU4801。这款图片看着不大，实际放办公桌上其实有些偏大，如果是小房间用这个也足够了。&lt;/p&gt;

&lt;h3 id=&quot;蒸汽清洁机&quot;&gt;蒸汽清洁机&lt;/h3&gt;

&lt;p&gt;看 YouTube 上汽车 detailing（此处不是“细节”的意思，应该翻译成汽车清洁）视频，印象最深刻的工具就是沙发清洁机和蒸汽清洁机。前者有个强力吸头，可以直接在沙发或者地毯上涂抹泡沫，然后吸干。或者则是高压蒸汽，清洁一些难以去除的污渍。&lt;/p&gt;

&lt;p&gt;家里没有什么地毯和沙发需要清理，但对于蒸汽清洁机还是有需求的。于是购入了 Karcher 高温蒸汽清洁机，清洁面包机、电饭锅、灶台效果都超好，对于各种细缝能直接把灰尘、颗粒“喷”出来。&lt;/p&gt;

&lt;h1 id=&quot;软件和服务&quot;&gt;软件和服务&lt;/h1&gt;

&lt;p&gt;今年对于手机上的 app 以及服务，几乎没什么动作，原来用什么现在还在用。主要变化在于对于开发工具的尝试和改善。以往就对开发工具非常感兴趣，今年算是大面积革新了自己的工具链。&lt;/p&gt;

&lt;h3 id=&quot;nord&quot;&gt;Nord&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.nordtheme.com/&quot;&gt;Nord&lt;/a&gt; 是一套配色主题。&lt;/p&gt;

&lt;p&gt;原先在开发工具上尝试过若干配色主题，从 Sublime Text 默认的 Monokai，到 vim 上的 Zarniwoop，还有后来比较喜欢的 Tomorrow Night 系列等。&lt;/p&gt;

&lt;p&gt;对于这些主题都是混用不成体系，而今年把所有能换主题的东西基本都统一成了 Nord：iTerm2、Sublime Text、Visual Studio Code、vim 等，甚至是 Arch Linux 上的主题等。&lt;/p&gt;

&lt;p&gt;同时，我自己也移植制作了 &lt;a href=&quot;https://github.com/crispgm/alfred-nord&quot;&gt;Alfred Nord&lt;/a&gt; 主题。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/alfred-nord-screenshot.jpg&quot; alt=&quot;Alfred Nord Screenshot&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;vscode&quot;&gt;VSCode&lt;/h3&gt;

&lt;p&gt;全称 Visual Studio Code，不是传统的 Visual Studio IDE，而是一款基于微软开源技术的编辑器，在广大开发者心中或许已经成为了最佳图形化编辑器。&lt;/p&gt;

&lt;p&gt;Nadella 上台后，微软推出了很多开源的东西，甚至拥抱了 Linux 社区。虽然 Windows 由于体验问题并不太容易撼动 macOS 在开发者心中的地位，但这些开发者友好的做法的确收获了不少开发者的青睐。&lt;/p&gt;

&lt;p&gt;他成功证实了微软没有必要与开源开发者“为敌”，更应该做的是融入其中。而 VSCode 就是微软在融入开源社区后的最佳成果，也展现了微软多年的软件功力。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/vscode-go-screenshot.png&quot; alt=&quot;VSCode Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;VSCode 有着丰富的基础功能和配置，允许开发者自己定制，并且有强大的插件系统和生态。采用社区中最流行的 TypeScript 和 Electron 技术开发，减少了代码贡献者和插件开发者的熟悉成本和壁垒。&lt;/p&gt;

&lt;h3 id=&quot;command-line&quot;&gt;Command Line&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;git&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;git 很强大，强大到一般人可能只会 clone 然后 add、commit、push 三连。遇到问题后，可能只会祭出把文件备份走再 clone 回来接着干的粗暴方式。&lt;/p&gt;

&lt;p&gt;就像新手入门 vim，只会用 i 进入编辑模式一顿狂改，然后 wq 退出。只发挥了工具1%的能力，其它什么也不会的感觉。&lt;/p&gt;

&lt;p&gt;由于在 GitHub 和 GitLab 不断积累的一些操作经验，慢慢开始娴熟掌握了各种复杂的技能，比如 rebase、reset、cherry-pick 等。并且，通过一些网络资料以及《精通 Git》，掌握了一些真正的原理和高级用法。&lt;/p&gt;

&lt;p&gt;我第一次稍微有种，我能基本掌控 git 的感觉。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;neovim&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;今年从 vim 迁移到 neovim。其实对于我来说 vim 和 neovim 用起来没多大区别，更多的是稍微更认同一些 neovim 的社区模式，以及更丰富的插件生态。&lt;/p&gt;

&lt;p&gt;一如既往，我不是 vim 的铁杆，只用 vim 做简单的编辑/修改操作。但既然用了，配置的也得舒服好用，这是我的配置：&lt;a href=&quot;https://github.com/crispgm/dotfiles/tree/master/neovim&quot;&gt;crispgm/dotfiles - neovim&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Modern CLI Tools&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;近年来涌现出一系列用户体验好、功能强大的现代（Modern）命令行工具，包括但不仅限于：fzf, ripgrep, fd 等。这些工具大多用新语言编写（Rust 或 Go），同时兼顾性能、UI 和用户体验。&lt;/p&gt;

&lt;p&gt;同时，通过简化参数，降低了入门成本。默认参数或者几个简单参数就可以实现 GNU 那些“古董”工具们一大堆参数才能实现的功能。&lt;/p&gt;

&lt;h3 id=&quot;reddit&quot;&gt;Reddit&lt;/h3&gt;

&lt;p&gt;Reddit 就是美国的贴吧。比起贴吧，他内容更科技，小众内容更加丰富有深度。&lt;/p&gt;

&lt;p&gt;关注了一些关于极简主义 &lt;a href=&quot;https://www.reddit.com/r/minimalism&quot;&gt;/r/minimalism&lt;/a&gt; 和冥想 &lt;a href=&quot;https://www.reddit.com/r/meditation&quot;&gt;/r/meditation&lt;/a&gt; 的内容，以及比较感兴趣的技术类 &lt;a href=&quot;https://www.reddit.com/r/unixporn、&quot;&gt;/r/unixporn、&lt;/a&gt;、&lt;a href=&quot;https://www.reddit.com/r/neovim&quot;&gt;/r/neovim&lt;/a&gt;、&lt;a href=&quot;https://www.reddit.com/r/archlinux&quot;&gt;/r/archlinux&lt;/a&gt; 什么的。不过最长见识的，大概是机械键盘 &lt;a href=&quot;https://www.reddit.com/r/MechanicalKeyboards&quot;&gt;/r/MechanicalKeyboards&lt;/a&gt;，各种各样尺寸和配色的 DIY 键盘，实在太丰富了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/reddit-mechanical-keyboard.png&quot; alt=&quot;Mechanical Keyboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最后，感叹一下，中国的贴吧已经被百度失败的运营和内容审查弄得大不如前。看着它一步一步难用到现在这个样子，令人惋惜。&lt;/p&gt;

&lt;h3 id=&quot;arch-linux&quot;&gt;Arch Linux&lt;/h3&gt;

&lt;p&gt;我本来沉浸于 macOS 优秀的开发和日常体验中很久了，但受到 Reddit 上内容的“引诱”，我开始对 Arch Linux 十分好奇。&lt;/p&gt;

&lt;p&gt;众所周知，这类贴吧类网站总会有很多宝藏，但找不找得到还是很靠缘分的。而我的缘分来自 Reddit 的上的 &lt;a href=&quot;https://www.reddit.com/r/unixporn/&quot;&gt;/r/unixporn&lt;/a&gt;，最开始只是为了看看 vim 的配置而关注，但实际看到的是各种 Unix/Linux 桌面配置。与以往对 Ubuntu 那种橙色 UI 印象不同的是，在这里分享的都是很个性很漂亮的搭配，简直令我着迷。&lt;/p&gt;

&lt;p&gt;后来知道，这种行为叫做 RICE。而他们往往使用 Arch Linux 作为操作系统的选择，配合上 i3、i3-gaps、bspwm 等 tiling window manager 进行构建。分享时大多会用 neofetch/pfetch 显示下系统信息，有时也会运行一个“黑客帝国”工具。&lt;/p&gt;

&lt;p&gt;从上面的 git 和 vim 等工具就可以看出，我今年很爱折腾命令行工具。于是一拍即合开始折腾，买了一块新的SSD专门折腾 Linux，顺利的搭配出一版：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rice-screenshot.jpg&quot; alt=&quot;Arch Linux&quot; /&gt;&lt;/p&gt;

&lt;p&gt;入坑后，我也写了一篇总结性博文——&lt;a href=&quot;/page/the-fascinating-arch-linux-rice.html&quot;&gt;The Fascinating Arch Linux RICE&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;firefox&quot;&gt;Firefox&lt;/h3&gt;

&lt;p&gt;大概从前二、三年开始，美国互联网舆论（基本代表了美国左派）就开始攻击 Facebook，而 Facebook 自己也不争气，爆出各种侵犯隐私的事情。而本来就是白左大本营的 Google，也因为广告的商业模式侵犯用户隐私而备受质疑。很多“意见领袖”（比如 DHH）带头删除 Facebook、Uber 等 app，将 Google 替换成 DuckDuckGo。&lt;/p&gt;

&lt;p&gt;而在浏览器行业，Chrome 也不可避免的中枪了。恰逢此时，Firefox 打起了隐私浏览器的旗号，成为了正确的浏览器。而我也难以免俗，在 Arch Linux 下不再使用 Chrome，在 macOS 上也减少 Chrome 的使用，把非工作内容浏览器换成了 Firefox。&lt;/p&gt;

&lt;p&gt;不过，对于中国这个互联网相关法律不健全、基本完全不尊重个人隐私的国度，Google 的产品其实已经还不错了。因此，我们没有必要大规模弃用。&lt;/p&gt;

&lt;h1 id=&quot;读书&quot;&gt;读书&lt;/h1&gt;

&lt;p&gt;今年看得书数量不少但内容比较杂，以至于到了年底有些不知道都看了些什么。综合来说，以后对于书的门类选择要更加专注，尤其不要乱尝试看一些历史类的书。一般人觉得好看的往往是历史演义或小说，很多真正的历史类书籍，可能真的就是流水账，或者是枯燥的记录，需要根据个人情况选择。&lt;/p&gt;

&lt;h3 id=&quot;精通-git&quot;&gt;精通 Git&lt;/h3&gt;

&lt;p&gt;前面提到的书，英文版叫 Pro Git。&lt;/p&gt;

&lt;h3 id=&quot;司马辽太郎之日本战国四部曲&quot;&gt;司马辽太郎之日本战国四部曲&lt;/h3&gt;

&lt;p&gt;虽说整体比较杂，但司马辽太郎这几本由于是按照 bundle 购入，所以主题还是比较明确的。分别是（按照阅读顺序）：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;《新史太阁记》&lt;/li&gt;
  &lt;li&gt;《国盗物语：斋藤道三》&lt;/li&gt;
  &lt;li&gt;《国盗物语：织田信长》&lt;/li&gt;
  &lt;li&gt;《城塞》&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这四部传记分别讲述了（按时间顺序）打破旧规、谋国成功从而掀起战国帷幕的斋藤道三；不循规蹈矩从而初成霸业，后于本能寺之变被明智光秀袭击身先死的织田信长；出身卑微善于揣摩领导得到织田信长赏识，之后为织田信长“复仇”后位极人臣的丰臣秀吉；和稳重、老谋深算、寿命长？，后来击败丰臣秀吉的儿子，最终夺取天下的德川家康。&lt;/p&gt;

&lt;p&gt;在历史中，德川家康无疑是“胜利者”，从此进入了德川幕府的时代一直到明治维新。但对于司马辽太郎本人，德川家康却是这几人中他最为讨厌的。&lt;/p&gt;

&lt;p&gt;看完了这几本书，基本弄清楚了日本战国时期的大概脉络。也促成了后来日本旅游时，专门探访了战国主战场之一的岐阜稻叶山城。&lt;/p&gt;

&lt;h1 id=&quot;影音动漫&quot;&gt;影音/动漫&lt;/h1&gt;

&lt;h3 id=&quot;铳梦&quot;&gt;铳梦&lt;/h3&gt;

&lt;p&gt;成年后第一次看漫画。偶然在飞机上看了电影《阿丽塔》的前部分，发现居然是 Cyber Punk 风格，于是对内容发展很有兴趣。搜索后得知是源自漫画《铳梦》，一部 Cyber Punk 风格的漫画。&lt;/p&gt;

&lt;p&gt;《铳梦》画风和趣味性都不错，情节节奏比较快不冗长。最吸引我的当然是 Cyber Punk 的背景设定，跟《&lt;a href=&quot;https://zhuanlan.zhihu.com/p/44622519&quot;&gt;「赛博朋克2077」的公司多恐怖？竟能动员百万军队&lt;/a&gt;》中介绍的十分一致。&lt;/p&gt;

&lt;p&gt;Cyber Punk 是反乌托邦的，我对于 Cyber Punk 中的“丛林法则”既不推崇也不向往。不过对于其中的生物机械学、半机械人（cyborg）以及其它各类未来科技非常感兴趣。&lt;/p&gt;

&lt;h1 id=&quot;爱好&quot;&gt;爱好&lt;/h1&gt;
&lt;h3 id=&quot;清洁&quot;&gt;清洁🧹&lt;/h3&gt;

&lt;p&gt;把本来肮脏、杂乱的东西，清理干净，摆放整齐，是一种激励感和成就感很充足的事情。&lt;/p&gt;

&lt;p&gt;买了扫地机器人、MUJI 清扫套装、蒸汽清洁机等工具，熟练掌握了灶台、水槽和马桶的清洁技术。&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Dec 2019 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/2019-lifestyle-summary.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/2019-lifestyle-summary.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>The Fascinating Arch Linux RICE</title>
        <description>&lt;p&gt;Recently, I dive into Linux the third time. The first time is in my childhood, I was attracted by the magazines, which introduced me the hacker culture. The second time was weird, I wanted to focus on study instead of PC gaming.&lt;/p&gt;

&lt;p&gt;This time, it’s totally different. &lt;a href=&quot;https://www.reddit.com/r/unixporn/&quot;&gt;/r/unixporn&lt;/a&gt; and &lt;a href=&quot;https://www.reddit.com/r/MechanicalKeyboards&quot;&gt;/r/MechanicalKeyboards&lt;/a&gt; attracted me. The most fascinating part of that is RICE or RICE culture.&lt;/p&gt;

&lt;h2 id=&quot;rice&quot;&gt;RICE&lt;/h2&gt;

&lt;p&gt;RICE is not the food rice. Instead, it is the acronym of Race Inspired Cosmetic Enhancements. Let me look up in the dictionary:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Parts put on cars to make them look fast, when they have no internal tuning, and are actually slow as hell. &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The definition is quite funny. It is exact the same behavior as we make a great UI for dev and feel as if we get better efficiency.&lt;/p&gt;

&lt;p&gt;Just as I remember, my first deep experience on RICE is in the MMORPG game – World of Warcraft. WoW is an epic Blizzard game, with great storyline and gaming experience.&lt;/p&gt;

&lt;p&gt;Another fascinating part of WoW is the customizable user interface. For WoW, it provides a simple UI, even lacking of basic functions on quests, timers and so on. But its APIs are full pledged. Developers make lots of WoW plugins. And gamers composite the plugins into their own user interface. It’s a typical RICE art and I like to watch FD (first down) videos because of their great UI in different styles. And I spent a lot of time compositing my own one.&lt;/p&gt;

&lt;p&gt;My WoW Interfaces:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rice-wow-interface1.jpg&quot; alt=&quot;my-wow-interface-1&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/rice-wow-interface2.jpg&quot; alt=&quot;my-wow-interface-2&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;linux-rice&quot;&gt;Linux RICE&lt;/h2&gt;

&lt;p&gt;Mac/macOS are great hardware and software. But Apple seems never really create the soil for RICE. Apple’s idea is to create great product where hardware and software are seamless and easy to use for normal users. RICE has nothing to do with easy to use by its definition. And macOS has long time been an authority software and closed ecosystem, so that we can hardly make deep customization into system core.&lt;/p&gt;

&lt;p&gt;And it’s similar to Windows. RICE should only be great in the Linux world.&lt;/p&gt;

&lt;p&gt;Try Ubuntu?&lt;/p&gt;

&lt;p&gt;Ubuntu may be the most popular Linux distribution. I was once an Ubuntu user. It is a great distribution, which is maybe the first beginner-friendly Linux distribution. It is a success to get big population within developers and is pre-installed on some cheaper PCs.&lt;/p&gt;

&lt;p&gt;But to some extent, it is a failure. For developers, they may use Linux a lot but they may not actually use a Linux desktop. Most of them live in Terminal or even access Linux remotely with SSH from either Windows or macOS. The basic setup of IT companies is MacBook with real or virtual Linux box. The desktop is just not friendly enough. For others, it is simply hard to find Linux either user-friendly or productive. e.g. The &lt;a href=&quot;https://www.techrepublic.com/article/linux-to-windows-10-why-did-munich-switch-and-why-does-it-matter/&quot;&gt;LiMux Project&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For Unix/Linux RICE, I found ArchLinux and i3 are their major choices on operating system, though Ubuntu sometimes be mentioned.&lt;/p&gt;

&lt;h3 id=&quot;arch-linux&quot;&gt;Arch Linux&lt;/h3&gt;

&lt;p&gt;When I was an early Linux enthusiastic, I heard about these main distros. e.g. Redhat/Fedora, Debian, SUES, Slackware, Ubuntu, Gentoo, and also Arch.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.archlinux.org/&quot;&gt;Arch Linux&lt;/a&gt; has the best home page (IMO) and wiki of Linux distros in the world. The color scheme of its home page win at its beginning.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rice-arch-linux-org.png&quot; alt=&quot;arch-linux-org&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Arch Linux chooses blue as major color, which is vivid and shows the sense of technology. I kept on copying the color scheme when I was building my own home page. Even though today, I still feel it is a good color scheme.&lt;/p&gt;

&lt;p&gt;Let’s head to Arch Linux’s philosophy. I have no idea of these minimal style distros since you can hardly handle shell/terminal from the beginning. But as soon as I get &lt;em&gt;solid&lt;/em&gt; skills on that, I appreciate its idea: &lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Simplicity, minimalism, and code elegance&lt;/li&gt;
  &lt;li&gt;Installed as a minimal base system, configured by the user upon which their own ideal environment is assembled by installing only what is required or desired for their unique purposes.&lt;/li&gt;
  &lt;li&gt;Pacman package manager&lt;/li&gt;
  &lt;li&gt;Rolling-release upgrades model&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As soon as I read Arch’s philosophy, I know that the second point is the most important reason why it is popular in RICE culture. And Pacman makes it even easier and powerful.&lt;/p&gt;

&lt;p&gt;It is somehow like Gentoo Linux but seems to be a lot easier, because the Gentoo packages and base system are built directly from source code but Arch tends to make user build packages quicker.&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;And finally, it is like you make your own system and are responsible for yourself. You choose what you need and configure as you like based on what you can do. No surprise, no weird parts, so it is totally in control.&lt;/p&gt;

&lt;p&gt;The Arch Linux Wiki is so good that I can easily follow the &lt;a href=&quot;https://wiki.archlinux.org/index.php/Installation_guide&quot;&gt;Installation guide&lt;/a&gt; and it is done.&lt;/p&gt;

&lt;p&gt;It is super easy to install packages with Pacman. Everything is there and Arch also has a repository (ArchLinux User Repository) for user packages. For example, it is like a non-GUI operating system and we need some more to setup a GUI system.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Login Manager&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pacman &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; lightdm lightdm-gtk-greeter
&lt;span class=&quot;c&quot;&gt;# X Window&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pacman &lt;span class=&quot;nt&quot;&gt;-S&lt;/span&gt; xorg-server xorg-apps xorg-xinit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;i3&quot;&gt;i3&lt;/h3&gt;

&lt;p&gt;i3 is a popular tiling window manager. Tiling window manager? It’s a kind of window manager, where all windows lay on the desktop like tiles or panes, and you just do not move windows by dragging title panel. Instead, it’s controlled by keys. You can easily move around and resize the windows.&lt;/p&gt;

&lt;p&gt;i3-gaps is an i3 fork, which is almost the same and adds more features such as gaps between windows, that’s why it is called i3-gaps.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo pacman -S i3-gaps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After installing X Window and i3-gaps, I got an empty desktop while I can open a terminal with &lt;code class=&quot;highlighter-rouge&quot;&gt;Mod+Enter&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;alacritty&quot;&gt;Alacritty&lt;/h3&gt;

&lt;p&gt;To work with tiling window manager, we need a minimal style terminal. It may not provide either multi-tabs support or multi-panes support.&lt;/p&gt;

&lt;p&gt;urxvt, kitty, and st are common picks. I tried urxvt, which is actually rxvt-unicode, but I have problems with Asian language displays.&lt;/p&gt;

&lt;p&gt;Then I found that &lt;a href=&quot;https://github.com/jwilm/alacritty&quot;&gt;Alacritty&lt;/a&gt; is the right one for me. It is high-performance, GPU powered and easy configuration.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo pacman -S alacritty
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rice-alacritty.png&quot; alt=&quot;alacritty&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;i3wm-themer&quot;&gt;i3wm-themer&lt;/h3&gt;

&lt;p&gt;For i3 starters, &lt;a href=&quot;https://github.com/unix121/i3wm-themer&quot;&gt;i3wm-themer&lt;/a&gt; should be mentioned. It is a CLI tool setups simple and minimalistic desktop themes for you. It is best for newcomers to setup a basic theme and have a panoramic and basic concepts on what composite a capable desktop.&lt;/p&gt;

&lt;p&gt;i3wm-themer integrates i3-gaps, Polybar, Nitrogen, Rofi, rxvt-unicode, various fonts and others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Polybar&lt;/strong&gt; is to help users create awesome status bars. It provides a collection of modules. e.g. Text label, sound volume, Wi-Fi status, date &amp;amp; time, and etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rofi&lt;/strong&gt; is an application launcher, a replacement of dmenu. dmenu is the default one for X but Rofi seems to be more popular. And there are also Alfred-like application launchers, but for most scenario, Rofi is enough.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nitrogen&lt;/strong&gt; is basically a background setter.&lt;/p&gt;

&lt;p&gt;And as aforementioned, I replace rxvt-unicode with Alacritty.&lt;/p&gt;

&lt;p&gt;Based on i3wm-themer, I have finally done my first Arch Linux RICE. All configuration files of those parts are stored under &lt;code class=&quot;highlighter-rouge&quot;&gt;$XDG_CONFIG_HOME&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rice-screenshot.jpg&quot; alt=&quot;screenshot&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;other-applications&quot;&gt;Other Applications&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Ranger&lt;/strong&gt; is a file manager and previewer with terminal interface, and navigation is similar to Vim key bindings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;vimiv&lt;/strong&gt; may not be a well-known software but it worth a try. There are a variety choices of image viewers and managers. vimiv is a Ranger but for images. It is fast and works with GIF animations. A vim-style image manager is so minimalistic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Firefox&lt;/strong&gt; is a well-known browser. It is real free software and does not compromise on privacy, comparing to Google. That’s the reason why I did not choose Chrome or Chromium.&lt;/p&gt;

&lt;h3 id=&quot;obstacles&quot;&gt;Obstacles&lt;/h3&gt;

&lt;p&gt;RICE on Arch Linux and maybe just Linux could be interesting but it also has obstacles. There are common parts, however, every component actually follows its own choice. e.g.:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bash or Zsh uses dot rc files&lt;/li&gt;
  &lt;li&gt;Most modern softwares use XDG directories&lt;/li&gt;
  &lt;li&gt;GUI apperances are configured under &lt;code class=&quot;highlighter-rouge&quot;&gt;.Xresources&lt;/code&gt; or using GTK (or Qt) themes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And to make things much more difficult, they have their own file specifications.&lt;/p&gt;

&lt;p&gt;I have to write Shell Script, JSON, XML, YAML, INI, and other private configuration codes.&lt;/p&gt;

&lt;p&gt;For tools like Vim, it’s actually Vim Language and we have to learn a lot to make it powerful together with plugins. Luckily, Vim configuration is another topic that I have already handled before.&lt;/p&gt;

&lt;p&gt;That’s the cost of freedom. We as users have the freedom to choose everything and software programmers also have.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I think RICE is the art of building things special for personal use and habits, and with our own tastes and personalities. I know that not everyone is interested or has the passion on RICE. Once I dived into that, I have had a lot of happiness.&lt;/p&gt;

&lt;p&gt;My Arch Linux dotfiles: &lt;a href=&quot;https://github.com/crispgm/arch-linux-dotfiles&quot;&gt;https://github.com/crispgm/arch-linux-dotfiles&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.urbandictionary.com/define.php?term=rice&amp;amp;defid=955541&quot;&gt;Urban Dictionary: rice&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.archlinux.org/about/&quot;&gt;https://www.archlinux.org/about/&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/Arch_compared_to_other_distributions#Gentoo/Funtoo_Linux&quot;&gt;Arch compared to other distributions&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 31 Aug 2019 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/the-fascinating-arch-linux-rice.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/the-fascinating-arch-linux-rice.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>福冈之旅——乃木坂46演唱会（下）</title>
        <description>&lt;p&gt;接上一篇：&lt;a href=&quot;/page/nogizaka-46-fukuoka-1.html&quot;&gt;福冈之旅——乃木坂演唱会（上）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;完成了激动人心的取票活动后，从博多站徒步前往 Airbnb。我的一大爱好就是国外旅游时散步溜达，虽说时常会导致特别累。&lt;/p&gt;

&lt;h3 id=&quot;入住&quot;&gt;入住&lt;/h3&gt;

&lt;p&gt;住宿订的 Airbnb，但日本现在实行了专门的民宿法规，民宿本身都是有资质的，并且住宿者也要提交个人信息。由此以来，日本的真正民宿都没了，取而代之的是近似旅店体验的民宿。这种民宿可以抽象为没有接待人员并且不是每天都打扫房间的旅馆。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-fukuoka-airbnb.jpg&quot; alt=&quot;Airbnb Room&quot; style=&quot;height: 480px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;或许这也是 Airbnb 生意做大后的本质，宣扬的与当地人分享体验的场景越来越少，只是提供了更便宜的住宿。&lt;/p&gt;

&lt;h3 id=&quot;踩场&quot;&gt;踩场&lt;/h3&gt;

&lt;p&gt;把东西放下后，我就拿着轻便背包装着相机前往 Live 的会场。去便利店一“激动”，给 Suica 充值了5000日元，后来想想也不错，坐车再也不担心没钱了。顺带说一句，如果在日本用现金坐公交的话，需要在上车时在一个诡异高度的位置拿张券以记录你是在哪站上车的，之后凭这个在司机处“结账”。&lt;/p&gt;

&lt;p&gt;演出的场地叫 Yafuoku!，也就是 Yahoo! 和 Fukuoka 的结合体。Yafuoku! 是一个专业棒球场，福冈本地职棒球队软银鹰的主场，也是日本几大巨蛋中的一个。&lt;/p&gt;

&lt;p&gt;这个球场顶部有可以活动的穹顶。天气好时可以作为露天球场使用，天气不好或者夜间则会关闭。&lt;/p&gt;

&lt;p&gt;Yafuoku! 棒球场的情况跟梅赛德斯·奔驰中心以及五棵松之类其实差不多，地点都稍有些偏于是单独配备了购物中心——MARK IS。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-fukuoka-mark-is.jpg&quot; alt=&quot;MARK IS&quot; /&gt;&lt;/p&gt;

&lt;p&gt;球场前面旗杆上都挂了乃木坂46的旗帜。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-fukuoka-dome.jpg&quot; alt=&quot;Fukuoka Dome&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-truck.jpg&quot; alt=&quot;Nogizaka Truck&quot; /&gt;&lt;/p&gt;

&lt;p&gt;提前前来的主要原因就是为了排队买场贩——购买应援物品，据说当天后排队排成狗，所以必须提前买好。&lt;/p&gt;

&lt;p&gt;提前来排场贩的人不多，但由于大家都是聚聚，每个人都买好几件，所以推进速度十分慢。我补充了一根应援荧光棒和推巾两条，购买之后还赠送了一次抽奖，我抽到了梅泽美波的徽章。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-towels.jpg&quot; alt=&quot;Nogizaka Towels&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-badge.jpg&quot; alt=&quot;Nogizaka Badge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;球场对面是个希尔顿酒店，应该有无敌海景。中间有些艺术品，叫什么忘记了和很多猫。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-fukuoka-hands.jpg&quot; alt=&quot;Sculpted hands&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-fukuoka-cat.jpg&quot; alt=&quot;Cat&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;中洲&quot;&gt;中洲&lt;/h3&gt;

&lt;p&gt;场贩买好之后，基本就到了吃饭时间。这次我还要继续尝试和牛铁板烧，找到一家位于中洲的铁板烧店——miyachiku，宫崎牛专营店。Google Maps 上看评分高达4.6。&lt;/p&gt;

&lt;p&gt;服务员很职业精通英语，服务非常好。厨师遇到一个可爱妹子，会说跟做的菜相关的英语，但沟通了几句应该不太会其它英语。&lt;/p&gt;

&lt;p&gt;这是我的宫崎牛肉和虾：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-fukuoka-beef.jpg&quot; alt=&quot;Beef&quot; /&gt;&lt;/p&gt;

&lt;p&gt;吃完饭就在中洲这个地方走动一下。中洲是一块江心洲，位于那珂河口区域，跟福冈市中心天神地区连在一起。&lt;/p&gt;

&lt;p&gt;据说中洲有屋台（Yatai）小吃，但可能下雨或者走错路并没有遇到。反而发现，中洲的南部一大片都是红灯区，至少有个三条街。路上搜索了一番，说福冈是日本性都什么的。&lt;/p&gt;

&lt;p&gt;根据对门口的店面观察，首先就是都叫各种无料案内，据说是免费资料的意思。还有就是各种写着摄影什么的，心想PC还是算了，但要是有这种摄影活动还真有些想参加。最后就是，这些店铺好像很多都是走细分垂类路线，看起来很有趣。&lt;/p&gt;

&lt;p&gt;说起来上次来的时候光顾的运河城，就在这片区域的河对岸，当时丝毫没有察觉到。&lt;/p&gt;

&lt;h3 id=&quot;天神&quot;&gt;天神&lt;/h3&gt;

&lt;p&gt;第一天福冈只是阴天，而第二天开始可以说是糟糕的天气了。由于在韩国有台风，福冈开始持续下雨，甚至乃木坂46官方都发了通告，表示暂时演唱会不取消观察天气情况而定。赶紧下载了「Yahoo! 防災情報」预警 App，似乎情况还好。&lt;/p&gt;

&lt;p&gt;这雨并没有很大，而是像梅雨一样断断续续，虽没有那么闷热，但身上总之是潮潮的。&lt;/p&gt;

&lt;p&gt;考虑到天气和体力，本来有些想去的能古岛也就取消了，改成去天神闲逛。&lt;/p&gt;

&lt;p&gt;天神是个现代化的市中心，有很多综合性百货商场适合购物。&lt;/p&gt;

&lt;p&gt;比较有意思的是，夏季大雨天的，天神附近的小公园居然在组织 Oktoberfest。由于阴雨天气，摊位比较冷清。&lt;/p&gt;

&lt;p&gt;午饭在天神附近的一兰拉面，由于我并不追捧「网红店」，因此其实也并没有很想去，但看到没人刚好想吃拉面排队就吃了。虽然在东京和大阪都吃过，但福冈的一兰拉面值得一去。一兰的总店就设于福冈，这里的店使用方碗，说是只有九州限定店才有。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-fukuoka-ichiran.jpg&quot; alt=&quot;Ichiran Ramen&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;演唱会&quot;&gt;演唱会&lt;/h3&gt;

&lt;p&gt;由于不是演唱会 repo 贴，就不太细说内容，只列一下感受和见闻。&lt;/p&gt;

&lt;p&gt;首先博多市内、地铁、公交车，几乎随时都能碰到披着推巾或者穿乃木坂应援衣服的人。头一天坐公交去现场公交车在天神后是空的，演唱会当天爆满，天神后几乎全是看演唱会的人。&lt;/p&gt;

&lt;p&gt;到了现场之后，公交和地铁下来的人汇成人流前往 Yafuoku! 棒球场。一下车雨开始下大了，我于是在 MARK IS 买了此次旅行的第二把雨伞。&lt;/p&gt;

&lt;p&gt;场外可以看到很多女饭。比如JK妹子，很多应该都是中学生；穿乃木坂46 T恤的特别多，简直有些后悔自己前一天没买一件；再就是我发现有不少妹子穿「Sing Out!」那种紫色长裙。推斋藤飞鸟的特别多！&lt;/p&gt;

&lt;p&gt;入场非常比较轻松，进到场内就有工作人员不断举牌提醒不要录音、摄像和使用手机，还没开场手机就不让用了。&lt;/p&gt;

&lt;p&gt;我附近有几个安静肥宅，左边、正前、左前都是这种，并且左前因为体积过大都挤到隔壁较瘦的肥宅了。&lt;/p&gt;

&lt;p&gt;开场前，居然几乎没有人喊「俺の嫁」。&lt;/p&gt;

&lt;p&gt;一开场，全场观众集体起立，这个在乃木坂46上海公演已经见识过了。Overture 由于 call 声及其回声太大，我甚至听不清 Overture 的音乐部分。但附近的肥宅只看演唱会没有声音，左边那位全程望远镜看大屏幕，可见我位置的悲惨。&lt;/p&gt;

&lt;p&gt;说起位置，这次位置有三点非常坑：首先是音响布局或者朝向对这边不太好，导致这个区域听不到部分音响的声音，导致我这边听见的不是完整的合声，类似单声道的感觉，不太熟悉的歌几乎听不出调；其次是因为角度不好看屏幕非常别扭，毕竟离这远看不到偶像可以理解，但看屏幕也费劲就比较悲剧了；正对面有个大功率射灯，如果在主舞台时就会开启，虽然不会直射，但也很晃眼。&lt;/p&gt;

&lt;p&gt;在上面的感想贴中找到一张图片，我就是在这个位置进入口的右侧第二排第二格。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-live-twitter.jpg&quot; alt=&quot;Live Twitter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;回到 LIVE 本身，开场起手首先是燃曲6连：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;インフルエンサー&lt;/li&gt;
  &lt;li&gt;命は美しい&lt;/li&gt;
  &lt;li&gt;何度目の青空か？&lt;/li&gt;
  &lt;li&gt;太陽ノック&lt;/li&gt;
  &lt;li&gt;ガールズルール&lt;/li&gt;
  &lt;li&gt;夏のFree&amp;amp;Easy&lt;/li&gt;
  &lt;li&gt;裸足でSummer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;看歌曲和顺序，曲目跟名古屋场应该一样。至于站位什么的，我只能说我看不清，都是后来参照：&lt;a href=&quot;https://lyfe8.com/nogi720fd/&quot;&gt;乃木坂46 夏コン 福岡 ライブ2019 セトリ・感想【7/20】｜Lyfe8&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;中间三四期生纷纷上台跳了专门的曲目：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;三番目の風&lt;/li&gt;
  &lt;li&gt;4番目の光&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;由于大园桃子没来，福冈本地人与田祐希当了「三番目の風」的 Center。&lt;/p&gt;

&lt;p&gt;后面是一些 Unit 曲，我对乃木坂46的 Unit 曲历来不熟。就记得嫂子（秋元真夏）跳了「魚たちのLOVE SONG」，穿得鱼形打歌服比较搞笑。之后还让观众喊 Mizuki Kawaii 和 Ayame Kawaii。&lt;/p&gt;

&lt;p&gt;后面一大段是熟悉的团队曲，包括最新的23单。「おいでシャンプー」的CALL的确很神，这次LIVE彻底学会了“挥棒姿势”，不过中间的花奈CALL，还是回来看了&lt;a href=&quot;https://www.bilibili.com/video/av44884727&quot;&gt;四期生妹子的演示&lt;/a&gt;才会的。23th 新单曲目「滑走路」会提示器带观众一起切按顺序荧光棒颜色，「Sing Out!」不需要喊，但集体跟着节奏拍手反而觉得很有感染力。&lt;/p&gt;

&lt;p&gt;最后就是安可，持续时间比较短，很快就重新出来。前两首安可曲我都不太熟，最后是固定的「乃木坂の詩」。棒子全切紫色，不过这次发现后面副歌固定要跟唱。又要学一波新应援技能了，不得不感慨日本人搞东西门道就是多。&lt;/p&gt;

&lt;h3 id=&quot;下次再会&quot;&gt;下次再会&lt;/h3&gt;

&lt;p&gt;随着演唱会结束，福冈之旅也接近尾声，最后一日主要是进行代购和回城，就不多说了。&lt;/p&gt;

&lt;p&gt;下次再会既是给乃木坂46说的，也是给福冈说的。&lt;/p&gt;

&lt;p&gt;日本的演唱会气氛的确没得说，但这次演唱会位置比较悲剧，没有那么尽兴，10月末上海演唱会见。&lt;/p&gt;

&lt;p&gt;福冈是一个整洁美丽的地方，本身以及它所在的九州都值得继续探索。总之，下次再会。&lt;/p&gt;
</description>
        <pubDate>Mon, 05 Aug 2019 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/nogizaka-46-fukuoka-2.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/nogizaka-46-fukuoka-2.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>福冈之旅——乃木坂46演唱会（上）</title>
        <description>&lt;h1 id=&quot;背景&quot;&gt;背景&lt;/h1&gt;

&lt;p&gt;一直以来，我一直是个爱好较多的“杂食”动物，歌曲类型也不例外，古典、电音什么的都想听。不过其中，最投入的当属偶像歌曲。&lt;/p&gt;

&lt;p&gt;本文与其说是游记，不如说是演唱会购票攻略及见闻。&lt;/p&gt;

&lt;h2 id=&quot;起因&quot;&gt;起因&lt;/h2&gt;

&lt;p&gt;年初，和椰椰子讨论了2019新年的一些计划，并没有什么大的计划，但我们决定每个人列一些小计划。正值看完2018年末（12月1日）的乃木坂46演唱会，现场的气氛让我难忘，心想我一定要去日本看一次乃木坂46；况且，有了三年多次签证，不偶尔来一次周末旅行好像体现不出其意义。因此，这成为了我的小计划中最大的一个。&lt;/p&gt;

&lt;p&gt;计划直到5月才开始真正推进，因为官方也是这时候才开始有比较明确的消息。首先，根据官方公布的演唱会日程，名古屋和大阪场都是周三和周四晚上，这样要请很多假，而福冈和东京都是在周末。经过一番调研，据说地方场往往不会非常爆满票比较好买，于是选定参加7月20日周六晚上的福冈场。&lt;/p&gt;

&lt;h2 id=&quot;购票&quot;&gt;购票&lt;/h2&gt;

&lt;p&gt;说起买票，对于国内来说，无非官网/大麦/永乐票务进行一波秒杀，秒不到去淘宝或者咸鱼黄牛。&lt;/p&gt;

&lt;p&gt;日本演唱会的买票可以说非常麻烦。这里我查阅和参考了很多个攻略，最后找到两篇参考意义较大的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://tokyo-mo.com/2018/03/%E6%95%99%E5%AD%B8-%E4%B9%83%E6%9C%A8%E5%9D%8246-%E6%BC%94%E5%94%B1%E6%9C%83%E6%8A%BD%E7%A5%A8-%E5%80%8B%E5%88%A5%E6%8F%A1%E6%89%8B%E6%9C%83%E6%8A%BD%E9%81%B8-%E5%85%A8%E5%9C%8B%E6%8F%A1%E6%89%8B/&quot;&gt;教學-乃木坂46-演唱會抽票-個別握手會抽選-全國握手&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yuyan-pace.com/nogizaka46-live-summer-nationwide-tour-2019-information/&quot;&gt;『真夏の全国ツアー2019』の日程は？先行・一般販売などチケット情報まとめ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;前者是台湾人写的攻略，简明的说清楚了适合外国人的买票攻略。后者是一个日本人写的“情报”汇总页面，总结了每一场相关的票务信息链接。得益于此，我才能把各类分散的内容梳理的比较清楚。&lt;/p&gt;

&lt;h3 id=&quot;渠道&quot;&gt;渠道&lt;/h3&gt;

&lt;p&gt;首先就是购票的渠道非常多还要分批次。最先是乃木坂46会员优先抽选，然后是购票网站会员优先抽选，最后才是普通买票，具体的分配数目不是很清楚。&lt;/p&gt;

&lt;p&gt;具体的渠道分为：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;乃木坂46手机会员先行抽选第一次&lt;/li&gt;
  &lt;li&gt;乃木坂46手机会员先行抽选第二次&lt;/li&gt;
  &lt;li&gt;票务网站会员先行抽选&lt;/li&gt;
  &lt;li&gt;票务网站普通贩售&lt;/li&gt;
  &lt;li&gt;官方二手&lt;/li&gt;
  &lt;li&gt;野生二手&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里的“票务网站”有 Rakuten、ePlus.jp、t.pia.jp、l-tike.com 等，除了国内相对熟悉的 Rakuten 是电商网站外，另外几个好像都是跟便利店相关联的。&lt;/p&gt;

&lt;h3 id=&quot;流程&quot;&gt;流程&lt;/h3&gt;

&lt;p&gt;购买流程相对简单：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;抽选或者购买&lt;/li&gt;
  &lt;li&gt;便利店支付，或者在线支付
    &lt;ul&gt;
      &lt;li&gt;唯一比较省心的事，票价统一9000日元（还有税等费用，总共接近10000日元），位置全凭人品&lt;/li&gt;
      &lt;li&gt;支付的话可以选择便利店支付，或者在线支付。便利店支付不在日本就不要考虑了，要抽选成功后几天内去便利店付好。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;邮寄，或者便利店自取
    &lt;ul&gt;
      &lt;li&gt;后者很适合外国人&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;阻碍&quot;&gt;阻碍&lt;/h3&gt;

&lt;p&gt;这么说完，看似也没有很复杂，对吧？这下开始说下坑点。&lt;/p&gt;

&lt;p&gt;简单的说，就是上面说的一堆渠道，对于外国人来说大多都不可行。乃木坂46会员注册要日本手机号，几个便利店大多也是这样，除此之外在线支付可能还需要日本信用卡之类，普通的 VISA/MasterCard 甚至 JCB 统统不行。而日本手机号，不是日本人几乎难以搞定或者成本很高。&lt;/p&gt;

&lt;p&gt;再就是，乃木坂46演唱会入场会全员检查身份证件，一般来说是住民票也就是身份证，无论一手还是二手票都必须买票人和证件匹配。买二手票，如果他多买了一张带你进去就好，或者把身份证借你入场都是可以的。否则，就不能进，除非自己”办假证“（毕竟只要名字一样就行）。办假证是因为检查十分简单，就看看名字是否和你出示的证件相同，并不是国内的身份证信息读取机。但我觉得这不太靠谱。&lt;/p&gt;

&lt;p&gt;本想求助在日本的同学 Rena，不料她在澳大利亚 WHV 已经停止了日本手机号。&lt;/p&gt;

&lt;p&gt;这样一来，剩下可以自行操作的唯一可行渠道是 Rakuten 普通买票。虽然也需要日本手机号和地址，但仅限于填写，没有实际作用。&lt;/p&gt;

&lt;h3 id=&quot;代购&quot;&gt;代购&lt;/h3&gt;

&lt;p&gt;前面说的证件，除了住民票外很多别的证件也是承认的，对于外国人来说，是可以用护照之类的。因此，现在的问题就剩下买票时能填写名字就行。t.pia.jp 是买票人信息和账号绑定的因此没戏，Rakuten/ePlus 等渠道都可以填写或者更换名字，于是可以用英文全角名购买，这样用护照进行验证是完全没问题的。&lt;/p&gt;

&lt;p&gt;所以，最终我认为可行的方案是淘宝代抽 ePlus 会员先行，如果不行就走 Rakuten 普通购买。据我观察，至少到了名古屋场前一周，票都是还能买的，如果淡定一点还是可以选择 Rakuten 的。不过由于要预定行程，我很不淡定，所以决定尽早买选择了淘宝代抽 ePlus。&lt;/p&gt;

&lt;p&gt;淘宝代抽票抽一次40元，但支付汇率比较坑，算起来基本上得比原价高上个100多。果然代抽本质上还是票贩子啊！&lt;/p&gt;

&lt;h2 id=&quot;前往福冈&quot;&gt;前往福冈&lt;/h2&gt;

&lt;p&gt;这是我第二次来到福冈，第一次是2017年元旦坐邮轮，只在运河城吃了拉面逛了街，但整体来说印象挺好的。尤其喜欢福冈街边和公园栽种的各种小花，清新且美观。此时必须实名批评一下，北京路边的花总是很蔫。&lt;/p&gt;

&lt;p&gt;这次买的机票是国航 CA953/CA954 往返，经停大连到福冈。自从大兴机场即将开业，随之南航和东航都宣布入驻，我就决定 All-in 国航，毕竟住在靠近三元桥的区域没理由不去首都机场。&lt;/p&gt;

&lt;p&gt;回到正题，CA953 是个比较奇特的飞机，在T3国内出发用护照办理国内航班手续，到大连出海关。&lt;/p&gt;

&lt;p&gt;这次最明智的就是带上了旅行枕，大早上5点起床，在机场候机室和飞机上各睡了半个小时，起来缓了一会就到了大连。大连机场旁边居然都是正常低层住宅楼。&lt;/p&gt;

&lt;p&gt;在大连的出海关由于是在国际航站楼内的特殊通道非常快捷，一分钟搞定。在大连机场等待了几十分钟，上了飞机又睡了一小时，补充了两小时后基本达到了日常的睡眠量。&lt;/p&gt;

&lt;p&gt;下了飞机，由于看过攻略，福冈机场很大国际航站楼到地铁的时间都要10分钟穿梭巴士。我选直接坐巴士从国际航站楼去博多，也就10多分钟。&lt;/p&gt;

&lt;p&gt;由于 Airbnb 的 check-in 未到时间，于是我直接来到博多站附近的全家取票和购物。&lt;/p&gt;

&lt;h2 id=&quot;取票&quot;&gt;取票&lt;/h2&gt;

&lt;p&gt;在 ePlus 购票是在全家 FamilyMart 取票，全家这里简称为 famima，日本的迷之有趣缩写。&lt;/p&gt;

&lt;p&gt;在机器上一波操作，要先有两个步骤进入到输入“払込票番号”提取码的界面，输入正确后会打印一张很长的单子，拿好去结账处让店员收钱给票。同时，我还买了一把怨念已久的透明伞和在日本日常喝的可尔必思。买的东西和取票费是分开算，取票费单收108日元。店员会去柜台一个机器打印好，票会装在一个信封给你。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-fukuoka-ticket.png&quot; alt=&quot;乃木坂46门票&quot; /&gt;&lt;/p&gt;

&lt;p&gt;票位于是三垒侧，也就是演出台平行的左侧，应该比较坑。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;未完待续，敬请期待：&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/page/nogizaka-46-fukuoka-2.html&quot;&gt;福冈之旅——乃木坂演唱会（下）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 22 Jul 2019 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/nogizaka-46-fukuoka-1.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/nogizaka-46-fukuoka-1.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>大阪之旅</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;2019年清明期间大阪之旅游记，记录一下心情。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;今年年初如愿以偿获得了日本三年多次旅行签证，心想着可以周末就可以去日本玩。但现实并没有这么好，不得不赶在清明节买着超贵的樱花季机票出发，第二次前往关西机场。这次主要在大阪活动，中间会有一天去京都拍摄婚纱照。&lt;/p&gt;

&lt;h3 id=&quot;大阪再次相遇&quot;&gt;大阪，再次相遇&lt;/h3&gt;

&lt;p&gt;大阪是一个有趣的城市，比起东京，他更加杂乱没那么强的高级感和精致感，至少難波附近时这样的。在这里不会像在东京一样让人那么羡慕和惭愧，感觉自己住的城市是什么破玩意。而是觉得我也想在这里生活——在这里很容易感受到足够的生活气氛。&lt;/p&gt;

&lt;p&gt;况且，大阪还盛产偶像，比如 NMB48 的 Top 成员山本彩，刚刚毕业的乃木坂46 Ace 成员西野七濑等。&lt;/p&gt;

&lt;p&gt;第一次来住在浪速，这次住在難波，几乎是挨着的，所以比较熟悉。这次的酒店据称是情趣酒店改造的，房间面积大的惊人，可以轻松铺开行李箱。同 NMB48 剧场只隔了一条街。&lt;/p&gt;

&lt;p&gt;大阪難波这边的街道非常密集，楼也不是太高，有种老城区的感觉。到了晚上，街上飘满了烤肉的味道，让人不可避免的得选一家吃起来。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/osaka-street1.jpg&quot; alt=&quot;大阪街道&quot; style=&quot;width: 360px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;餐馆数量十分可观，竞争似乎也很激烈，毕竟在一家烧肉店门口看到“女装大佬”店员拉客，为了生存也太拼了。&lt;/p&gt;

&lt;p&gt;药妆店为了引起注意，还搞起了自己的女团，让女性工作人员跳舞。舞蹈动作比较简单，旁边还挂上了妹子的 Twitter。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/osaka-dancing-girl.gif&quot; alt=&quot;大阪药妆店跳舞&quot; style=&quot;width: 360px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;日本特色井盖文化：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/osaka-manhole-cover.jpg&quot; alt=&quot;大阪井盖&quot; style=&quot;width: 360px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;大阪也不能没有二次元，虽然这里不是秋叶原，但靠近浪速那片也十分多动漫、游戏和玩具手办店。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/osaka-street2.jpg&quot; alt=&quot;大阪街道二次元&quot; style=&quot;width: 360px;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;神户牛&quot;&gt;神户牛&lt;/h3&gt;

&lt;p&gt;此次到日本，我有一个心愿就是吃到铁板和牛。主要原因是关注了 &lt;a href=&quot;https://www.youtube.com/channel/UCu9g5OmzcCpcJnmSYyHnIVw&quot;&gt;AdenFilms&lt;/a&gt; — 一个专注拍摄美食制作的 YouTube 频道，它比较喜欢拍的题材就是和牛铁板烧。看多了自然也想体验一下铁板烧和牛以及龙虾。&lt;/p&gt;

&lt;p&gt;去到一家店点评上还行的店，这家店里到处都是各种获奖称号。之后才发现他们专门为游客优化了流程，其中一个环节就是上了牛肉后摆上获奖牌子让食客们合影。&lt;/p&gt;

&lt;p&gt;一套2人牛肉的套餐花了大约 RMB¥1903。的确入口即化，但真的是腻，吃了之后稍微有些不适。不得不终止活动，回到房间午休了之后才“缓”过来。&lt;/p&gt;

&lt;p&gt;总之，这未免让人觉得有些被坑。以后有机会要再尝试一次铁板和牛，确定是自己不适合还是的确被坑了。&lt;/p&gt;

&lt;h3 id=&quot;京都风情&quot;&gt;京都风情&lt;/h3&gt;

&lt;p&gt;中间一天去京都。&lt;/p&gt;

&lt;p&gt;按照我强行的联想，京都比较像欧美城市，繁华的市区没多大，其它地方都是“郊区”，有很多一户建和 Town House。不像日本其它的大都市一样，塞满了密密麻麻的楼。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/kyoto-street.jpg&quot; alt=&quot;Kyoto Street&quot; style=&quot;width: 360px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;由于也就呆了半天且大部分时间都在拍摄婚纱照，因此没有玩什么，这里放张图就先略过。&lt;/p&gt;

&lt;h3 id=&quot;桜之宮&quot;&gt;桜之宮&lt;/h3&gt;

&lt;p&gt;最后一天回到大阪。&lt;/p&gt;

&lt;p&gt;旅游时，适合游客打卡的地点一定要去，因为有游客出现可以说明这是个值得去地方。但一些本地人喜欢去的地方才是我更喜欢的，人或许会少很多，并且能体验原汁原味的感觉。比如，参加花见（其实我是围观日本人花见）。&lt;/p&gt;

&lt;p&gt;去 Google 用英文搜了欣赏樱花的地点，我在推荐的结果中选择了”Kema Sakuranomiya Park”，日文为毛馬桜之宮公園。这个公园离我住的難波地区并不远，还位于河边，想必景色不错。&lt;/p&gt;

&lt;p&gt;到了现场才发现，这个地方没有找错，这是个花见场所。记得第一次去东京时，去旅游打卡景点上野公园看樱花，发现日本人纷纷带着野餐在草地上席地而坐，回去问了下才知道这就是花见。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/osaka-hanami.jpg&quot; alt=&quot;Osaka Hanami&quot; /&gt;&lt;/p&gt;

&lt;p&gt;活动的路线从源八橋过河开始，到大川东岸沿着河边徒步行走。河边竟然同布里斯班 South Bank 一样，有一个沙滩，有很多人在玩沙滩排球。&lt;/p&gt;

&lt;p&gt;由于今年春季寒流较强，樱花都到了4月还没满开，河边景色的樱花也是如此，比较稀疏，只好多拍拍特写。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/osaka-sakura1.jpg&quot; alt=&quot;Osaka Sakura&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/osaka-sakuranomiya-bridge.jpg&quot; alt=&quot;Osaka Sakuranomiya Bridge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一路走到天満橋駅，搭乘地铁回家。&lt;/p&gt;

&lt;h3 id=&quot;结束&quot;&gt;结束&lt;/h3&gt;

&lt;p&gt;大阪之旅再次匆匆忙忙结束了。对于旅行，我从来都是选择度假的节奏，行程最好只有一个目的地，早上睡得比较充足后出去闲逛、购物。景点随缘，注重饮食和体验当地的生活。&lt;/p&gt;

&lt;p&gt;因此，即使是第二次去，即使是就在市区居住，也不会觉得腻。我觉得我在生活，没有工作压力的状态下生活。以后还会再来。&lt;/p&gt;

&lt;p&gt;并且最近看了司马辽太郎一系列日本战国小说，了解了不少关于京都、大阪、岐阜、姬路等古城的故事，有机会也要慢慢探索。&lt;/p&gt;

&lt;p&gt;不过，最近的下次旅行应该是福冈周末游，因为我抽选到了乃木坂46真夏の全国演唱会的票。年初定的一个小小心愿，没想到真的要达成了。完毕后，我也会写一篇游记。&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Jul 2019 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/osaka-trip.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/osaka-trip.html</guid>
        
        
      </item>
      
    
      
    
      
      <item>
        <title>How to be a 100x Programmer?</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;A 10x programmer is, in the mythology of programming, a programmer that can do ten times the work of another normal programmer, where for normal programmer we can imagine one good at doing its work, but without the magical abilities of the 10x programmer.&lt;/p&gt;

  &lt;p&gt;– &lt;a href=&quot;http://antirez.com/news/112&quot;&gt;The mythical 10x programmer&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Every programmer is a unique person, and he/she may improve his/her productivity in various ways.&lt;/p&gt;

&lt;p&gt;As an old Chinese proverb said:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;工欲善其事，必先利其器 (To do a good job, an artisan needs the best tools)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At least we should use some powerful tools to boost our productivity. Even if a tool may only increase 10x at most, it multiplies.&lt;/p&gt;

&lt;p&gt;Let me show a example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tool No1 (10x)&lt;/li&gt;
  &lt;li&gt;Tool No.2 (3x)&lt;/li&gt;
  &lt;li&gt;Tool No.3 (2x)&lt;/li&gt;
  &lt;li&gt;Tool No.4 (1.6x)&lt;/li&gt;
  &lt;li&gt;Tool No.5 (1.1x)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Total: 10x * 2x * 1.5x * 3x * 1.1x = 100x&lt;/p&gt;

&lt;h1 id=&quot;solutions&quot;&gt;Solutions&lt;/h1&gt;

&lt;h3 id=&quot;zsh--oh-my-zsh&quot;&gt;zsh &amp;amp; oh-my-zsh&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zsh.org/&quot;&gt;zsh&lt;/a&gt; provides more power than bash and &lt;a href=&quot;https://ohmyz.sh/&quot;&gt;oh-my-zsh&lt;/a&gt; make it be powerful out-of-box, with great tab completion, clever aliases, and themes &amp;amp; plugins system.&lt;/p&gt;

&lt;p&gt;Here is what happened after I typed &lt;code class=&quot;highlighter-rouge&quot;&gt;git &amp;lt;tab&amp;gt;&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/zsh-git-completion.png&quot; alt=&quot;zsh-git-completion&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Install zsh:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;zsh zsh-completions
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;chsh &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /bin/zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Install oh-my-zsh:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; -&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And Oh My Zsh indicates its BOOST officially.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Oh My Zsh will not make you a 10x developer…but you might feel like one.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now that it claims to make you “feel like” a 10x developer, I think it must be true.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BOOST&lt;/strong&gt;: 10x, &lt;strong&gt;PROGRESS: 10%&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;tmux&quot;&gt;tmux&lt;/h3&gt;

&lt;p&gt;tmux is a terminal multiplexer. It is not only multiplexes terminals, but also multiplexes our productivity.&lt;/p&gt;

&lt;p&gt;With tmux, we may open and keep multiple sessions in a terminal, open windows (actually tabs) inside a session, and even split windows to panes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/tmux-example.png&quot; alt=&quot;tmux-example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And &lt;a href=&quot;https://github.com/gpakosz/.tmux&quot;&gt;gpakosz/.tmux&lt;/a&gt; is just like &lt;code class=&quot;highlighter-rouge&quot;&gt;oh-my-tmux&lt;/code&gt;. If we do not want to setup tmux configuration by ourselves, checkout this one.&lt;/p&gt;

&lt;p&gt;Install tmux:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;tmux
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Install gpakosz/.tmux:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/gpakosz/.tmux.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ln&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; .tmux/.tmux.conf
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; .tmux/.tmux.conf.local &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;BOOST&lt;/strong&gt;: 2x, &lt;strong&gt;PROGRESS: 20%&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;fzf&quot;&gt;fzf&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/junegunn/fzf&quot;&gt;fzf&lt;/a&gt; is a command-line fuzzy finder.&lt;/p&gt;

&lt;p&gt;It’s a great replacement to the default &amp;lt;CTRL+R&amp;gt; but have more features, which is fuzzy and can be used with any lists.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/fzf-fuzzy-example.png&quot; alt=&quot;fzf-fuzzy-example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I think it a must-have one.&lt;/p&gt;

&lt;p&gt;Install fzf:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;fzf
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;brew &lt;span class=&quot;nt&quot;&gt;--prefix&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/opt/fzf/install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Enable fzf in &lt;code class=&quot;highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ~/.fzf.zsh &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.fzf.zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;BOOST&lt;/strong&gt;: 1.5x, &lt;strong&gt;PROGRESS: 30%&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;neovim&quot;&gt;Neovim&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://neovim.io/&quot;&gt;Neovim&lt;/a&gt; a Vim-fork focused on extensibility and usability. If you are already a hardcore vim user, you may keep your choice. It makes no difference between the usabilities but provides modern GUIs, asynchronous job control, and API based on RPC. As a result, it is now really easy to develop a new plugin with popular programming languages compared to old-school VimScript.&lt;/p&gt;

&lt;p&gt;Install Neovim:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;neovim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And we may “replace” vim with nvim in case you like:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;vim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nvim&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;HINT: Neovim do not use &lt;code class=&quot;highlighter-rouge&quot;&gt;.vimrc&lt;/code&gt;, it support XDG base directories by default.&lt;/p&gt;

&lt;p&gt;We now should setup in &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.config/nvim/init.vim&lt;/code&gt;. Just copy your &lt;code class=&quot;highlighter-rouge&quot;&gt;.vimrc&lt;/code&gt; here, it mostly works.&lt;/p&gt;

&lt;p&gt;And I recommend &lt;a href=&quot;https://github.com/Shougo/dein.vim&quot;&gt;Shougo/dein.vim&lt;/a&gt; as a plugin manager, which is “dark powered”. Vim/Neovim plugins is another big topic. For myself, I use deoplete, NERDTree, and vim-airline.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BOOST&lt;/strong&gt;: 3x, &lt;strong&gt;PROGRESS: 90%&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;themes--colorschemes&quot;&gt;Themes &amp;amp; Colorschemes&lt;/h3&gt;

&lt;p&gt;Colors are important to programmer, because we actually stare at the screen, terminal, and editor for the most time, especially the coding period.&lt;/p&gt;

&lt;p&gt;I recommend &lt;a href=&quot;https://www.nordtheme.com/&quot;&gt;Nord&lt;/a&gt; here. It is “an arctic, north-bluish color palette” and provides various ports officially. Thus, we can use Nord as theme or colorscheme in whatever libraries, tools, editors, and et cetera.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nord-ports.png&quot; alt=&quot;nord ports&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It could calm developer down, improve eyesight, and even prevent bugs. IMO, it increases productivity by about 10%, not that big but take effects on multiple places.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BOOST:&lt;/strong&gt; 1.1x, &lt;strong&gt;PROGRESS: 100%&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;The productivity of a developer can largely improves with an approachable toolset indeed. Get the tools ready is the first step. There are still 99% other parts to be concerned, especially our efforts.&lt;/p&gt;

&lt;p&gt;Thanks for reading this article.&lt;/p&gt;
</description>
        <pubDate>Sun, 21 Apr 2019 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/how-to-be-a-100x-programmer.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/how-to-be-a-100x-programmer.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Homebrew 深度应用</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;macOS 上各种软件的管理，只要有 Homebrew 就足够了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;简介&quot;&gt;简介&lt;/h1&gt;

&lt;p&gt;Homebrew 是一款享有盛名的包管理工具，是 macOS 上包管理的事实(de facto)标准 。Homebrew 的意思是家酿啤酒。&lt;/p&gt;

&lt;p&gt;它的官方 slogan 是 The missing package manager for macOS (or Linux)。Linuxbrew 已经在 Homebrew 1.9正式合入，成为 Homebrew 的“一等公民”&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;Homebrew 最早的创建者是 Max Howell，目前的主要维护者是 Mike McQuaid。同 Jekyll 等开源项目一样，Homebrew 的核心维护者也是 GitHub 的员工。GitHub 对于员工亲自参加开源项目方面，做得一直不错。&lt;/p&gt;

&lt;p&gt;顺带插播一条奇闻逸事：Homebrew 的创始人 Max Howell 活跃在开源社区，目前主要从事 Swift 相关的库开发。他在2015年初曾去 Google 面试，因为“白板”写算法题「翻转二叉树」失败，愤而发 tweet 讽刺：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Google: 90% of our engineers use the software you wrote (Homebrew), but you can’t invert a binary tree on a whiteboard so fuck off. &lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;why-homebrew&quot;&gt;Why Homebrew&lt;/h3&gt;

&lt;p&gt;对于使用 Unix/Linux 类系统的用户往往都遇到过这些需求：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;开源程序是源码分发，需要自己编译，但 &lt;code class=&quot;highlighter-rouge&quot;&gt;./configure&lt;/code&gt; 参数超多，还要解决各种库的依赖&lt;/li&gt;
  &lt;li&gt;想把软件安装到用户目录，而不是系统目录（这样不需要 root 权限）&lt;/li&gt;
  &lt;li&gt;自己编译安装了软件，想删除时却不知道在哪里删除和删除哪些文件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;各 Linux 发行版为了提升安装软件的体验，大多都提供了官方的包管理器，如 Ubuntu 的 aptitude (apt-get)。而苹果官方没有为 macOS 提供包管理器，市面上最好的解决方案就是 Homebrew。&lt;/p&gt;

&lt;p&gt;目前 Homebrew 的中文内容大多以简单入门级教程为主，对于它的各类能力提之甚少，我希望在这里更全面的分享 Homebrew。&lt;/p&gt;

&lt;h1 id=&quot;快速入门&quot;&gt;快速入门&lt;/h1&gt;

&lt;p&gt;网上基础的教程很多，我这里只简略的介绍下。对于基础功能类的深度用法，推荐这篇 &lt;a href=&quot;https://swiftcafe.io/post/home-brew&quot;&gt;macOS 包管理工具 Homebrew 不完全指南&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;安装&quot;&gt;安装&lt;/h3&gt;

&lt;p&gt;开始安装前需要安装 macOS 命令行工具：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;xcode-select —install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;或者，在&lt;a href=&quot;https://developer.apple.com/download/more/&quot;&gt;https://developer.apple.com/download/more/&lt;/a&gt;下载安装。&lt;/p&gt;

&lt;p&gt;然后执行：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;/usr/bin/ruby &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;基础功能&quot;&gt;基础功能&lt;/h3&gt;

&lt;h5 id=&quot;安装-1&quot;&gt;安装&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;wget
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;完成安装后可以列出已安装内容：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew list
wget
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;升级&quot;&gt;升级&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 显示可以升级的包&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew outdated
cmake &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3.13.4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &amp;lt; 3.14.0
yarn &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.13.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &amp;lt; 1.15.2
youtube-dl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2019.03.09&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &amp;lt; 2019.03.18

&lt;span class=&quot;c&quot;&gt;# 进行升级&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew upgrade cmake
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;删除&quot;&gt;删除&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew uninstall wget
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;安装桌面程序&quot;&gt;安装桌面程序&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew cask &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;google-chrome
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;对于 Homebrew-cask 管理桌面程序，这里先不细说，后面会专门讲。&lt;/p&gt;

&lt;p&gt;Homebrew 会把软件安装到 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/Cellar&lt;/code&gt;，并且通过软链链接到 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/bin&lt;/code&gt;。我们可以通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;brew unlink&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;brew link&lt;/code&gt; 删除或创建链接。&lt;/p&gt;

&lt;h3 id=&quot;名词解释&quot;&gt;名词解释&lt;/h3&gt;

&lt;p&gt;Homebrew 把软件安装过程中的各种名词都进行了拟物化命名&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;，这些命名挺有意思，但对于大多数英语水平一般的人来说，有不少词汇有些生僻。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;英文&lt;/th&gt;
      &lt;th&gt;直译&lt;/th&gt;
      &lt;th&gt;实际含义&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;formula(e)&lt;/td&gt;
      &lt;td&gt;公式&lt;/td&gt;
      &lt;td&gt;安装包的描述文件，formulae 为复数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cellar&lt;/td&gt;
      &lt;td&gt;地窖&lt;/td&gt;
      &lt;td&gt;安装好后所在的目录&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;keg&lt;/td&gt;
      &lt;td&gt;小桶&lt;/td&gt;
      &lt;td&gt;具体某个包所在的目录，keg 是 cellar 的子目录&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bottle&lt;/td&gt;
      &lt;td&gt;瓶子&lt;/td&gt;
      &lt;td&gt;预先编译好的包，不需要现场下载编译源码，速度会快很多；&lt;br /&gt;官方库中的包大多都是通过 bottle 方式安装&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tap&lt;/td&gt;
      &lt;td&gt;(插入)水龙头&lt;/td&gt;
      &lt;td&gt;下载启用某个源&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cask&lt;/td&gt;
      &lt;td&gt;木桶&lt;/td&gt;
      &lt;td&gt;安装 macOS native 应用的扩展&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bundle&lt;/td&gt;
      &lt;td&gt;捆&lt;/td&gt;
      &lt;td&gt;描述 Homebrew 依赖的扩展&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;进阶用法&quot;&gt;进阶用法&lt;/h1&gt;

&lt;p&gt;对于 Homebrew，我们很多时候往往都是上来就&lt;code class=&quot;highlighter-rouge&quot;&gt;brew search&lt;/code&gt;或是&lt;code class=&quot;highlighter-rouge&quot;&gt;brew install&lt;/code&gt;。缺什么安什么，没有充分的应用它的强大能力。&lt;/p&gt;

&lt;p&gt;首先，Homebrew 虽为解决控制台程序而生，但它完全有能力（Cask）安装任何桌面软件。它还支持丰富的分类目软件库或第三方库。&lt;/p&gt;

&lt;p&gt;除此之外，它还有一个打包安装或备份工具，可以把已安装的软件输出成 Brewfile。迁移到新电脑时，只要根据 Brewfile 运行 Homebrew bundle，就可以一键安装全部控制台、桌面和来自 Mac App Store 的程序（Mac App Store 上的软件通过 &lt;a href=&quot;https://github.com/mas-cli/mas&quot;&gt;mas&lt;/a&gt; 支持）。&lt;/p&gt;

&lt;h3 id=&quot;tap&quot;&gt;Tap&lt;/h3&gt;

&lt;p&gt;Tap 在 Homebrew 中我理解是个动词，指的是启用某个源。实际看了下发现，homebrew-services 和 homebrew-bundle 也已 tap 形式存在，因此可以认为 tap 实际指的应该是扩展（extension）。&lt;/p&gt;

&lt;p&gt;Homebrew 默认情况下会自带：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;homebrew/core&lt;/li&gt;
  &lt;li&gt;homebrew/cask&lt;/li&gt;
  &lt;li&gt;homebrew/services&lt;/li&gt;
  &lt;li&gt;homebrew/bundle&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;后两者并没有任何公式配方，而只是扩展程序。&lt;/p&gt;

&lt;p&gt;除此之外的源，需要通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;brew tap&lt;/code&gt;来启用。如：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew tap heroku/brew
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;heroku
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;services&quot;&gt;Services&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Homebrew/homebrew-services&quot;&gt;Homebrew-services&lt;/a&gt; 是 Homebrew 的后台服务程序扩展，它基于 macOS 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;launchctl&lt;/code&gt;。后台服务类程序的安装依旧使用 Homebrew，在管理时可以使用 Homebrew-services 进行启动、重启和停止等操作。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mysql
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew services start mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;cask&quot;&gt;Cask&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;Homebrew-cask&lt;/a&gt; 是 Homebrew 的 macOS Native 应用扩展，通过 cask 可以安装各类应用程序。&lt;/p&gt;

&lt;p&gt;搜索 Cask 的方法和搜索普通包一样，但安装时需要加上 cask 指令：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew search google-chrome
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew cask &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;google-chrome
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;cask-versions&quot;&gt;cask-versions&lt;/h5&gt;

&lt;p&gt;Homebrew Cask 和 Homebrew 一样，默认库只维护最新版本，但有的时候我们还是需要用旧版的（比如：我只有 Dash 3 的 License，所以需要用 Dash 3 而不是最新的 Dash 4），那就可能需要使用 cask-versions。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew tap homebrew/cask-versions
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew cask &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;dash3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;cask-fonts&quot;&gt;cask-fonts&lt;/h5&gt;

&lt;p&gt;Homebrew 官方的字体源，比如 Mozilla 的开源字体 Fira Code：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew tap homebrew/cask-fonts
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew cask &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;font-fira-code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;bundle&quot;&gt;Bundle&lt;/h3&gt;

&lt;p&gt;Homebrew 不仅仅是一个包管理器，还具有软件依赖管理能力。通过 &lt;a href=&quot;https://github.com/Homebrew/homebrew-bundle&quot;&gt;Homebrew Bundle&lt;/a&gt; 可以帮你解决所有软件依赖，包括官方和第三方的 formula 以及 cask，甚至还包括 Mac App Store（简称 mas）中的应用。&lt;/p&gt;

&lt;p&gt;Homebrew 默认就安装了 Homebrew Bundle。&lt;/p&gt;

&lt;p&gt;我们只需要一个&lt;code class=&quot;highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt;，就可以配置好所有需要的应用。熟悉 Ruby 的人应该不太需要解释，毕竟 Ruby 自己就有 Bundler 这套东西，Brewfile 和 Gemfile 属于对应关系。&lt;/p&gt;

&lt;p&gt;如果你的安装列表已经足够“干净”，那么可以执行&lt;code class=&quot;highlighter-rouge&quot;&gt;brew bundle dump&lt;/code&gt;来生成现有依赖，输出到&lt;code class=&quot;highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew bundle dump
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;Brewfile

brew &lt;span class=&quot;s2&quot;&gt;&quot;git&quot;&lt;/span&gt;
brew &lt;span class=&quot;s2&quot;&gt;&quot;wget&quot;&lt;/span&gt;
brew &lt;span class=&quot;s2&quot;&gt;&quot;mas&quot;&lt;/span&gt;
brew &lt;span class=&quot;s2&quot;&gt;&quot;p7zip&quot;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果想自己写也比较容易，&lt;code class=&quot;highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt;是一种简单的 Ruby DSL，写起来比大部分配置文件都简单。只需要掌握一些常用到的命令，主要有&lt;code class=&quot;highlighter-rouge&quot;&gt;brew&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;tap&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;cask&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;mas&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;这四条命令分别对应：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;brew install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;brew tap&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;brew cask install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mas install&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;注：mas 也就是&lt;a href=&quot;https://crispgm.com/page/awesome-terminal-tools.html#mas&quot;&gt;之前文章中&lt;/a&gt;介绍过的 Mac App Store 命令行工具&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;命令行类应用：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;git&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;wget&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;vim&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;非命令行类：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;google-chrome&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;alfred&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;visual-studio-code&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;非官方 Formula 应用：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;tap&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;homebrew/cask-versions&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dash3&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tap&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;homebrew/cask-fonts&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;font-source-code-pro&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Mac App Store 上的应用：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mas&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;WeChat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;836500024&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;因此，维护好 &lt;a href=&quot;https://github.com/crispgm/dotfiles/blob/master/Brewfile&quot;&gt;Brewfile&lt;/a&gt; 就可以完美解决应用自动化安装，只需要运行：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew bundle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;扩展用法&quot;&gt;扩展用法&lt;/h1&gt;

&lt;h3 id=&quot;提交-formula&quot;&gt;提交 Formula&lt;/h3&gt;

&lt;p&gt;创建并提交一个 Formula 比较容易，官方教程非常详细&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;。这里，我就不做单独介绍了。&lt;/p&gt;

&lt;h3 id=&quot;自建-tap&quot;&gt;自建 Tap&lt;/h3&gt;

&lt;p&gt;Homebrew 除了各种官方维护的源外，还支持自建软件库。默认使用 GitHub，需要以“homebrew-xxx”格式命名 Repo。Formula 或 Cask 文件需要存放在 Formula 或 Casks 二级目录中。&lt;/p&gt;

&lt;p&gt;比如，Heroku 的自建库在 GitHub 上是&lt;code class=&quot;highlighter-rouge&quot;&gt;heroku/homebrew-brew&lt;/code&gt;。通过&lt;code class=&quot;highlighter-rouge&quot;&gt;brew tap heroku/brew&lt;/code&gt;就可以获取库里维护的包了。&lt;/p&gt;

&lt;h2 id=&quot;私有-tap&quot;&gt;私有 Tap&lt;/h2&gt;

&lt;p&gt;上面说到，Tap 默认维护在 GitHub，那么当我们想安装一些需要&lt;strong&gt;保密&lt;/strong&gt;的软件时该怎么办呢？&lt;/p&gt;

&lt;p&gt;答案是 Tap 支持指定 Git，因此也可以使用内网域名内的 Git：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew tap yourcompany/brew git@git.yourcompany.com: yourcompany/homebrew-brew.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;inhouse-app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;tips&quot;&gt;Tips&lt;/h1&gt;

&lt;h5 id=&quot;禁用自动升级&quot;&gt;禁用自动升级&lt;/h5&gt;

&lt;p&gt;Homebrew 自动升级触发概率很高，由于网络等问题，检查更新会很久有时会比较烦。可以通过环境变量禁用自动升级：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;HOMEBREW_NO_AUTO_UPDATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 brew info mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;直接安装-formula&quot;&gt;直接安装 Formula&lt;/h5&gt;

&lt;p&gt;Homebrew 的安装指令并非只支持名字，也可以用文件安装包括网络文件和本地文件。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 本地&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;blabla.rb
&lt;span class=&quot;c&quot;&gt;# 远程&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;https://blablablabla.com/blabla.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;安装旧版软件&quot;&gt;安装旧版软件&lt;/h5&gt;

&lt;p&gt;Homebrew 默认情况下只支持最新版软件安装，有些重要的版本会单独存在。但想安装一些小版本就得自己 DIY 了。&lt;/p&gt;

&lt;p&gt;我所知有两种方法：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;在 GitHub 找到 Formula 所在Repo 中（默认为 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/&quot;&gt;homebrew-core&lt;/a&gt;）的文件，把文件远程地址复制下来，用 &lt;code class=&quot;highlighter-rouge&quot;&gt;brew install&lt;/code&gt; 安装。&lt;/li&gt;
  &lt;li&gt;进入 homebrew-core 在 macOS 本地的路径，默认为 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout&lt;/code&gt;到所在 commit，再用 &lt;code class=&quot;highlighter-rouge&quot;&gt;brew pin&lt;/code&gt; 锁定这个文件的更新，然后进行安装。&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://twitter.com/mxcl/status/608682016205344768&quot;&gt;Max Howell on Twitter: “Google: 90% of our engineers use the software you wrote (Homebrew), but you can’t invert a binary tree on a whiteboard so fuck off.”&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/Linuxbrew/brew/issues/612&quot;&gt;https://github.com/Linuxbrew/brew/issues/612&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://docs.brew.sh/Formula-Cookbook#homebrew-terminology&quot;&gt;Formula Cookbook — Homebrew Documentation&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://tmr08c.github.io/devops/2016/10/24/homebrew-glossary.html&quot;&gt;Glossary of Homebrew Terms&lt;/a&gt; &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://docs.brew.sh/Formula-Cookbook#an-introduction&quot;&gt;Formula Cookbook — Homebrew Documentation&lt;/a&gt; &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 21 Mar 2019 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/dive-in-homebrew.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/dive-in-homebrew.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>盘点2018：我的年度推荐</title>
        <description>&lt;p&gt;看了&lt;a href=&quot;https://sspai.com/page/2018&quot;&gt;少数派 2018 年度盘点&lt;/a&gt;活动，我也来盘点一下自己的年度推荐。推荐的物品并没有购买链接，相信大家会通过自己的方式找到购买或下载方法。&lt;/p&gt;

&lt;h3 id=&quot;硬件&quot;&gt;硬件&lt;/h3&gt;

&lt;p&gt;硬件严格上来说不是2018年的，但实在想推荐一下，还有就是2018的确没买什么太厉害的新硬件。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sonos Play:1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;我一直喜欢专业的东西，只做好一件事情，Sonos 可以说就是这样的。作为一个音响，只能专注地播放音乐。甚至连电脑的声音输出都不支持，同样也不智能。正因为如此，用 Sonos 听歌不会被干扰更有专注性。&lt;/p&gt;

&lt;p&gt;同时，可以集成所有常见的音乐服务提供商，是一种特殊的解决国内不同 App 之间曲库版权差异的方法。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sony W600D 电视&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;买电视也是一定要不智能，无广告秒开机，可惜某些歌华的机顶盒太垃圾启动速度太慢。&lt;/p&gt;

&lt;p&gt;至于为什么能接受这么小的尺寸，客观原因是客厅小和花钱少，主观原因是希望小而美以及信仰充值。&lt;/p&gt;

&lt;h3 id=&quot;软件和服务&quot;&gt;软件和服务&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Telegram&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;并不是刚刚接触的 app，但重拾 Telegram 后，它给我带来了极致的快速响应感。UI 简洁明快，整体感觉比之前常用的微信和 Slack 都快得多。功能上有 &lt;a href=&quot;https://instantview.telegram.org/&quot;&gt;Instant View&lt;/a&gt; 这个神器，再加上有趣的机器人和表情生态，可以及时没什么朋友聊天也能玩的风生水起。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scanner Pro&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;之前对此类 App 有些误解，以为是扫描名片之类的，其实并非如此。在信任和保证安全的前提下，可以用 Scanner Pro 保存个人证件和信用卡等物品复印件，免得每次需要这些信息时要回到家拿原件查询或复印。除此之外，平时的那些说明书也都可以电子化方式保存，之后直接扔掉。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1Password&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;虽然久闻大名，但第一次使用这种密码管理服务，于是选择同类产品中最知名的。我的主要动机是现在密码泄漏事件实在太多了，各种网站都是那几个密码十分危险。1Password 能解决这种烦恼。我的建议是，不那么重要的网站用 1Password 比较好，对于核心的几个账户还是自己编一些能记住的独立的密码，否则 1Password 一旦故障或出现问题或被人“&lt;del&gt;一锅端&lt;/del&gt;”，损失也能够控制得住。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bear&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;废弃了之前用的 Ulysses（因为贵）和 Quip（对协作需求不强），并且经过调研没有选择 Notion，最终选择了 Bear 作为长期协作工具。选择的原因是 Bear 写作体验和跨平台能力都不错，价格也不贵，适合我这种写作并不频繁、对写作需求没那么强的用户。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RSSHub&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;十分实用的 RSS 工具，可以把网络内容做成 RSS Feed。用官方文档的说法就是：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;🍰 万物皆可 RSS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;对于我来说，RSSHub 提供了一个不安装 App 而获得其中部分对我有用的资讯的能力。比如，我可以通过 RSSHub 订阅新浪微博某些感兴趣的账户，而不用装微博这样超级恶心的 App。&lt;/p&gt;

&lt;h3 id=&quot;书籍&quot;&gt;书籍&lt;/h3&gt;

&lt;p&gt;《It doesn’t have to be crazy at work》&lt;/p&gt;

&lt;p&gt;书不长而且很多都是 Basecamp 的官方博客 Signal v.s. Noise 摘录，主题就跟标题说的一样，阐述为什么他们可以不疯狂工作。和现在很多鸡汤内容以及创业内容都是对立的。虽然我们&lt;del&gt;可能无法&lt;/del&gt;去到这样的公司，但需要知道他们是怎么不疯狂工作的。&lt;/p&gt;

&lt;p&gt;《极简宇宙史》&lt;/p&gt;

&lt;p&gt;这是一本为了看懂《 隐藏的现实：平行宇宙是什么》而买的书，不过对于不是那么物理爱好者的人来说，前者更合适一些，能让人基本理解20世纪后的宇宙研究上的进展，包括爱因斯坦和霍金等人都在解决怎样的物理学问题。&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Feb 2019 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/2018-lifestyle-summary.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/2018-lifestyle-summary.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Drip Coffee and Nespresso</title>
        <description>&lt;p&gt;&lt;em&gt;HINT: This is a recommendation post on home coffee making based on my real experience.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I am a big coffee lover and addict. Coffee keeps me energetic with just enough sleep. Without coffee, I have to take a nap or sleep much more.&lt;/p&gt;

&lt;p&gt;I buy coffee on work and go to coffee shop on weekends. It actually took considerable money. Thus, I brew coffee by myself.&lt;/p&gt;

&lt;h3 id=&quot;starter-kit&quot;&gt;Starter Kit&lt;/h3&gt;

&lt;p&gt;My very first kit is Penguin Drip Starter Kit, which includes basic setups for drip  coffee making. And I chose an indie coffee bean shop from Taobao — the Fisher Coffee.&lt;/p&gt;

&lt;p&gt;Penguin Drip Starter Kit includes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Kalita Dripper&lt;/li&gt;
  &lt;li&gt;Kalita Wave Filter Paper&lt;/li&gt;
  &lt;li&gt;Bonavita Gooseneck Kettle&lt;/li&gt;
  &lt;li&gt;WPM Coffee Bean Grinder&lt;/li&gt;
  &lt;li&gt;Basic electronic weighter&lt;/li&gt;
  &lt;li&gt;Basic glass server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And later, a Kalita Glass Server because I broke the kit one.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/penguin-starter-kit.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;P.S. Blue Bottle Coffee is not included.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The price (¥1284/$188) is reasonable. It’s great for a new comer to understand how drip coffee works and dive into drip coffee with joy.&lt;/p&gt;

&lt;h3 id=&quot;the-problems&quot;&gt;The Problems&lt;/h3&gt;

&lt;p&gt;Drip coffee is actually &lt;em&gt;convenient&lt;/em&gt;. But it’s not instant for a work morning. There was just not enough time to make one cup of coffee for myself, since I usually get up late.&lt;/p&gt;

&lt;p&gt;Therefore, I made drip coffee only at the weekends. That sounds fine, however, it means a bag of beans would be kept for more than one month and it was not a good way to keep the beans fresh. At the beginning, it really smells and tastes good, especially during grind. In contrary, it becomes much bitter and more astringent. Big difference!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/hario-canister.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I bought a &lt;a href=&quot;https://www.hario.jp/seihin/productdetail.php?product=MCN-200B&quot;&gt;Hario Coffee Canister&lt;/a&gt; to store the beans, hoped to isolate air and reduce oxidation rate. But my experience proved that it made little contribution to the freshness unless I could consume the beans quickly.&lt;/p&gt;

&lt;p&gt;The conclusion is that freshly brewed coffee works only if you brew frequently.&lt;/p&gt;

&lt;h3 id=&quot;drip-coffee-bag&quot;&gt;Drip Coffee Bag&lt;/h3&gt;

&lt;p&gt;Drip Coffee Bag provides a similar experience as typical drip coffee, and even faster and more convenient. More importantly, the oxidation rate is just low enough to keep on a good flavour level. Though it tastes worse than real fresh brewed coffee, its average taste is good enough for me as an occasional brewer.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/fisher-coffee.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Another advantage of coffee bag is that we may buy a pack with various kinds of beans, which means we can easily taste lots of beans.&lt;/p&gt;

&lt;p&gt;With Drip Coffee Bag, I omitted the grinder step but it remained to be a weekend pleasure.&lt;/p&gt;

&lt;h3 id=&quot;nespresso&quot;&gt;Nespresso&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/sydney-opera-house.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When I was staying at Sydney, the hotel provided Delonghi Nespresso coffee maker (however, I don’t know the exact model). I used it several times a day to get caffeinated. That’s great experience for me, both the city and the coffee.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nespresso-clips.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The machine I bought is Nespresso Clips, which is quite similar to Nespresso Pixie C60.&lt;/p&gt;

&lt;p&gt;It basically need one minute to fill the water tank (if in need) and one more minute to brew and add some sugar. This enables me to get a cup of coffee every morning. In addition, it’s even easier to taste different flavours.&lt;/p&gt;

&lt;p&gt;And there are major differences between Nespresso and drip coffee. Nespresso brews Espresso coffee or its derivatives. The tastes can be quite different, which is the reason why I will keep the drip coffee kit and have a drink when I want.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/coffee-life.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Enjoy the coffee life!&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Jan 2019 00:00:00 +0800</pubDate>
        <link>https://crispgm.com/page/drip-coffee-and-nespresso.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/drip-coffee-and-nespresso.html</guid>
        
        
      </item>
      
    
  </channel>
</rss>
