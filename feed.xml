<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CrispDev</title>
    <description>Home page and blog of David Zhang (@crispgm), a minimalist programmer, photographer, and lifehacker.</description>
    <link>https://crispgm.com/</link>
    <atom:link href="https://crispgm.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 08 Jun 2022 13:58:54 +0000</pubDate>
    <lastBuildDate>Wed, 08 Jun 2022 13:58:54 +0000</lastBuildDate>
    <generator>Jekyll v4.2.2</generator>
    
      
      <item>
        <title>Neovim (0.5) Is Overpowering</title>
        <description>&lt;p&gt;I have heard about Neovim for a long time. I can say that I really appreciate and adopt the ideas of Neovim –
it’s more progressive, embraces open source community, and tries to make Neovim approachable to more developers.&lt;/p&gt;

&lt;p&gt;However, for its functionality, I didn’t see much difference between Vim. There are various reasons.
Firstly, Neovim is a drop-in Vim, so even the plugins could compat each other without much modification,
if it is not implemented with Vim or Neovim specific feature.
And Neovim somehow pushes Vim to evolve and release similar improvement. e.g., asynchronous job.
For an end-user without much deeper knowledge, the biggest differences might be  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XDG_PATH&lt;/code&gt; based directory and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;init.vim&lt;/code&gt; file name.&lt;/p&gt;

&lt;p&gt;Until then, I found Neovim 0.5 and try Neovim nightly because of &lt;a href=&quot;https://github.com/ThePrimeagen&quot; target=&quot;_blank&quot;&gt;ThePrimeagen&lt;/a&gt; and &lt;a href=&quot;https://github.com/tjdevries&quot; target=&quot;_blank&quot;&gt;tjdevries&lt;/a&gt;, which impacted me with significant differences and power.&lt;/p&gt;

&lt;h2 id=&quot;modern-editor-technologies&quot;&gt;Modern Editor Technologies&lt;/h2&gt;

&lt;p&gt;Neovim 0.5 brings in new features that important to a modern code editor:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A built-in LSP (Language Server Protocol) client&lt;/li&gt;
  &lt;li&gt;Tree-sitter syntax engine&lt;/li&gt;
  &lt;li&gt;Lua API improvements&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;built-in-lsp-client&quot;&gt;Built-in LSP Client&lt;/h3&gt;

&lt;p&gt;There are great language plugins in Vim ecology, but it is not easy to handle.
For each language, users may need to get a plugin for it and configure a lot. There was not a unified way to make it.
But language server does.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Language_Server_Protocol&quot;&gt;Language Server Protocol&lt;/a&gt; is created by Microsoft, RedHat and Codenvy,
which provides language features (e.g. completion, navigation, formatting, and so on) through JSON-based RPC protocol,
so IDEs and editors are able to follow a unified protocol for different languages.&lt;/p&gt;

&lt;p&gt;Vim use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cscope&lt;/code&gt;  to handle these features but it is not good for every language and not intelligent enough.&lt;/p&gt;

&lt;p&gt;There are popular Vim LSP clients include &lt;a href=&quot;https://github.com/dense-analysis/ale&quot; target=&quot;_blank&quot;&gt;ale&lt;/a&gt;,
&lt;a href=&quot;https://github.com/neoclide/coc.nvim&quot; target=&quot;_blank&quot;&gt;coc.vim&lt;/a&gt;,
&lt;a href=&quot;https://github.com/autozimu/LanguageClient-neovim&quot; target=&quot;_blank&quot;&gt;LanguageClient-neovim&lt;/a&gt;,
and &lt;a href=&quot;https://github.com/prabirshrestha/vim-lsp&quot; target=&quot;_blank&quot;&gt;vim-lsp&lt;/a&gt;, which tries to bring language servers to Vim/Neovim.
But Neovim 0.5 embeds a built-in LSP client by itself instead of plugins.
Because &lt;a href=&quot;https://www.youtube.com/watch?v=ArwDgvYEZYk&quot; target=&quot;_blank&quot;&gt;LSP is built for editors and “we can have nice things”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We just install any language servers we want. Then, code completion and a bunch of goto features are ready for us.&lt;/p&gt;

&lt;p&gt;And a notice here, before moving to Neovim, I have tried LSP with Visual Studio Code.
It overall works well but for huge repos, there is performance issue.
When you open repo with tons of codes (e.g. Thrift generated codes),
language server can be very slow at first and cost much CPU time.&lt;/p&gt;

&lt;h3 id=&quot;tree-sitter&quot;&gt;&lt;a href=&quot;https://github.com/tree-sitter/tree-sitter&quot;&gt;tree-sitter&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Tree-sitter is a parser generator tool and Neovim uses it to build syntax tree, in order to understand source code better.
As a result, now Neovim provides better highlight
(here is a &lt;a href=&quot;https://github.com/nvim-treesitter/nvim-treesitter/wiki/Gallery&quot;&gt;Gallery of tree-sitter powered features in Neovim&lt;/a&gt;)
and it can also be used to create awesome feature, e.g. syntax-based text object.&lt;/p&gt;

&lt;p&gt;Showcase of nvim-treesiter:
&lt;img src=&quot;https://raw.githubusercontent.com/nvim-treesitter/nvim-treesitter/master/assets/example-cpp.png&quot; alt=&quot;nvim-treesiter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And I added &lt;a href=&quot;https://github.com/crispgm/nord-vim/blob/develop/colors/nord.vim#L306&quot;&gt;highlights patches&lt;/a&gt;
for my favortie colorscheme with support on Tree-sitter symbols:&lt;/p&gt;
&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&quot;+-----------+&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot; treesitter +&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot;+-----------+&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s:hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TSError&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s:nord11_gui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s:nord11_term&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s:hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TSPunctDelimiter&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s:nord6_gui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s:nord6_term&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s:hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TSPunctBracket&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s:nord6_gui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s:nord6_term&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s:hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TSPunctSpecial&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s:nord6_gui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s:nord6_term&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s:hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TSConstant&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s:nord4_gui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;NONE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s:hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TSConstBuiltin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s:nord4_gui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;NONE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot; ... more&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;lua-api-improvements&quot;&gt;Lua API Improvements&lt;/h3&gt;

&lt;p&gt;Neovim has embraced Lua since v0.2.1 and and it keeps improving.
From now on, we can setup Neovim with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;init.lua&lt;/code&gt; over &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;init.vim&lt;/code&gt;.
Here is a great &lt;a href=&quot;https://oroques.dev/notes/neovim-init/&quot;&gt;article about init.lua migration&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But the Lua parts are not that ready for production. I think it’s the vim API part.
We can do config Neovim with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;init.lua&lt;/code&gt;, but it looks not so native. e.g.:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Calling to vim command is literally command string&lt;/li&gt;
  &lt;li&gt;Config options is not that easy&lt;/li&gt;
  &lt;li&gt;No native auto-commands support&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are several pull requests WIP on GitHub to make it easier and more user friendly.
If you chose to migrate to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;init.lua&lt;/code&gt; now, you would have faced refactoring though it would not be very hard.&lt;/p&gt;

&lt;h2 id=&quot;nightly-plugins&quot;&gt;Nightly Plugins&lt;/h2&gt;

&lt;p&gt;Though Neovim 0.5 is still nightly, a bunch of plugins are made by awesome enthusiasts and contributors,
which leverage the power of the new features.&lt;/p&gt;

&lt;h3 id=&quot;nvim-treesitter&quot;&gt;&lt;a href=&quot;https://github.com/nvim-treesitter/nvim-treesitter&quot;&gt;nvim-treesitter&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Though neovim embeds tree-sitter, it is not out-of-box for users. We need this to install the languages.&lt;/p&gt;

&lt;p&gt;Installation:&lt;/p&gt;
&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Plug &lt;span class=&quot;s1&quot;&gt;'nvim-treesitter/nvim-treesitter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'do'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;':TSUpdate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'nvim-treesitter/playground'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:TSInstall [language]&lt;/code&gt; to install a language parser. Sometimes, you may not notice what tree-sitter does.
Just try &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:TSPlaygroudToggle&lt;/code&gt;, you will have a clearer understanding of tree-sitter.&lt;/p&gt;

&lt;h3 id=&quot;nvim-lspconfig&quot;&gt;&lt;a href=&quot;https://github.com/neovim/nvim-lspconfig&quot;&gt;nvim-lspconfig&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;It is similar to nvim-treesitter but for LSP client,
which is needed for install and communicate with language servers of each language.&lt;/p&gt;

&lt;p&gt;Installation:&lt;/p&gt;
&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Plug &lt;span class=&quot;s1&quot;&gt;'neovim/nvim-lspconfig'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The language servers are needed to install externally on system level with any package manager you like.
I use Homebrew, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go get&lt;/code&gt; and npm/yarn all together.
Follow &lt;a href=&quot;https://github.com/neovim/nvim-lspconfig/blob/master/CONFIG.md&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CONFIG.md&lt;/code&gt;&lt;/a&gt; for details of each language server.&lt;/p&gt;

&lt;p&gt;Take Go and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gopls&lt;/code&gt; as example:&lt;/p&gt;

&lt;p&gt;Install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gopls&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;GO111MODULE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;on go get golang.org/x/tools/gopls@latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then setup with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lspconfig&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'lspconfig'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gopls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When you open a file, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:LspInfo&lt;/code&gt; to know whether a LSP client is attached.&lt;/p&gt;

&lt;h3 id=&quot;nvim-compe&quot;&gt;&lt;a href=&quot;https://github.com/hrsh7th/nvim-compe&quot;&gt;nvim-compe&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;nvim-compe is an auto completion plugin for nvim. It completes based on LSP, buffers, and snippets.
It works with Neovim’s native LSP client.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nvim-compe.png&quot; alt=&quot;nvim-compe&quot; style=&quot;width: 640px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Installation:&lt;/p&gt;
&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Plug &lt;span class=&quot;s1&quot;&gt;'hrsh7th/nvim-compe'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are also other choices. But I personally recommend &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvim-compe&lt;/code&gt; for its good functionality and design,
with both well-organized and well-written source codes.&lt;/p&gt;

&lt;h3 id=&quot;telescope&quot;&gt;&lt;a href=&quot;https://github.com/nvim-telescope/telescope.nvim&quot;&gt;Telescope&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Last but the most, Telescope is one of the killer apps of Neovim nightly. It is similar to fzf, but with better user interface. We can do file navigation, live grep, buffer navigation, help tag/keymaps viewer and many more with Telescope.&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&quot; dependencies&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'nvim-lua/popup.nvim'&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'nvim-lua/plenary.nvim'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot; telescope&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'nvim-telescope/telescope.nvim'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Find file in Telescope:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nvim-telescope.png&quot; alt=&quot;nvim-telescope&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With Telescope, I leave FZF and rarely use file tree plugin again.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I often come across with YouTube videos with &lt;del&gt;clickbait&lt;/del&gt; titles like “configure Vim or Neovim like VSCode” (no offence).
As it says, VSCode is an awesome editor and set a standard for editors.&lt;/p&gt;

&lt;p&gt;Neovim 0.5 is overpowering as the title says.
Give Neovim 0.5 a try, you will find that it is not difficult to make it as powerful as VSCode.
And I am also looking forward to seeing more nice things with Neovim.&lt;/p&gt;
</description>
        <pubDate>Sun, 21 Mar 2021 00:00:00 +0000</pubDate>
        <link>https://crispgm.com/page/neovim-is-overpowering.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/neovim-is-overpowering.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>我的 RWC2019 难忘之旅</title>
        <description>&lt;p&gt;距离2019年日本橄榄球世界杯南非vs意大利的比赛整整一周年后，谨以这篇博客纪念 RWC2019 的难忘之旅。&lt;/p&gt;

&lt;h2 id=&quot;我和-rugby&quot;&gt;我和 Rugby&lt;/h2&gt;

&lt;p&gt;Rugby 就是英式橄榄球，又叫联合式橄榄球 Rugby Union，在中国是一个非常冷门的运动。在大四准备去澳大利亚留学的时候，我琢磨着要提前熟悉一下当地文化，于是出于机缘巧合开始看上了 Rugby。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rugby-quino-al.jpg&quot; alt=&quot;rugby-photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这项运动在国内语境下有很多误解，我却深深的喜爱上了这个运动。橄榄球在追求力量和速度的同时，崇尚球员、裁判和球迷之间的尊重。最令我舒服的一点就是，这个比赛的裁判人员和技术方面都非常专业和公正。早于足球很多年就引入了视频裁判，并且运用得当；比赛中的误判非常少，基本不会由于裁判影响比赛的进程。&lt;/p&gt;

&lt;p&gt;反观从小到大看了很多年的足球，让我看得心烦：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;一场比赛小误判若干&lt;/li&gt;
  &lt;li&gt;重大比赛淘汰赛“时常”出现重大误判&lt;/li&gt;
  &lt;li&gt;球员动不动就围着裁判讨说法&lt;/li&gt;
  &lt;li&gt;好不容易引入视频裁判但由于使用不当招致教练、名宿和球迷们的批评&lt;/li&gt;
  &lt;li&gt;球迷和舆论等普遍认可“足球是圆的”、“误判时足球的一部分”等奇怪的斯德哥尔摩综合症式的言论&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因此看了橄榄球，有一种受不了奇葩前任的感觉。&lt;/p&gt;

&lt;p&gt;最初，我只是通过优酷和 YouTube 上的一些视频了解熟悉橄榄球。毕业回到国内后，找到了一个小组织——自由马。中国农业大学可以说是中国英式橄榄球的摇篮，自由马就是农大的人搞的组织，这个群中会讨论橄榄球并且有时会有比赛直播。&lt;/p&gt;

&lt;h2 id=&quot;我和世界杯&quot;&gt;我和世界杯&lt;/h2&gt;

&lt;p&gt;说到世界杯，不得不引出橄榄球一项特别的传统——非职业化。&lt;/p&gt;

&lt;p&gt;我们平时经常在电视看的体育比赛，大多都是职业化的，称为职业体育或商业体育，换句话说运动员以此谋生。成功的团体类赛事商业化开发得大多十分成熟，球员们也是人均百万甚至千万年薪，转会费近年来动辄上亿，比如：英超足球、NBA、NFL等。&lt;/p&gt;

&lt;p&gt;非职业化则是运动员不以运动本身为谋生手段。换句话说，他们平时有自己的工作，而体育只是「爱好」。在一些不那么热门的运动中，非职业化非常常见。但在相对热门的运动中，橄榄球可以说是比较晚进入职业化的。&lt;/p&gt;

&lt;p&gt;早期，正是因为非职业化的原因，橄榄球分裂为联合式橄榄球 Rugby Union 和联盟式橄榄球 Rugby League。后者允许职业化，并简化了一定的规则，这项运动在一些国家也比较流行，在澳大利亚甚至流行程度高于 Rugby Union。至于美式橄榄球，跟英式的联系非常少，两者基本上是起到让人互相误解的作用。&lt;/p&gt;

&lt;p&gt;联合式橄榄球直到1995年才举行了第一次世界杯，并在1995解除了所有商业限制，开始职业化进程。正因为如此，橄榄球的受众群体、场均观众数以及球员工资（顶薪也不到百万欧元）等，和一些职业运动比都处于明显劣势。&lt;/p&gt;

&lt;p&gt;我在电视前看了2011年和2015年两届世界杯。这次2019年世界杯，举办国是邻国日本——亚洲橄榄球最强大的国家。比赛在9月末到11月初举行，恰好中间经过国庆，对于中国人来说难得的去现场观看的好机会。&lt;/p&gt;

&lt;h2 id=&quot;我和南非&quot;&gt;我和南非&lt;/h2&gt;

&lt;p&gt;虽然我在澳大利亚留学，但我最喜爱的球队不是澳大利亚，而是南非🇿🇦。&lt;/p&gt;

&lt;p&gt;首先我最初接触橄榄球时看到的比赛是新西兰的，毕竟是世界强队视频资料会比较多。而新西兰主要参加的比赛就是南半球的三国赛 Tri-Nations（后来阿根廷加入升级成了 The Rugby Championship），Tri-Nations 中就是新西兰、南非和澳大利亚之间主客场对战。&lt;/p&gt;

&lt;p&gt;澳大利亚由于队服土黄所以不喜欢，先被 pass。&lt;/p&gt;

&lt;p&gt;新西兰是世界第一，人称全黑队，全黑色队服黑帅气，国歌也是毛利语/英语双语演唱，国歌结束之后还会有太平洋岛国特色的战舞——Haka。如果不是我不爱支持在一个运动中的统治球队的话，我想我会支持新西兰。&lt;/p&gt;

&lt;p&gt;而后，我就被南非吸引住了，原因主要有两点：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;一个非洲国家，但球队基本上全员都是白人，这点很有意思&lt;/li&gt;
  &lt;li&gt;国歌很长，有多种语言，但很好听&lt;/li&gt;
  &lt;li&gt;比赛风格硬朗全面&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里插播一句，由于橄榄球强队/弱队加起来很有限，因此它们的国歌已经基本都学会了。&lt;/p&gt;

&lt;p&gt;2011年南非队淘汰赛被澳大利亚小比分淘汰，而且2015年南非在英格兰世界杯小组赛揭幕战“翻车”输给日本（PS：这次翻车给日本的球队又加上了爱尔兰和苏格兰），爆出大冷门。&lt;/p&gt;

&lt;p&gt;不像足球和篮球等运动，橄榄球的“阶级固化”十分严重。世界第一打世界第五，基本上是大概率稳赢的。世界前五打日本这种世界前十后端的球队，以往基本上都是虐待。&lt;/p&gt;

&lt;p&gt;这次世界杯，决定抓住机会前往日本一睹世界杯和我的主队南非的风采。经常了一番调研，发现10月4日南非vs意大利的比赛，无论时间还是地点都比较科学。&lt;/p&gt;

&lt;h2 id=&quot;南非vs意大利&quot;&gt;南非vs意大利&lt;/h2&gt;

&lt;h3 id=&quot;滨名湖和鳗鱼饭&quot;&gt;滨名湖和鳗鱼饭&lt;/h3&gt;

&lt;p&gt;我这次日本之旅，住在名古屋属于爱知县，比赛在隔壁的静冈县。日本的县大多不大但公共交通发达，名古屋到静冈耗时还没北京市内地铁时间长。&lt;/p&gt;

&lt;p&gt;这次一大早就出发，中途在滨名湖南岸的弁天島站下车吃当地特产鳗鱼饭。不得不感慨，日本的海滨景色太好了，不是那种热带风格但十分的干净还有蓝。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rwc-bentenjima.jpg&quot; alt=&quot;Bentenjima&quot; /&gt;&lt;/p&gt;

&lt;p&gt;滨名湖和海相连，因此是个咸水湖适合鳗鱼的生长，因此鳗鱼也是滨名湖乃至静冈的一大特产。&lt;/p&gt;

&lt;p&gt;一进到店里只有两桌吃饭的人，巧合的是，其中一桌的大叔是橄榄球爱好者，并且也穿着南非队服。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rwc-unagi-bowl.jpg&quot; alt=&quot;unagi-bowl&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;到达袋井&quot;&gt;到达袋井&lt;/h3&gt;

&lt;p&gt;比赛的场地叫小笠山综合运动公园 Ecopa 体育场，平时是J联赛磐田 Jubilo 和清水 S-Pulse的主场，位于静冈县小城袋井。&lt;/p&gt;

&lt;p&gt;在从滨松去的火车上，已经大部分都是球迷了，有一些南非黑人在火车上已经开始唱歌。这在日本安静的火车/地铁上，十分不常见。&lt;/p&gt;

&lt;p&gt;到了愛野站下车，由于这里没什么居民区，已经完全是世界杯的气氛。一出车站就是喜力赞助的球迷区，各种日本街边美食和啤酒有售。橄榄球比赛不能没有啤酒，即使在比赛中也要喝。这和喝完耍酒疯打架的足球，又是一个强烈的对比。&lt;/p&gt;

&lt;p&gt;而我也不例外，果断购入一杯喜力。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rwc-beer.jpg&quot; alt=&quot;beer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;喝上啤酒之后，就进入了漫长的世界杯周边排队等待时间，满足我和椰椰子的冰箱贴需求。下面左边的是此次世界杯的吉祥物，右边是世界杯的标志。排了太久，一下买了好几样。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rwc-fridge-magnet.jpg&quot; alt=&quot;beer&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;进入比赛&quot;&gt;进入比赛&lt;/h3&gt;

&lt;p&gt;进入场地时，已经到了傍晚，天开始逐渐变暗，沿海地区的晚霞真的美丽。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rwc-stadium-scene.jpg&quot; alt=&quot;Beautiful Scene inside Stadium&quot; /&gt;&lt;/p&gt;

&lt;p&gt;由于入场时间基本和饭点重合，于是只好享用一下球场美食。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rwc-stadium-catering.jpg&quot; alt=&quot;Catering&quot; /&gt;&lt;/p&gt;

&lt;p&gt;随着观众慢慢进场，球员们已经开始了热身。主要内容是跑步、拉伸、区域演练等。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rwc-warmup.jpg&quot; alt=&quot;Warmup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;比赛开始后，场面呈一边倒的局面，意大利几乎毫无还手之力，并且还因为 Spear Tackle 被罚下一人。&lt;/p&gt;

&lt;p&gt;场内的意大利球迷不多，有不少还是日本小学生助威团，怀疑是官方赠票组织的。他们一开始气氛不错，下半场可能比较晚了，就提前走了，恰逢意大利大比分落后显得有些冷清。&lt;/p&gt;

&lt;h3 id=&quot;比赛结束后&quot;&gt;比赛结束后&lt;/h3&gt;

&lt;p&gt;比赛结束后，由于有数万人散场，这十分考验组织者的组织水平。散场后，如果通过愛野站坐车离场，直接原路走回去。但愛野站比较小，新干线快车不停，想必大部分人应该还是会下榻东京或者名古屋的。&lt;/p&gt;

&lt;p&gt;这种情况就要走路大约20分钟到一个大停车场，那里都是官方提供的巴士。乘坐巴士可以前往较大的掛川站，乘坐新干线。&lt;/p&gt;

&lt;p&gt;整个过程算不上很快捷，但整体流程比较清晰，各个环节配合的比较合理，没有经过过多的等待，这点还是好评的。&lt;/p&gt;

&lt;p&gt;最后，跟世界杯的标语一起合影——「4年に一度じゃない。一生に一度だ。」&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rwc-once-in-a-lifetime.jpg&quot; alt=&quot;Once in a Lifetime&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;决赛&quot;&gt;决赛&lt;/h2&gt;

&lt;p&gt;南非对阵意大利的比赛，是小组赛的第三轮，后来经过2轮小组赛和淘汰赛的厮杀，南非分别轻取东道主日本、险胜威尔士进入了决赛。决赛对手是刚刚击败卫冕冠军新西兰、意气风发的英格兰队。时间已经到了11月，距离我看得现场比赛已经过了接近1个月。&lt;/p&gt;

&lt;p&gt;英格兰在教练 Eddie Jones 接手后，在 SixNations 和各种测试赛中表现出了强大实力，英格兰俱乐部 Saracens 也多次夺得欧洲冠军杯冠军。半决赛，英格兰完美的压制了卫冕冠军新西兰。&lt;/p&gt;

&lt;p&gt;同时，Eddie Jones 正是2015年率领日本击败南非的主教练。而且，还有两条“定律”，没有球队在获得 Tri-Nations 和后来的 Rugby Championship 后获得世界杯，没有球队在输了小组赛后夺冠。似乎各方面，英格兰都占优势，南非在决赛前并不被看好。不过其实，还有一条“定律”，就是南非前两次夺得世界冠军之间间隔12年，第一次是1995年，而上一次则是2007年，算起来今年2019年又该夺冠了。&lt;/p&gt;

&lt;p&gt;看比赛的地点是 Paddy O’Shea’s，之前听说的一家酒吧，几乎都是外国人、看比赛气氛很好，之前曾经去那看过 SixNations 的比赛。&lt;/p&gt;

&lt;p&gt;决赛当天，Paddy O’Shea’s 简直爆满，甚至店铺外面都站满了人。我简单观察了下，居然发现在场的南非球迷数量具有碾压般的优势。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rwc-final-at-bar.jpg&quot; alt=&quot;Bar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;比赛前奏国歌环节，全场高唱了国歌。我在比赛开始后强行和旁边的南非人搭话聊天，他是从上海出差过来的南非人，在国内大学任教。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rwc-final-selfie.jpg&quot; alt=&quot;selfie&quot; /&gt;&lt;/p&gt;

&lt;p&gt;比赛的进程向着南非的方向发展，一上来英格兰失误频频，南非虽然也没有领先很多，但节奏处于自己掌握中。借助着更多的罚球，一直保持着6分的可观领先。&lt;/p&gt;

&lt;p&gt;进入下半场，南非11号边锋 Mapimpi 完成了达阵，彻底奠定了优势。此后，14号另一个边锋 Cheslin Kolbe 漂亮的脚步晃开了英格兰明星球员 Owen Farrel 完成了第二次达阵，彻底锁定了胜局。&lt;/p&gt;

&lt;p&gt;离比赛还有2分钟结束的时候，导播已经给出了画面，工匠已经在世界杯上刻上了2019冠军南非的字样。眼看大局已定，虽然很冷，我也坚持脱掉了所有外套，亮出了我的南非队服。后面另一位南非人，看到之后用中文对我说：“南非！”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rwc-champion.jpg&quot; alt=&quot;champion&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;最后&quot;&gt;最后&lt;/h2&gt;

&lt;p&gt;这次2019日本橄榄球世界杯的标语是「4年に一度じゃない。一生に一度だ。」，英文是「Once in a Lifetime」。&lt;/p&gt;

&lt;p&gt;中文直译日文过来就是「不是四年一次、是一生一次」。&lt;/p&gt;

&lt;p&gt;世界杯是四年一届进行的，但对于组织人员、球员、球迷和我来说，都是一生一次的体验。&lt;/p&gt;

&lt;p&gt;2019年的时光是美好的，第一次去日本看了乃木坂46演唱会，完成了结婚的人生大事，第一次看了橄榄球世界杯。&lt;/p&gt;

&lt;p&gt;2020年只能用惨来形容，希望世界能够尽管回归正轨。南非也处于 COVID-19 疫情的肆虐中，希望他们在南非也能安全度过。&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Oct 2020 00:00:00 +0000</pubDate>
        <link>https://crispgm.com/page/rwc-2019.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/rwc-2019.html</guid>
        
        
      </item>
      
    
      
    
      
      <item>
        <title>程序员主题配色键帽对比</title>
        <description>&lt;h3 id=&quot;更新记录&quot;&gt;更新记录&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;2021-11-17: _加入 EnjoyPBT Be The One&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;近年来，GeekHack 上出现了多个受到程序员主题配色启发复刻的键帽。在国内讨论中，时常会看到有人觉得「码农风格键帽看起来都差不多」。不得不承认，或许是受到某种设计或者工艺限制的原因，这些主题风格在键帽上的呈现的确颇有相似之处。&lt;/p&gt;

&lt;p&gt;但据我之前的使用经验，在实际的编辑器/IDE/终端使用时，不同的主题感官大部分还是很不一样的。个人感觉就是，显示器的色彩饱和度比较高，所以编辑器中的主题背景色会比较突出，让不同主题看起来会有很直观的不同。而在键帽上，就不会那么明显，有一部分「渲染美如画」到手后「翻车」的键帽或许也是这个原因。&lt;/p&gt;

&lt;p&gt;这里，我希望串联起这些键帽在原来的编辑器中的样子。让广大之前没有接触过这些主题的键帽玩家，也对他们的背景有更为直观的认识。&lt;/p&gt;

&lt;p&gt;下面，我会列出近年来几个程序员主题配色键帽：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://geekhack.org/index.php?topic=90192.0&quot;&gt;GMK Solarized Dark&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://geekhack.org/index.php?topic=99174.0&quot;&gt;GMK Oblivion&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://geekhack.org/index.php?topic=100646.0&quot;&gt;GMK Nord&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://geekhack.org/index.php?topic=100727.0&quot;&gt;GMK Dracula&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://geekhack.org/index.php?topic=105160.0&quot;&gt;GMK Monokai Material&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://geekhack.org/index.php?topic=110929.0&quot;&gt;EnjoyPBT Be The One&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;（排序以发布时间为准）&lt;/p&gt;

&lt;p&gt;对比方式：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;默认采用 GMK 版本&lt;/li&gt;
  &lt;li&gt;语言为 Go 和 JavaScript&lt;/li&gt;
  &lt;li&gt;编辑器为 Visual Studio Code (VSCode)&lt;/li&gt;
  &lt;li&gt;分别在 Go 和 JavaScript 下截图，Base 部分渲染图以及60%键盘渲染图&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;solarized-dark&quot;&gt;Solarized Dark&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/altercation/solarized&quot;&gt;Solarized&lt;/a&gt;创立于2011年3月15日，是一个有&lt;a href=&quot;https://en.wikipedia.org/wiki/Solarized_(color_scheme)&quot;&gt;维基百科词条&lt;/a&gt;的主题，官方支持一些平台，不过已经数年没有更新。&lt;/p&gt;

&lt;p&gt;Solarized 有两个版本，分别是 Dark 和 Light。其实很多编辑器主题也有类似的设置，甚至会自带4个不同版本。不过做成键帽的无一例外都是基于暗色模式的。&lt;/p&gt;

&lt;p&gt;Solarized Dark 呈现为一种介于蓝绿之间的色彩，GMK Solarized Dark 看起来色彩更少更绿。由于稍显年代久远，我没有找到正面渲染图。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/keycaps/solarized-dark-in-go.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/solarized-dark-in-js.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/solarized-dark-set.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;oblivion&quot;&gt;Oblivion&lt;/h3&gt;

&lt;p&gt;Oblivion 在程序员主题中算是比较名不见经传的，直接搜索先搜出来的是键帽，GitHub 几个移植 repo 不超过30多颗星。不过在 VSCode 中，倒是一下就找到了。&lt;/p&gt;

&lt;p&gt;Oblivion 在编辑器中给我的感受就是暗淡的「土色」背景，加上非常高亮的白色关键字部分，可以说比较欣赏不能。&lt;/p&gt;

&lt;p&gt;但 GMK Oblivion 的设计比编辑器要优秀，它在字母部分背景色的选择上没有用编辑器中的背景，而是选用了更接近灰色的色彩。这让整体的观感出现了很大的变化，视觉效果远优于编辑器，感受不到那种扑面而来的「土色」，高亮白也直接被移除了。&lt;/p&gt;

&lt;p&gt;除此之外，GMK Oblivion 还把字母区外的功能键，替换成了 Git 的命令，这点还比较有趣。大概是由于出的早，它还得到了「码农」的名字。&lt;/p&gt;

&lt;p&gt;就我个人来说，Oblivion 大概是这几套键帽中，本身最冷门，且键帽效果跟主题相差最大的。我要是只看编辑器，大概不会想买这键帽。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/keycaps/oblivion-in-go.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/oblivion-in-js.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/oblivion-set.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/oblivion-render.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;nord&quot;&gt;Nord&lt;/h3&gt;

&lt;p&gt;Nord 是一个极地深蓝冷淡风格的主题配色，在 GitHub 主 repo 有3500+个星，人气相当不错。据我本人考古发现，诞生于2016年9月。不同于其它更加社区性的主题，Nord 的作者从一开始就制定了官方的配色方案，并且尽可能移植支持了各种软件、编辑器、终端。当然，Nord 的作者没有精力覆盖到所有领域，GMK Nord 并不是 &lt;a href=&quot;http://nordtheme.com/&quot;&gt;Nord 官方&lt;/a&gt;设计的，属于移植项目。&lt;/p&gt;

&lt;p&gt;GMK Nord 单从发布时间比 GMK Dracula 要早，但遭受了 Oblivion 和 Dracula 的前后夹击以及疫情等因素，团购时间不断延后，据说将于多灾多难的2020年5月1日开启GB。&lt;/p&gt;

&lt;p&gt;我本人就是 Nord 的使用者和爱好者，还移植了 &lt;a href=&quot;https://github.com/crispgm/alfred-nord&quot;&gt;Alfred 上的 Nord 主题&lt;/a&gt;。我个人对于 GMK Nord 设计感到满意，它的基本还原了 Nord 那种低对比的深蓝色感觉。字母部分完全就是编辑器的感觉，novelties 和桌垫则完全复刻了 Nord 官方的图标和背景图。&lt;/p&gt;

&lt;p&gt;对于我来说，就是必须冲，期待到货后用 Nord 键帽在 Nord 主题上写东西的场景。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/keycaps/nord-in-go.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/nord-in-js.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/nord-set.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/nord-render.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;dracula&quot;&gt;Dracula&lt;/h3&gt;

&lt;p&gt;Dracula 本身是一个知名程序员主题配色，诞生于2013年10月12日，是一个比较新的主题，在 GitHub 主 repo 有12000+个星，是这四个主题中最具人气的。同 Nord 一样，也有比较完善的&lt;a href=&quot;https://draculatheme.com/&quot;&gt;组织维护&lt;/a&gt;，对于100多个各种平台和软件提供了官方移植。&lt;/p&gt;

&lt;p&gt;Dracula 的特点是鲜艳的色彩和对紫色的大范围使用，在相对平淡的深色程序员配色中属于比较骚气的，回过头看 GMK Future Funk 基本也是这几样颜色。我本身也比较喜欢只是觉得看久了容易视觉疲劳，所以没有用作日常使用。&lt;/p&gt;

&lt;p&gt;GMK Dracula 的效果看起来完全具有 Dracula 的精髓，果然一炮走红，开团之后十分火爆。&lt;/p&gt;

&lt;p&gt;ps: GMK Dracula 的 IC 贴也是浓浓的程序员风格，&lt;a href=&quot;https://geekhack.org/index.php?topic=100727.0&quot;&gt;推荐大家围观下&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/keycaps/dracula-in-go.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/dracula-in-js.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/dracula-set.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/dracula-render.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;monokai&quot;&gt;Monokai&lt;/h3&gt;

&lt;p&gt;Monokai 的作者本身就叫 &lt;a href=&quot;https://monokai.nl/&quot;&gt;Monokai&lt;/a&gt;，这是一个非常有人气的主题。虽然 Monokai 没有严格意义上的官方 repo，不好统计星的数量，但我比较确定 Monokai 的使用者一定很多，甚至很可能比 Dracula 多。Sublime Text 等老牌编辑器的默认主题就是 Monokai，这给它积累了不少人气，我在发现 Nord 之前也是在用 Monokai。&lt;/p&gt;

&lt;p&gt;Monokai 不像 Nord 和 Dracula，主题的移植更多的依靠社区贡献，各平台都有非官方移植，并且也衍生出了很多相似的新主题。GMK Monokai Material 的作者 Oblotzky (也是 GMK Obvilion 的作者)就选择了一个 Monokai 的衍生主题——Monokai Material。&lt;/p&gt;

&lt;p&gt;虽然这些衍生版其实跟 Sublime Text 上的版本已经有比较明显的不同了，但整体还是符合 Monokai 的特质。我个人觉得 Monokai 的特质就是彩色部分的色彩以及比较醒目的文本部分。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/keycaps/monokai-in-go.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/monokai-in-js.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/monokai-set.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/monokai-render.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;one-dark-pro&quot;&gt;One Dark Pro&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Binaryify/OneDark-Pro&quot;&gt;One Dark Pro&lt;/a&gt; 是 VSCode 上安装量最大的主题，有超过450万人安装。这一系列主题源自 Atom 编辑器中的 One Dark。&lt;/p&gt;

&lt;p&gt;Be The One 键帽彩色部分可以看出是源自 One Dark Pro，但 Base 部分背景色和字符色都是编辑器中不是那么普遍的颜色，所以整体效果两者差异还是比较大的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/keycaps/one-in-go.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/one-in-js.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/one-set.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/keycaps/one-render.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;最后&quot;&gt;最后&lt;/h3&gt;

&lt;p&gt;以上仅供各位参考，喜欢不喜欢全在自己的口味，祝大家都能用上自己喜欢的主题和键帽。&lt;/p&gt;

&lt;p&gt;由于这些主题和键帽官方资料并不多，如果对于主题和键帽相关背景有什么的错误的，欢迎大家指出。&lt;/p&gt;
</description>
        <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
        <link>https://crispgm.com/page/programmers-keycaps-compare.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/programmers-keycaps-compare.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Alfred Nord, A Nord theme for Alred</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/crispgm/alfred-nord&quot;&gt;Alfred Nord&lt;/a&gt; is an unofficial port of &lt;a href=&quot;http://nordtheme.com/&quot;&gt;Nord theme&lt;/a&gt; for &lt;a href=&quot;https://www.alfredapp.com/&quot;&gt;Alfred&lt;/a&gt; 3 &amp;amp; 4.&lt;/p&gt;

&lt;p&gt;I have been a big fan of Nord theme for years and I have used official Nord themes for everything. e.g., iTerm2, Sublime Text, Visual Studio Code, neovim, tmux, and so on.&lt;/p&gt;

&lt;p&gt;Alfred Nord theme is not provided officially, so I made this unofficial port, which follows Nord colors and palettes&lt;/p&gt;

&lt;p&gt;Compared to other ports, I chose a smaller icon sizes to make it more neat.&lt;/p&gt;

&lt;h3 id=&quot;install&quot;&gt;Install&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.alfredapp.com/extras/theme/5Y8E7URIWQ/&quot;&gt;https://www.alfredapp.com/extras/theme/5Y8E7URIWQ/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;or manually download &lt;a href=&quot;https://github.com/crispgm/alfred-nord/raw/master/Nord.alfredappearance&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nord.alfredappearance&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;You need the &lt;a href=&quot;https://www.alfredapp.com/powerpack/&quot;&gt;Powerpack&lt;/a&gt; for custom themes.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;preview&quot;&gt;Preview&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/alfred-nord.jpg&quot; alt=&quot;alfred-nord-screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finally, thanks Alfred and &lt;a href=&quot;https://github.com/arcticicestudio&quot;&gt;Arctic Ice Studio&lt;/a&gt; (designer of Nord) for making such good tool and color scheme. And hope you enjoy Alfred Nord.&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
        <link>https://crispgm.com/page/alfred-nord.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/alfred-nord.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>2019年度生活方式总结</title>
        <description>&lt;p&gt;2018年我进行了第一次&lt;a href=&quot;/page/2018-lifestyle-summary.html&quot;&gt;年度个人盘点&lt;/a&gt;，虽然涉及的内容不多，只有软硬件类，但现在回看还比较有意义，可以知道每年自己大体的状态和思路。因此，今年我要进行一个更加广泛的个人生活方式总结。&lt;/p&gt;

&lt;h2 id=&quot;硬件&quot;&gt;硬件&lt;/h2&gt;

&lt;h3 id=&quot;加湿器&quot;&gt;加湿器&lt;/h3&gt;

&lt;p&gt;冬天天气太干燥了，于是在家里卧室和工位桌面均配置了加湿器。加湿器其实原理上并没有多少壁垒，飞利浦在加湿器除菌方面网络口碑不错，国外产品的造型（仅限HU5930）和品质感也比较好。&lt;/p&gt;

&lt;p&gt;家里是HU5930。这款产品体积和容量都比较大，适合家里房间使用。有专门的水箱，灌水十分方便。而且造型比较美观，跟极简风格比较搭。家中其实没有那么干燥，主要用来再夜间给卧室加湿，减少早上鼻子的不适感。&lt;/p&gt;

&lt;p&gt;工位是HU4801。这款图片看着不大，实际放办公桌上其实有些偏大，如果是小房间用这个也足够了。&lt;/p&gt;

&lt;h3 id=&quot;蒸汽清洁机&quot;&gt;蒸汽清洁机&lt;/h3&gt;

&lt;p&gt;看 YouTube 上汽车 detailing（此处不是“细节”的意思，应该翻译成汽车清洁）视频，印象最深刻的工具就是沙发清洁机和蒸汽清洁机。前者有个强力吸头，可以直接在沙发或者地毯上涂抹泡沫，然后吸干。或者则是高压蒸汽，清洁一些难以去除的污渍。&lt;/p&gt;

&lt;p&gt;家里没有什么地毯和沙发需要清理，但对于蒸汽清洁机还是有需求的。于是购入了 Karcher 高温蒸汽清洁机，清洁面包机、电饭锅、灶台效果都超好，对于各种细缝能直接把灰尘、颗粒“喷”出来。&lt;/p&gt;

&lt;h1 id=&quot;软件和服务&quot;&gt;软件和服务&lt;/h1&gt;

&lt;p&gt;今年对于手机上的 app 以及服务，几乎没什么动作，原来用什么现在还在用。主要变化在于对于开发工具的尝试和改善。以往就对开发工具非常感兴趣，今年算是大面积革新了自己的工具链。&lt;/p&gt;

&lt;h3 id=&quot;nord&quot;&gt;Nord&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.nordtheme.com/&quot;&gt;Nord&lt;/a&gt; 是一套配色主题。&lt;/p&gt;

&lt;p&gt;原先在开发工具上尝试过若干配色主题，从 Sublime Text 默认的 Monokai，到 vim 上的 Zarniwoop，还有后来比较喜欢的 Tomorrow Night 系列等。&lt;/p&gt;

&lt;p&gt;对于这些主题都是混用不成体系，而今年把所有能换主题的东西基本都统一成了 Nord：iTerm2、Sublime Text、Visual Studio Code、vim 等，甚至是 Arch Linux 上的主题等。&lt;/p&gt;

&lt;p&gt;同时，我自己也移植制作了 &lt;a href=&quot;https://github.com/crispgm/alfred-nord&quot;&gt;Alfred Nord&lt;/a&gt; 主题。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/alfred-nord-screenshot.jpg&quot; alt=&quot;Alfred Nord Screenshot&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;vscode&quot;&gt;VSCode&lt;/h3&gt;

&lt;p&gt;全称 Visual Studio Code，不是传统的 Visual Studio IDE，而是一款基于微软开源技术的编辑器，在广大开发者心中或许已经成为了最佳图形化编辑器。&lt;/p&gt;

&lt;p&gt;Nadella 上台后，微软推出了很多开源的东西，甚至拥抱了 Linux 社区。虽然 Windows 由于体验问题并不太容易撼动 macOS 在开发者心中的地位，但这些开发者友好的做法的确收获了不少开发者的青睐。&lt;/p&gt;

&lt;p&gt;他成功证实了微软没有必要与开源开发者“为敌”，更应该做的是融入其中。而 VSCode 就是微软在融入开源社区后的最佳成果，也展现了微软多年的软件功力。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/vscode-go-screenshot.png&quot; alt=&quot;VSCode Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;VSCode 有着丰富的基础功能和配置，允许开发者自己定制，并且有强大的插件系统和生态。采用社区中最流行的 TypeScript 和 Electron 技术开发，减少了代码贡献者和插件开发者的熟悉成本和壁垒。&lt;/p&gt;

&lt;h3 id=&quot;command-line&quot;&gt;Command Line&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;git&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;git 很强大，强大到一般人可能只会 clone 然后 add、commit、push 三连。遇到问题后，可能只会祭出把文件备份走再 clone 回来接着干的粗暴方式。&lt;/p&gt;

&lt;p&gt;就像新手入门 vim，只会用 i 进入编辑模式一顿狂改，然后 wq 退出。只发挥了工具1%的能力，其它什么也不会的感觉。&lt;/p&gt;

&lt;p&gt;由于在 GitHub 和 GitLab 不断积累的一些操作经验，慢慢开始娴熟掌握了各种复杂的技能，比如 rebase、reset、cherry-pick 等。并且，通过一些网络资料以及《精通 Git》，掌握了一些真正的原理和高级用法。&lt;/p&gt;

&lt;p&gt;我第一次稍微有种，我能基本掌控 git 的感觉。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;neovim&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;今年从 vim 迁移到 neovim。其实对于我来说 vim 和 neovim 用起来没多大区别，更多的是稍微更认同一些 neovim 的社区模式，以及更丰富的插件生态。&lt;/p&gt;

&lt;p&gt;一如既往，我不是 vim 的铁杆，只用 vim 做简单的编辑/修改操作。但既然用了，配置的也得舒服好用，这是我的配置：&lt;a href=&quot;https://github.com/crispgm/dotfiles/tree/master/neovim&quot;&gt;crispgm/dotfiles - neovim&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Modern CLI Tools&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;近年来涌现出一系列用户体验好、功能强大的现代（Modern）命令行工具，包括但不仅限于：fzf, ripgrep, fd 等。这些工具大多用新语言编写（Rust 或 Go），同时兼顾性能、UI 和用户体验。&lt;/p&gt;

&lt;p&gt;同时，通过简化参数，降低了入门成本。默认参数或者几个简单参数就可以实现 GNU 那些“古董”工具们一大堆参数才能实现的功能。&lt;/p&gt;

&lt;h3 id=&quot;reddit&quot;&gt;Reddit&lt;/h3&gt;

&lt;p&gt;Reddit 就是美国的贴吧。比起贴吧，他内容更科技，小众内容更加丰富有深度。&lt;/p&gt;

&lt;p&gt;关注了一些关于极简主义 &lt;a href=&quot;https://www.reddit.com/r/minimalism&quot;&gt;/r/minimalism&lt;/a&gt; 和冥想 &lt;a href=&quot;https://www.reddit.com/r/meditation&quot;&gt;/r/meditation&lt;/a&gt; 的内容，以及比较感兴趣的技术类 &lt;a href=&quot;https://www.reddit.com/r/unixporn、&quot;&gt;/r/unixporn、&lt;/a&gt;、&lt;a href=&quot;https://www.reddit.com/r/neovim&quot;&gt;/r/neovim&lt;/a&gt;、&lt;a href=&quot;https://www.reddit.com/r/archlinux&quot;&gt;/r/archlinux&lt;/a&gt; 什么的。不过最长见识的，大概是机械键盘 &lt;a href=&quot;https://www.reddit.com/r/MechanicalKeyboards&quot;&gt;/r/MechanicalKeyboards&lt;/a&gt;，各种各样尺寸和配色的 DIY 键盘，实在太丰富了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/reddit-mechanical-keyboard.png&quot; alt=&quot;Mechanical Keyboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最后，感叹一下，中国的贴吧已经被百度失败的运营和内容审查弄得大不如前。看着它一步一步难用到现在这个样子，令人惋惜。&lt;/p&gt;

&lt;h3 id=&quot;arch-linux&quot;&gt;Arch Linux&lt;/h3&gt;

&lt;p&gt;我本来沉浸于 macOS 优秀的开发和日常体验中很久了，但受到 Reddit 上内容的“引诱”，我开始对 Arch Linux 十分好奇。&lt;/p&gt;

&lt;p&gt;众所周知，这类贴吧类网站总会有很多宝藏，但找不找得到还是很靠缘分的。而我的缘分来自 Reddit 的上的 &lt;a href=&quot;https://www.reddit.com/r/unixporn/&quot;&gt;/r/unixporn&lt;/a&gt;，最开始只是为了看看 vim 的配置而关注，但实际看到的是各种 Unix/Linux 桌面配置。与以往对 Ubuntu 那种橙色 UI 印象不同的是，在这里分享的都是很个性很漂亮的搭配，简直令我着迷。&lt;/p&gt;

&lt;p&gt;后来知道，这种行为叫做 RICE。而他们往往使用 Arch Linux 作为操作系统的选择，配合上 i3、i3-gaps、bspwm 等 tiling window manager 进行构建。分享时大多会用 neofetch/pfetch 显示下系统信息，有时也会运行一个“黑客帝国”工具。&lt;/p&gt;

&lt;p&gt;从上面的 git 和 vim 等工具就可以看出，我今年很爱折腾命令行工具。于是一拍即合开始折腾，买了一块新的SSD专门折腾 Linux，顺利的搭配出一版：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rice-screenshot.jpg&quot; alt=&quot;Arch Linux&quot; /&gt;&lt;/p&gt;

&lt;p&gt;入坑后，我也写了一篇总结性博文——&lt;a href=&quot;/page/the-fascinating-arch-linux-rice.html&quot;&gt;The Fascinating Arch Linux RICE&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;firefox&quot;&gt;Firefox&lt;/h3&gt;

&lt;p&gt;大概从前二、三年开始，美国互联网舆论（基本代表了美国左派）就开始攻击 Facebook，而 Facebook 自己也不争气，爆出各种侵犯隐私的事情。而本来就是白左大本营的 Google，也因为广告的商业模式侵犯用户隐私而备受质疑。很多“意见领袖”（比如 DHH）带头删除 Facebook、Uber 等 app，将 Google 替换成 DuckDuckGo。&lt;/p&gt;

&lt;p&gt;而在浏览器行业，Chrome 也不可避免的中枪了。恰逢此时，Firefox 打起了隐私浏览器的旗号，成为了正确的浏览器。而我也难以免俗，在 Arch Linux 下不再使用 Chrome，在 macOS 上也减少 Chrome 的使用，把非工作内容浏览器换成了 Firefox。&lt;/p&gt;

&lt;p&gt;不过，对于中国这个互联网相关法律不健全、基本完全不尊重个人隐私的国度，Google 的产品其实已经还不错了。因此，我们没有必要大规模弃用。&lt;/p&gt;

&lt;h1 id=&quot;读书&quot;&gt;读书&lt;/h1&gt;

&lt;p&gt;今年看得书数量不少但内容比较杂，以至于到了年底有些不知道都看了些什么。综合来说，以后对于书的门类选择要更加专注，尤其不要乱尝试看一些历史类的书。一般人觉得好看的往往是历史演义或小说，很多真正的历史类书籍，可能真的就是流水账，或者是枯燥的记录，需要根据个人情况选择。&lt;/p&gt;

&lt;h3 id=&quot;精通-git&quot;&gt;精通 Git&lt;/h3&gt;

&lt;p&gt;前面提到的书，英文版叫 Pro Git。&lt;/p&gt;

&lt;h3 id=&quot;司马辽太郎之日本战国四部曲&quot;&gt;司马辽太郎之日本战国四部曲&lt;/h3&gt;

&lt;p&gt;虽说整体比较杂，但司马辽太郎这几本由于是按照 bundle 购入，所以主题还是比较明确的。分别是（按照阅读顺序）：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;《新史太阁记》&lt;/li&gt;
  &lt;li&gt;《国盗物语：斋藤道三》&lt;/li&gt;
  &lt;li&gt;《国盗物语：织田信长》&lt;/li&gt;
  &lt;li&gt;《城塞》&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这四部传记分别讲述了（按时间顺序）打破旧规、谋国成功从而掀起战国帷幕的斋藤道三；不循规蹈矩从而初成霸业，后于本能寺之变被明智光秀袭击身先死的织田信长；出身卑微善于揣摩领导得到织田信长赏识，之后为织田信长“复仇”后位极人臣的丰臣秀吉；和稳重、老谋深算、寿命长？，后来击败丰臣秀吉的儿子，最终夺取天下的德川家康。&lt;/p&gt;

&lt;p&gt;在历史中，德川家康无疑是“胜利者”，从此进入了德川幕府的时代一直到明治维新。但对于司马辽太郎本人，德川家康却是这几人中他最为讨厌的。&lt;/p&gt;

&lt;p&gt;看完了这几本书，基本弄清楚了日本战国时期的大概脉络。也促成了后来日本旅游时，专门探访了战国主战场之一的岐阜稻叶山城。&lt;/p&gt;

&lt;h1 id=&quot;影音动漫&quot;&gt;影音/动漫&lt;/h1&gt;

&lt;h3 id=&quot;铳梦&quot;&gt;铳梦&lt;/h3&gt;

&lt;p&gt;成年后第一次看漫画。偶然在飞机上看了电影《阿丽塔》的前部分，发现居然是 Cyber Punk 风格，于是对内容发展很有兴趣。搜索后得知是源自漫画《铳梦》，一部 Cyber Punk 风格的漫画。&lt;/p&gt;

&lt;p&gt;《铳梦》画风和趣味性都不错，情节节奏比较快不冗长。最吸引我的当然是 Cyber Punk 的背景设定，跟《&lt;a href=&quot;https://zhuanlan.zhihu.com/p/44622519&quot;&gt;「赛博朋克2077」的公司多恐怖？竟能动员百万军队&lt;/a&gt;》中介绍的十分一致。&lt;/p&gt;

&lt;p&gt;Cyber Punk 是反乌托邦的，我对于 Cyber Punk 中的“丛林法则”既不推崇也不向往。不过对于其中的生物机械学、半机械人（cyborg）以及其它各类未来科技非常感兴趣。&lt;/p&gt;

&lt;h1 id=&quot;爱好&quot;&gt;爱好&lt;/h1&gt;
&lt;h3 id=&quot;清洁&quot;&gt;清洁🧹&lt;/h3&gt;

&lt;p&gt;把本来肮脏、杂乱的东西，清理干净，摆放整齐，是一种激励感和成就感很充足的事情。&lt;/p&gt;

&lt;p&gt;买了扫地机器人、MUJI 清扫套装、蒸汽清洁机等工具，熟练掌握了灶台、水槽和马桶的清洁技术。&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Dec 2019 00:00:00 +0000</pubDate>
        <link>https://crispgm.com/page/2019-lifestyle-summary.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/2019-lifestyle-summary.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>The Fascinating Arch Linux RICE</title>
        <description>&lt;p&gt;Recently, I dive into Linux the third time. The first time is in my childhood, I was attracted by the magazines, which introduced me the hacker culture. The second time was weird, I wanted to focus on study instead of PC gaming.&lt;/p&gt;

&lt;p&gt;This time, it’s totally different. &lt;a href=&quot;https://www.reddit.com/r/unixporn/&quot;&gt;/r/unixporn&lt;/a&gt; and &lt;a href=&quot;https://www.reddit.com/r/MechanicalKeyboards&quot;&gt;/r/MechanicalKeyboards&lt;/a&gt; attracted me. The most fascinating part of that is RICE or RICE culture.&lt;/p&gt;

&lt;h2 id=&quot;rice&quot;&gt;RICE&lt;/h2&gt;

&lt;p&gt;RICE is not the food rice. Instead, it is the acronym of Race Inspired Cosmetic Enhancements. Let me look up in the dictionary:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Parts put on cars to make them look fast, when they have no internal tuning, and are actually slow as hell. &lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The definition is quite funny. It is exact the same behavior as we make a great UI for dev and feel as if we get better efficiency.&lt;/p&gt;

&lt;p&gt;Just as I remember, my first deep experience on RICE is in the MMORPG game – World of Warcraft. WoW is an epic Blizzard game, with great storyline and gaming experience.&lt;/p&gt;

&lt;p&gt;Another fascinating part of WoW is the customizable user interface. For WoW, it provides a simple UI, even lacking of basic functions on quests, timers and so on. But its APIs are full pledged. Developers make lots of WoW plugins. And gamers composite the plugins into their own user interface. It’s a typical RICE art and I like to watch FD (first down) videos because of their great UI in different styles. And I spent a lot of time compositing my own one.&lt;/p&gt;

&lt;p&gt;My WoW Interfaces:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rice-wow-interface1.jpg&quot; alt=&quot;my-wow-interface-1&quot; /&gt;
&lt;img src=&quot;https://crispgm.com/image/rice-wow-interface2.jpg&quot; alt=&quot;my-wow-interface-2&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;linux-rice&quot;&gt;Linux RICE&lt;/h2&gt;

&lt;p&gt;Mac/macOS are great hardware and software. But Apple seems never really create the soil for RICE. Apple’s idea is to create great product where hardware and software are seamless and easy to use for normal users. RICE has nothing to do with easy to use by its definition. And macOS has long time been an authority software and closed ecosystem, so that we can hardly make deep customization into system core.&lt;/p&gt;

&lt;p&gt;And it’s similar to Windows. RICE should only be great in the Linux world.&lt;/p&gt;

&lt;p&gt;Try Ubuntu?&lt;/p&gt;

&lt;p&gt;Ubuntu may be the most popular Linux distribution. I was once an Ubuntu user. It is a great distribution, which is maybe the first beginner-friendly Linux distribution. It is a success to get big population within developers and is pre-installed on some cheaper PCs.&lt;/p&gt;

&lt;p&gt;But to some extent, it is a failure. For developers, they may use Linux a lot but they may not actually use a Linux desktop. Most of them live in Terminal or even access Linux remotely with SSH from either Windows or macOS. The basic setup of IT companies is MacBook with real or virtual Linux box. The desktop is just not friendly enough. For others, it is simply hard to find Linux either user-friendly or productive. e.g. The &lt;a href=&quot;https://www.techrepublic.com/article/linux-to-windows-10-why-did-munich-switch-and-why-does-it-matter/&quot;&gt;LiMux Project&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For Unix/Linux RICE, I found ArchLinux and i3 are their major choices on operating system, though Ubuntu sometimes be mentioned.&lt;/p&gt;

&lt;h3 id=&quot;arch-linux&quot;&gt;Arch Linux&lt;/h3&gt;

&lt;p&gt;When I was an early Linux enthusiastic, I heard about these main distros. e.g. Redhat/Fedora, Debian, SUES, Slackware, Ubuntu, Gentoo, and also Arch.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.archlinux.org/&quot;&gt;Arch Linux&lt;/a&gt; has the best home page (IMO) and wiki of Linux distros in the world. The color scheme of its home page win at its beginning.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rice-arch-linux-org.png&quot; alt=&quot;arch-linux-org&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Arch Linux chooses blue as major color, which is vivid and shows the sense of technology. I kept on copying the color scheme when I was building my own home page. Even though today, I still feel it is a good color scheme.&lt;/p&gt;

&lt;p&gt;Let’s head to Arch Linux’s philosophy. I have no idea of these minimal style distros since you can hardly handle shell/terminal from the beginning. But as soon as I get &lt;em&gt;solid&lt;/em&gt; skills on that, I appreciate its idea: &lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Simplicity, minimalism, and code elegance&lt;/li&gt;
  &lt;li&gt;Installed as a minimal base system, configured by the user upon which their own ideal environment is assembled by installing only what is required or desired for their unique purposes.&lt;/li&gt;
  &lt;li&gt;Pacman package manager&lt;/li&gt;
  &lt;li&gt;Rolling-release upgrades model&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As soon as I read Arch’s philosophy, I know that the second point is the most important reason why it is popular in RICE culture. And Pacman makes it even easier and powerful.&lt;/p&gt;

&lt;p&gt;It is somehow like Gentoo Linux but seems to be a lot easier, because the Gentoo packages and base system are built directly from source code but Arch tends to make user build packages quicker.&lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;And finally, it is like you make your own system and are responsible for yourself. You choose what you need and configure as you like based on what you can do. No surprise, no weird parts, so it is totally in control.&lt;/p&gt;

&lt;p&gt;The Arch Linux Wiki is so good that I can easily follow the &lt;a href=&quot;https://wiki.archlinux.org/index.php/Installation_guide&quot;&gt;Installation guide&lt;/a&gt; and it is done.&lt;/p&gt;

&lt;p&gt;It is super easy to install packages with Pacman. Everything is there and Arch also has a repository (ArchLinux User Repository) for user packages. For example, it is like a non-GUI operating system and we need some more to setup a GUI system.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Login Manager&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pacman &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; lightdm lightdm-gtk-greeter
&lt;span class=&quot;c&quot;&gt;# X Window&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pacman &lt;span class=&quot;nt&quot;&gt;-S&lt;/span&gt; xorg-server xorg-apps xorg-xinit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;i3&quot;&gt;i3&lt;/h3&gt;

&lt;p&gt;i3 is a popular tiling window manager. Tiling window manager? It’s a kind of window manager, where all windows lay on the desktop like tiles or panes, and you just do not move windows by dragging title panel. Instead, it’s controlled by keys. You can easily move around and resize the windows.&lt;/p&gt;

&lt;p&gt;i3-gaps is an i3 fork, which is almost the same and adds more features such as gaps between windows, that’s why it is called i3-gaps.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo pacman -S i3-gaps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After installing X Window and i3-gaps, I got an empty desktop while I can open a terminal with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mod+Enter&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;alacritty&quot;&gt;Alacritty&lt;/h3&gt;

&lt;p&gt;To work with tiling window manager, we need a minimal style terminal. It may not provide either multi-tabs support or multi-panes support.&lt;/p&gt;

&lt;p&gt;urxvt, kitty, and st are common picks. I tried urxvt, which is actually rxvt-unicode, but I have problems with Asian language displays.&lt;/p&gt;

&lt;p&gt;Then I found that &lt;a href=&quot;https://github.com/jwilm/alacritty&quot;&gt;Alacritty&lt;/a&gt; is the right one for me. It is high-performance, GPU powered and easy configuration.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo pacman -S alacritty
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rice-alacritty.png&quot; alt=&quot;alacritty&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;i3wm-themer&quot;&gt;i3wm-themer&lt;/h3&gt;

&lt;p&gt;For i3 starters, &lt;a href=&quot;https://github.com/unix121/i3wm-themer&quot;&gt;i3wm-themer&lt;/a&gt; should be mentioned. It is a CLI tool setups simple and minimalistic desktop themes for you. It is best for newcomers to setup a basic theme and have a panoramic and basic concepts on what composite a capable desktop.&lt;/p&gt;

&lt;p&gt;i3wm-themer integrates i3-gaps, Polybar, Nitrogen, Rofi, rxvt-unicode, various fonts and others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Polybar&lt;/strong&gt; is to help users create awesome status bars. It provides a collection of modules. e.g. Text label, sound volume, Wi-Fi status, date &amp;amp; time, and etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rofi&lt;/strong&gt; is an application launcher, a replacement of dmenu. dmenu is the default one for X but Rofi seems to be more popular. And there are also Alfred-like application launchers, but for most scenario, Rofi is enough.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nitrogen&lt;/strong&gt; is basically a background setter.&lt;/p&gt;

&lt;p&gt;And as aforementioned, I replace rxvt-unicode with Alacritty.&lt;/p&gt;

&lt;p&gt;Based on i3wm-themer, I have finally done my first Arch Linux RICE. All configuration files of those parts are stored under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$XDG_CONFIG_HOME&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/rice-screenshot.jpg&quot; alt=&quot;screenshot&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;other-applications&quot;&gt;Other Applications&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Ranger&lt;/strong&gt; is a file manager and previewer with terminal interface, and navigation is similar to Vim key bindings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;vimiv&lt;/strong&gt; may not be a well-known software but it worth a try. There are a variety choices of image viewers and managers. vimiv is a Ranger but for images. It is fast and works with GIF animations. A vim-style image manager is so minimalistic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Firefox&lt;/strong&gt; is a well-known browser. It is real free software and does not compromise on privacy, comparing to Google. That’s the reason why I did not choose Chrome or Chromium.&lt;/p&gt;

&lt;h3 id=&quot;obstacles&quot;&gt;Obstacles&lt;/h3&gt;

&lt;p&gt;RICE on Arch Linux and maybe just Linux could be interesting but it also has obstacles. There are common parts, however, every component actually follows its own choice. e.g.:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bash or Zsh uses dot rc files&lt;/li&gt;
  &lt;li&gt;Most modern softwares use XDG directories&lt;/li&gt;
  &lt;li&gt;GUI apperances are configured under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.Xresources&lt;/code&gt; or using GTK (or Qt) themes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And to make things much more difficult, they have their own file specifications.&lt;/p&gt;

&lt;p&gt;I have to write Shell Script, JSON, XML, YAML, INI, and other private configuration codes.&lt;/p&gt;

&lt;p&gt;For tools like Vim, it’s actually Vim Language and we have to learn a lot to make it powerful together with plugins. Luckily, Vim configuration is another topic that I have already handled before.&lt;/p&gt;

&lt;p&gt;That’s the cost of freedom. We as users have the freedom to choose everything and software programmers also have.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I think RICE is the art of building things special for personal use and habits, and with our own tastes and personalities. I know that not everyone is interested or has the passion on RICE. Once I dived into that, I have had a lot of happiness.&lt;/p&gt;

&lt;p&gt;My Arch Linux dotfiles: &lt;a href=&quot;https://github.com/crispgm/arch-linux-dotfiles&quot;&gt;https://github.com/crispgm/arch-linux-dotfiles&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.urbandictionary.com/define.php?term=rice&amp;amp;defid=955541&quot;&gt;Urban Dictionary: rice&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.archlinux.org/about/&quot;&gt;https://www.archlinux.org/about/&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/Arch_compared_to_other_distributions#Gentoo/Funtoo_Linux&quot;&gt;Arch compared to other distributions&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate>
        <link>https://crispgm.com/page/the-fascinating-arch-linux-rice.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/the-fascinating-arch-linux-rice.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>福冈之旅——乃木坂46演唱会（下）</title>
        <description>&lt;p&gt;接上一篇：&lt;a href=&quot;/page/nogizaka-46-fukuoka-1.html&quot;&gt;福冈之旅——乃木坂演唱会（上）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;完成了激动人心的取票活动后，从博多站徒步前往 Airbnb。我的一大爱好就是国外旅游时散步溜达，虽说时常会导致特别累。&lt;/p&gt;

&lt;h3 id=&quot;入住&quot;&gt;入住&lt;/h3&gt;

&lt;p&gt;住宿订的 Airbnb，但日本现在实行了专门的民宿法规，民宿本身都是有资质的，并且住宿者也要提交个人信息。由此以来，日本的真正民宿都没了，取而代之的是近似旅店体验的民宿。这种民宿可以抽象为没有接待人员并且不是每天都打扫房间的旅馆。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-fukuoka-airbnb.jpg&quot; alt=&quot;Airbnb Room&quot; style=&quot;height: 480px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;或许这也是 Airbnb 生意做大后的本质，宣扬的与当地人分享体验的场景越来越少，只是提供了更便宜的住宿。&lt;/p&gt;

&lt;h3 id=&quot;踩场&quot;&gt;踩场&lt;/h3&gt;

&lt;p&gt;把东西放下后，我就拿着轻便背包装着相机前往 Live 的会场。去便利店一“激动”，给 Suica 充值了5000日元，后来想想也不错，坐车再也不担心没钱了。顺带说一句，如果在日本用现金坐公交的话，需要在上车时在一个诡异高度的位置拿张券以记录你是在哪站上车的，之后凭这个在司机处“结账”。&lt;/p&gt;

&lt;p&gt;演出的场地叫 Yafuoku!，也就是 Yahoo! 和 Fukuoka 的结合体。Yafuoku! 是一个专业棒球场，福冈本地职棒球队软银鹰的主场，也是日本几大巨蛋中的一个。&lt;/p&gt;

&lt;p&gt;这个球场顶部有可以活动的穹顶。天气好时可以作为露天球场使用，天气不好或者夜间则会关闭。&lt;/p&gt;

&lt;p&gt;Yafuoku! 棒球场的情况跟梅赛德斯·奔驰中心以及五棵松之类其实差不多，地点都稍有些偏于是单独配备了购物中心——MARK IS。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-fukuoka-mark-is.jpg&quot; alt=&quot;MARK IS&quot; /&gt;&lt;/p&gt;

&lt;p&gt;球场前面旗杆上都挂了乃木坂46的旗帜。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-fukuoka-dome.jpg&quot; alt=&quot;Fukuoka Dome&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-truck.jpg&quot; alt=&quot;Nogizaka Truck&quot; /&gt;&lt;/p&gt;

&lt;p&gt;提前前来的主要原因就是为了排队买场贩——购买应援物品，据说当天后排队排成狗，所以必须提前买好。&lt;/p&gt;

&lt;p&gt;提前来排场贩的人不多，但由于大家都是聚聚，每个人都买好几件，所以推进速度十分慢。我补充了一根应援荧光棒和推巾两条，购买之后还赠送了一次抽奖，我抽到了梅泽美波的徽章。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-towels.jpg&quot; alt=&quot;Nogizaka Towels&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-badge.jpg&quot; alt=&quot;Nogizaka Badge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;球场对面是个希尔顿酒店，应该有无敌海景。中间有些艺术品，叫什么忘记了和很多猫。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-fukuoka-hands.jpg&quot; alt=&quot;Sculpted hands&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-fukuoka-cat.jpg&quot; alt=&quot;Cat&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;中洲&quot;&gt;中洲&lt;/h3&gt;

&lt;p&gt;场贩买好之后，基本就到了吃饭时间。这次我还要继续尝试和牛铁板烧，找到一家位于中洲的铁板烧店——miyachiku，宫崎牛专营店。Google Maps 上看评分高达4.6。&lt;/p&gt;

&lt;p&gt;服务员很职业精通英语，服务非常好。厨师遇到一个可爱妹子，会说跟做的菜相关的英语，但沟通了几句应该不太会其它英语。&lt;/p&gt;

&lt;p&gt;这是我的宫崎牛肉和虾：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-fukuoka-beef.jpg&quot; alt=&quot;Beef&quot; /&gt;&lt;/p&gt;

&lt;p&gt;吃完饭就在中洲这个地方走动一下。中洲是一块江心洲，位于那珂河口区域，跟福冈市中心天神地区连在一起。&lt;/p&gt;

&lt;p&gt;据说中洲有屋台（Yatai）小吃，但可能下雨或者走错路并没有遇到。反而发现，中洲的南部一大片都是红灯区，至少有个三条街。路上搜索了一番，说福冈是日本性都什么的。&lt;/p&gt;

&lt;p&gt;根据对门口的店面观察，首先就是都叫各种无料案内，据说是免费资料的意思。还有就是各种写着摄影什么的，心想PC还是算了，但要是有这种摄影活动还真有些想参加。最后就是，这些店铺好像很多都是走细分垂类路线，看起来很有趣。&lt;/p&gt;

&lt;p&gt;说起来上次来的时候光顾的运河城，就在这片区域的河对岸，当时丝毫没有察觉到。&lt;/p&gt;

&lt;h3 id=&quot;天神&quot;&gt;天神&lt;/h3&gt;

&lt;p&gt;第一天福冈只是阴天，而第二天开始可以说是糟糕的天气了。由于在韩国有台风，福冈开始持续下雨，甚至乃木坂46官方都发了通告，表示暂时演唱会不取消观察天气情况而定。赶紧下载了「Yahoo! 防災情報」预警 App，似乎情况还好。&lt;/p&gt;

&lt;p&gt;这雨并没有很大，而是像梅雨一样断断续续，虽没有那么闷热，但身上总之是潮潮的。&lt;/p&gt;

&lt;p&gt;考虑到天气和体力，本来有些想去的能古岛也就取消了，改成去天神闲逛。&lt;/p&gt;

&lt;p&gt;天神是个现代化的市中心，有很多综合性百货商场适合购物。&lt;/p&gt;

&lt;p&gt;比较有意思的是，夏季大雨天的，天神附近的小公园居然在组织 Oktoberfest。由于阴雨天气，摊位比较冷清。&lt;/p&gt;

&lt;p&gt;午饭在天神附近的一兰拉面，由于我并不追捧「网红店」，因此其实也并没有很想去，但看到没人刚好想吃拉面排队就吃了。虽然在东京和大阪都吃过，但福冈的一兰拉面值得一去。一兰的总店就设于福冈，这里的店使用方碗，说是只有九州限定店才有。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-fukuoka-ichiran.jpg&quot; alt=&quot;Ichiran Ramen&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;演唱会&quot;&gt;演唱会&lt;/h3&gt;

&lt;p&gt;由于不是演唱会 repo 贴，就不太细说内容，只列一下感受和见闻。&lt;/p&gt;

&lt;p&gt;首先博多市内、地铁、公交车，几乎随时都能碰到披着推巾或者穿乃木坂应援衣服的人。头一天坐公交去现场公交车在天神后是空的，演唱会当天爆满，天神后几乎全是看演唱会的人。&lt;/p&gt;

&lt;p&gt;到了现场之后，公交和地铁下来的人汇成人流前往 Yafuoku! 棒球场。一下车雨开始下大了，我于是在 MARK IS 买了此次旅行的第二把雨伞。&lt;/p&gt;

&lt;p&gt;场外可以看到很多女饭。比如JK妹子，很多应该都是中学生；穿乃木坂46 T恤的特别多，简直有些后悔自己前一天没买一件；再就是我发现有不少妹子穿「Sing Out!」那种紫色长裙。推斋藤飞鸟的特别多！&lt;/p&gt;

&lt;p&gt;入场非常比较轻松，进到场内就有工作人员不断举牌提醒不要录音、摄像和使用手机，还没开场手机就不让用了。&lt;/p&gt;

&lt;p&gt;我附近有几个安静肥宅，左边、正前、左前都是这种，并且左前因为体积过大都挤到隔壁较瘦的肥宅了。&lt;/p&gt;

&lt;p&gt;开场前，居然几乎没有人喊「俺の嫁」。&lt;/p&gt;

&lt;p&gt;一开场，全场观众集体起立，这个在乃木坂46上海公演已经见识过了。Overture 由于 call 声及其回声太大，我甚至听不清 Overture 的音乐部分。但附近的肥宅只看演唱会没有声音，左边那位全程望远镜看大屏幕，可见我位置的悲惨。&lt;/p&gt;

&lt;p&gt;说起位置，这次位置有三点非常坑：首先是音响布局或者朝向对这边不太好，导致这个区域听不到部分音响的声音，导致我这边听见的不是完整的合声，类似单声道的感觉，不太熟悉的歌几乎听不出调；其次是因为角度不好看屏幕非常别扭，毕竟离这远看不到偶像可以理解，但看屏幕也费劲就比较悲剧了；正对面有个大功率射灯，如果在主舞台时就会开启，虽然不会直射，但也很晃眼。&lt;/p&gt;

&lt;p&gt;在上面的感想贴中找到一张图片，我就是在这个位置进入口的右侧第二排第二格。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-live-twitter.jpg&quot; alt=&quot;Live Twitter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;回到 LIVE 本身，开场起手首先是燃曲6连：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;インフルエンサー&lt;/li&gt;
  &lt;li&gt;命は美しい&lt;/li&gt;
  &lt;li&gt;何度目の青空か？&lt;/li&gt;
  &lt;li&gt;太陽ノック&lt;/li&gt;
  &lt;li&gt;ガールズルール&lt;/li&gt;
  &lt;li&gt;夏のFree&amp;amp;Easy&lt;/li&gt;
  &lt;li&gt;裸足でSummer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;看歌曲和顺序，曲目跟名古屋场应该一样。至于站位什么的，我只能说我看不清，都是后来参照：&lt;a href=&quot;https://lyfe8.com/nogi720fd/&quot;&gt;乃木坂46 夏コン 福岡 ライブ2019 セトリ・感想【7/20】｜Lyfe8&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;中间三四期生纷纷上台跳了专门的曲目：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;三番目の風&lt;/li&gt;
  &lt;li&gt;4番目の光&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;由于大园桃子没来，福冈本地人与田祐希当了「三番目の風」的 Center。&lt;/p&gt;

&lt;p&gt;后面是一些 Unit 曲，我对乃木坂46的 Unit 曲历来不熟。就记得嫂子（秋元真夏）跳了「魚たちのLOVE SONG」，穿得鱼形打歌服比较搞笑。之后还让观众喊 Mizuki Kawaii 和 Ayame Kawaii。&lt;/p&gt;

&lt;p&gt;后面一大段是熟悉的团队曲，包括最新的23单。「おいでシャンプー」的CALL的确很神，这次LIVE彻底学会了“挥棒姿势”，不过中间的花奈CALL，还是回来看了&lt;a href=&quot;https://www.bilibili.com/video/av44884727&quot;&gt;四期生妹子的演示&lt;/a&gt;才会的。23th 新单曲目「滑走路」会提示器带观众一起切按顺序荧光棒颜色，「Sing Out!」不需要喊，但集体跟着节奏拍手反而觉得很有感染力。&lt;/p&gt;

&lt;p&gt;最后就是安可，持续时间比较短，很快就重新出来。前两首安可曲我都不太熟，最后是固定的「乃木坂の詩」。棒子全切紫色，不过这次发现后面副歌固定要跟唱。又要学一波新应援技能了，不得不感慨日本人搞东西门道就是多。&lt;/p&gt;

&lt;h3 id=&quot;下次再会&quot;&gt;下次再会&lt;/h3&gt;

&lt;p&gt;随着演唱会结束，福冈之旅也接近尾声，最后一日主要是进行代购和回城，就不多说了。&lt;/p&gt;

&lt;p&gt;下次再会既是给乃木坂46说的，也是给福冈说的。&lt;/p&gt;

&lt;p&gt;日本的演唱会气氛的确没得说，但这次演唱会位置比较悲剧，没有那么尽兴，10月末上海演唱会见。&lt;/p&gt;

&lt;p&gt;福冈是一个整洁美丽的地方，本身以及它所在的九州都值得继续探索。总之，下次再会。&lt;/p&gt;
</description>
        <pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate>
        <link>https://crispgm.com/page/nogizaka-46-fukuoka-2.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/nogizaka-46-fukuoka-2.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>福冈之旅——乃木坂46演唱会（上）</title>
        <description>&lt;h1 id=&quot;背景&quot;&gt;背景&lt;/h1&gt;

&lt;p&gt;一直以来，我一直是个爱好较多的“杂食”动物，歌曲类型也不例外，古典、电音什么的都想听。不过其中，最投入的当属偶像歌曲。&lt;/p&gt;

&lt;p&gt;本文与其说是游记，不如说是演唱会购票攻略及见闻。&lt;/p&gt;

&lt;h2 id=&quot;起因&quot;&gt;起因&lt;/h2&gt;

&lt;p&gt;年初，和椰椰子讨论了2019新年的一些计划，并没有什么大的计划，但我们决定每个人列一些小计划。正值看完2018年末（12月1日）的乃木坂46演唱会，现场的气氛让我难忘，心想我一定要去日本看一次乃木坂46；况且，有了三年多次签证，不偶尔来一次周末旅行好像体现不出其意义。因此，这成为了我的小计划中最大的一个。&lt;/p&gt;

&lt;p&gt;计划直到5月才开始真正推进，因为官方也是这时候才开始有比较明确的消息。首先，根据官方公布的演唱会日程，名古屋和大阪场都是周三和周四晚上，这样要请很多假，而福冈和东京都是在周末。经过一番调研，据说地方场往往不会非常爆满票比较好买，于是选定参加7月20日周六晚上的福冈场。&lt;/p&gt;

&lt;h2 id=&quot;购票&quot;&gt;购票&lt;/h2&gt;

&lt;p&gt;说起买票，对于国内来说，无非官网/大麦/永乐票务进行一波秒杀，秒不到去淘宝或者咸鱼黄牛。&lt;/p&gt;

&lt;p&gt;日本演唱会的买票可以说非常麻烦。这里我查阅和参考了很多个攻略，最后找到两篇参考意义较大的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://tokyo-mo.com/2018/03/%E6%95%99%E5%AD%B8-%E4%B9%83%E6%9C%A8%E5%9D%8246-%E6%BC%94%E5%94%B1%E6%9C%83%E6%8A%BD%E7%A5%A8-%E5%80%8B%E5%88%A5%E6%8F%A1%E6%89%8B%E6%9C%83%E6%8A%BD%E9%81%B8-%E5%85%A8%E5%9C%8B%E6%8F%A1%E6%89%8B/&quot;&gt;教學-乃木坂46-演唱會抽票-個別握手會抽選-全國握手&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yuyan-pace.com/nogizaka46-live-summer-nationwide-tour-2019-information/&quot;&gt;『真夏の全国ツアー2019』の日程は？先行・一般販売などチケット情報まとめ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;前者是台湾人写的攻略，简明的说清楚了适合外国人的买票攻略。后者是一个日本人写的“情报”汇总页面，总结了每一场相关的票务信息链接。得益于此，我才能把各类分散的内容梳理的比较清楚。&lt;/p&gt;

&lt;h3 id=&quot;渠道&quot;&gt;渠道&lt;/h3&gt;

&lt;p&gt;首先就是购票的渠道非常多还要分批次。最先是乃木坂46会员优先抽选，然后是购票网站会员优先抽选，最后才是普通买票，具体的分配数目不是很清楚。&lt;/p&gt;

&lt;p&gt;具体的渠道分为：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;乃木坂46手机会员先行抽选第一次&lt;/li&gt;
  &lt;li&gt;乃木坂46手机会员先行抽选第二次&lt;/li&gt;
  &lt;li&gt;票务网站会员先行抽选&lt;/li&gt;
  &lt;li&gt;票务网站普通贩售&lt;/li&gt;
  &lt;li&gt;官方二手&lt;/li&gt;
  &lt;li&gt;野生二手&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里的“票务网站”有 Rakuten、ePlus.jp、t.pia.jp、l-tike.com 等，除了国内相对熟悉的 Rakuten 是电商网站外，另外几个好像都是跟便利店相关联的。&lt;/p&gt;

&lt;h3 id=&quot;流程&quot;&gt;流程&lt;/h3&gt;

&lt;p&gt;购买流程相对简单：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;抽选或者购买&lt;/li&gt;
  &lt;li&gt;便利店支付，或者在线支付
    &lt;ul&gt;
      &lt;li&gt;唯一比较省心的事，票价统一9000日元（还有税等费用，总共接近10000日元），位置全凭人品&lt;/li&gt;
      &lt;li&gt;支付的话可以选择便利店支付，或者在线支付。便利店支付不在日本就不要考虑了，要抽选成功后几天内去便利店付好。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;邮寄，或者便利店自取
    &lt;ul&gt;
      &lt;li&gt;后者很适合外国人&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;阻碍&quot;&gt;阻碍&lt;/h3&gt;

&lt;p&gt;这么说完，看似也没有很复杂，对吧？这下开始说下坑点。&lt;/p&gt;

&lt;p&gt;简单的说，就是上面说的一堆渠道，对于外国人来说大多都不可行。乃木坂46会员注册要日本手机号，几个便利店大多也是这样，除此之外在线支付可能还需要日本信用卡之类，普通的 VISA/MasterCard 甚至 JCB 统统不行。而日本手机号，不是日本人几乎难以搞定或者成本很高。&lt;/p&gt;

&lt;p&gt;再就是，乃木坂46演唱会入场会全员检查身份证件，一般来说是住民票也就是身份证，无论一手还是二手票都必须买票人和证件匹配。买二手票，如果他多买了一张带你进去就好，或者把身份证借你入场都是可以的。否则，就不能进，除非自己”办假证“（毕竟只要名字一样就行）。办假证是因为检查十分简单，就看看名字是否和你出示的证件相同，并不是国内的身份证信息读取机。但我觉得这不太靠谱。&lt;/p&gt;

&lt;p&gt;本想求助在日本的同学 Rena，不料她在澳大利亚 WHV 已经停止了日本手机号。&lt;/p&gt;

&lt;p&gt;这样一来，剩下可以自行操作的唯一可行渠道是 Rakuten 普通买票。虽然也需要日本手机号和地址，但仅限于填写，没有实际作用。&lt;/p&gt;

&lt;h3 id=&quot;代购&quot;&gt;代购&lt;/h3&gt;

&lt;p&gt;前面说的证件，除了住民票外很多别的证件也是承认的，对于外国人来说，是可以用护照之类的。因此，现在的问题就剩下买票时能填写名字就行。t.pia.jp 是买票人信息和账号绑定的因此没戏，Rakuten/ePlus 等渠道都可以填写或者更换名字，于是可以用英文全角名购买，这样用护照进行验证是完全没问题的。&lt;/p&gt;

&lt;p&gt;所以，最终我认为可行的方案是淘宝代抽 ePlus 会员先行，如果不行就走 Rakuten 普通购买。据我观察，至少到了名古屋场前一周，票都是还能买的，如果淡定一点还是可以选择 Rakuten 的。不过由于要预定行程，我很不淡定，所以决定尽早买选择了淘宝代抽 ePlus。&lt;/p&gt;

&lt;p&gt;淘宝代抽票抽一次40元，但支付汇率比较坑，算起来基本上得比原价高上个100多。果然代抽本质上还是票贩子啊！&lt;/p&gt;

&lt;h2 id=&quot;前往福冈&quot;&gt;前往福冈&lt;/h2&gt;

&lt;p&gt;这是我第二次来到福冈，第一次是2017年元旦坐邮轮，只在运河城吃了拉面逛了街，但整体来说印象挺好的。尤其喜欢福冈街边和公园栽种的各种小花，清新且美观。此时必须实名批评一下，北京路边的花总是很蔫。&lt;/p&gt;

&lt;p&gt;这次买的机票是国航 CA953/CA954 往返，经停大连到福冈。自从大兴机场即将开业，随之南航和东航都宣布入驻，我就决定 All-in 国航，毕竟住在靠近三元桥的区域没理由不去首都机场。&lt;/p&gt;

&lt;p&gt;回到正题，CA953 是个比较奇特的飞机，在T3国内出发用护照办理国内航班手续，到大连出海关。&lt;/p&gt;

&lt;p&gt;这次最明智的就是带上了旅行枕，大早上5点起床，在机场候机室和飞机上各睡了半个小时，起来缓了一会就到了大连。大连机场旁边居然都是正常低层住宅楼。&lt;/p&gt;

&lt;p&gt;在大连的出海关由于是在国际航站楼内的特殊通道非常快捷，一分钟搞定。在大连机场等待了几十分钟，上了飞机又睡了一小时，补充了两小时后基本达到了日常的睡眠量。&lt;/p&gt;

&lt;p&gt;下了飞机，由于看过攻略，福冈机场很大国际航站楼到地铁的时间都要10分钟穿梭巴士。我选直接坐巴士从国际航站楼去博多，也就10多分钟。&lt;/p&gt;

&lt;p&gt;由于 Airbnb 的 check-in 未到时间，于是我直接来到博多站附近的全家取票和购物。&lt;/p&gt;

&lt;h2 id=&quot;取票&quot;&gt;取票&lt;/h2&gt;

&lt;p&gt;在 ePlus 购票是在全家 FamilyMart 取票，全家这里简称为 famima，日本的迷之有趣缩写。&lt;/p&gt;

&lt;p&gt;在机器上一波操作，要先有两个步骤进入到输入“払込票番号”提取码的界面，输入正确后会打印一张很长的单子，拿好去结账处让店员收钱给票。同时，我还买了一把怨念已久的透明伞和在日本日常喝的可尔必思。买的东西和取票费是分开算，取票费单收108日元。店员会去柜台一个机器打印好，票会装在一个信封给你。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/nogizaka-fukuoka-ticket.png&quot; alt=&quot;乃木坂46门票&quot; /&gt;&lt;/p&gt;

&lt;p&gt;票位于是三垒侧，也就是演出台平行的左侧，应该比较坑。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;未完待续，敬请期待：&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/page/nogizaka-46-fukuoka-2.html&quot;&gt;福冈之旅——乃木坂演唱会（下）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate>
        <link>https://crispgm.com/page/nogizaka-46-fukuoka-1.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/nogizaka-46-fukuoka-1.html</guid>
        
        
      </item>
      
    
      
      <item>
        <title>大阪之旅</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;2019年清明期间大阪之旅游记，记录一下心情。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;今年年初如愿以偿获得了日本三年多次旅行签证，心想着可以周末就可以去日本玩。但现实并没有这么好，不得不赶在清明节买着超贵的樱花季机票出发，第二次前往关西机场。这次主要在大阪活动，中间会有一天去京都拍摄婚纱照。&lt;/p&gt;

&lt;h3 id=&quot;大阪再次相遇&quot;&gt;大阪，再次相遇&lt;/h3&gt;

&lt;p&gt;大阪是一个有趣的城市，比起东京，他更加杂乱没那么强的高级感和精致感，至少難波附近时这样的。在这里不会像在东京一样让人那么羡慕和惭愧，感觉自己住的城市是什么破玩意。而是觉得我也想在这里生活——在这里很容易感受到足够的生活气氛。&lt;/p&gt;

&lt;p&gt;况且，大阪还盛产偶像，比如 NMB48 的 Top 成员山本彩，刚刚毕业的乃木坂46 Ace 成员西野七濑等。&lt;/p&gt;

&lt;p&gt;第一次来住在浪速，这次住在難波，几乎是挨着的，所以比较熟悉。这次的酒店据称是情趣酒店改造的，房间面积大的惊人，可以轻松铺开行李箱。同 NMB48 剧场只隔了一条街。&lt;/p&gt;

&lt;p&gt;大阪難波这边的街道非常密集，楼也不是太高，有种老城区的感觉。到了晚上，街上飘满了烤肉的味道，让人不可避免的得选一家吃起来。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/osaka-street1.jpg&quot; alt=&quot;大阪街道&quot; style=&quot;width: 360px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;餐馆数量十分可观，竞争似乎也很激烈，毕竟在一家烧肉店门口看到“女装大佬”店员拉客，为了生存也太拼了。&lt;/p&gt;

&lt;p&gt;药妆店为了引起注意，还搞起了自己的女团，让女性工作人员跳舞。舞蹈动作比较简单，旁边还挂上了妹子的 Twitter。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/osaka-dancing-girl.gif&quot; alt=&quot;大阪药妆店跳舞&quot; style=&quot;width: 360px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;日本特色井盖文化：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/osaka-manhole-cover.jpg&quot; alt=&quot;大阪井盖&quot; style=&quot;width: 360px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;大阪也不能没有二次元，虽然这里不是秋叶原，但靠近浪速那片也十分多动漫、游戏和玩具手办店。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/osaka-street2.jpg&quot; alt=&quot;大阪街道二次元&quot; style=&quot;width: 360px;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;神户牛&quot;&gt;神户牛&lt;/h3&gt;

&lt;p&gt;此次到日本，我有一个心愿就是吃到铁板和牛。主要原因是关注了 &lt;a href=&quot;https://www.youtube.com/channel/UCu9g5OmzcCpcJnmSYyHnIVw&quot;&gt;AdenFilms&lt;/a&gt; — 一个专注拍摄美食制作的 YouTube 频道，它比较喜欢拍的题材就是和牛铁板烧。看多了自然也想体验一下铁板烧和牛以及龙虾。&lt;/p&gt;

&lt;p&gt;去到一家店点评上还行的店，这家店里到处都是各种获奖称号。之后才发现他们专门为游客优化了流程，其中一个环节就是上了牛肉后摆上获奖牌子让食客们合影。&lt;/p&gt;

&lt;p&gt;一套2人牛肉的套餐花了大约 RMB¥1903。的确入口即化，但真的是腻，吃了之后稍微有些不适。不得不终止活动，回到房间午休了之后才“缓”过来。&lt;/p&gt;

&lt;p&gt;总之，这未免让人觉得有些被坑。以后有机会要再尝试一次铁板和牛，确定是自己不适合还是的确被坑了。&lt;/p&gt;

&lt;h3 id=&quot;京都风情&quot;&gt;京都风情&lt;/h3&gt;

&lt;p&gt;中间一天去京都。&lt;/p&gt;

&lt;p&gt;按照我强行的联想，京都比较像欧美城市，繁华的市区没多大，其它地方都是“郊区”，有很多一户建和 Town House。不像日本其它的大都市一样，塞满了密密麻麻的楼。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/kyoto-street.jpg&quot; alt=&quot;Kyoto Street&quot; style=&quot;width: 360px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;由于也就呆了半天且大部分时间都在拍摄婚纱照，因此没有玩什么，这里放张图就先略过。&lt;/p&gt;

&lt;h3 id=&quot;桜之宮&quot;&gt;桜之宮&lt;/h3&gt;

&lt;p&gt;最后一天回到大阪。&lt;/p&gt;

&lt;p&gt;旅游时，适合游客打卡的地点一定要去，因为有游客出现可以说明这是个值得去地方。但一些本地人喜欢去的地方才是我更喜欢的，人或许会少很多，并且能体验原汁原味的感觉。比如，参加花见（其实我是围观日本人花见）。&lt;/p&gt;

&lt;p&gt;去 Google 用英文搜了欣赏樱花的地点，我在推荐的结果中选择了”Kema Sakuranomiya Park”，日文为毛馬桜之宮公園。这个公园离我住的難波地区并不远，还位于河边，想必景色不错。&lt;/p&gt;

&lt;p&gt;到了现场才发现，这个地方没有找错，这是个花见场所。记得第一次去东京时，去旅游打卡景点上野公园看樱花，发现日本人纷纷带着野餐在草地上席地而坐，回去问了下才知道这就是花见。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/osaka-hanami.jpg&quot; alt=&quot;Osaka Hanami&quot; /&gt;&lt;/p&gt;

&lt;p&gt;活动的路线从源八橋过河开始，到大川东岸沿着河边徒步行走。河边竟然同布里斯班 South Bank 一样，有一个沙滩，有很多人在玩沙滩排球。&lt;/p&gt;

&lt;p&gt;由于今年春季寒流较强，樱花都到了4月还没满开，河边景色的樱花也是如此，比较稀疏，只好多拍拍特写。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/osaka-sakura1.jpg&quot; alt=&quot;Osaka Sakura&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://crispgm.com/image/osaka-sakuranomiya-bridge.jpg&quot; alt=&quot;Osaka Sakuranomiya Bridge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一路走到天満橋駅，搭乘地铁回家。&lt;/p&gt;

&lt;h3 id=&quot;结束&quot;&gt;结束&lt;/h3&gt;

&lt;p&gt;大阪之旅再次匆匆忙忙结束了。对于旅行，我从来都是选择度假的节奏，行程最好只有一个目的地，早上睡得比较充足后出去闲逛、购物。景点随缘，注重饮食和体验当地的生活。&lt;/p&gt;

&lt;p&gt;因此，即使是第二次去，即使是就在市区居住，也不会觉得腻。我觉得我在生活，没有工作压力的状态下生活。以后还会再来。&lt;/p&gt;

&lt;p&gt;并且最近看了司马辽太郎一系列日本战国小说，了解了不少关于京都、大阪、岐阜、姬路等古城的故事，有机会也要慢慢探索。&lt;/p&gt;

&lt;p&gt;不过，最近的下次旅行应该是福冈周末游，因为我抽选到了乃木坂46真夏の全国演唱会的票。年初定的一个小小心愿，没想到真的要达成了。完毕后，我也会写一篇游记。&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Jul 2019 00:00:00 +0000</pubDate>
        <link>https://crispgm.com/page/osaka-trip.html</link>
        <guid isPermaLink="true">https://crispgm.com/page/osaka-trip.html</guid>
        
        
      </item>
      
    
  </channel>
</rss>
